{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  function bracketFolding(pairs) {\n    return function (cm, start) {\n      var line = start.line,\n        lineText = cm.getLine(line);\n      function findOpening(pair) {\n        var tokenType;\n        for (var at = start.ch, pass = 0;;) {\n          var found = at <= 0 ? -1 : lineText.lastIndexOf(pair[0], at - 1);\n          if (found == -1) {\n            if (pass == 1) break;\n            pass = 1;\n            at = lineText.length;\n            continue;\n          }\n          if (pass == 1 && found < start.ch) break;\n          tokenType = cm.getTokenTypeAt(CodeMirror.Pos(line, found + 1));\n          if (!/^(comment|string)/.test(tokenType)) return {\n            ch: found + 1,\n            tokenType: tokenType,\n            pair: pair\n          };\n          at = found - 1;\n        }\n      }\n      function findRange(found) {\n        var count = 1,\n          lastLine = cm.lastLine(),\n          end,\n          startCh = found.ch,\n          endCh;\n        outer: for (var i = line; i <= lastLine; ++i) {\n          var text = cm.getLine(i),\n            pos = i == line ? startCh : 0;\n          for (;;) {\n            var nextOpen = text.indexOf(found.pair[0], pos),\n              nextClose = text.indexOf(found.pair[1], pos);\n            if (nextOpen < 0) nextOpen = text.length;\n            if (nextClose < 0) nextClose = text.length;\n            pos = Math.min(nextOpen, nextClose);\n            if (pos == text.length) break;\n            if (cm.getTokenTypeAt(CodeMirror.Pos(i, pos + 1)) == found.tokenType) {\n              if (pos == nextOpen) ++count;else if (! --count) {\n                end = i;\n                endCh = pos;\n                break outer;\n              }\n            }\n            ++pos;\n          }\n        }\n        if (end == null || line == end) return null;\n        return {\n          from: CodeMirror.Pos(line, startCh),\n          to: CodeMirror.Pos(end, endCh)\n        };\n      }\n      var found = [];\n      for (var i = 0; i < pairs.length; i++) {\n        var open = findOpening(pairs[i]);\n        if (open) found.push(open);\n      }\n      found.sort(function (a, b) {\n        return a.ch - b.ch;\n      });\n      for (var i = 0; i < found.length; i++) {\n        var range = findRange(found[i]);\n        if (range) return range;\n      }\n      return null;\n    };\n  }\n  CodeMirror.registerHelper(\"fold\", \"brace\", bracketFolding([[\"{\", \"}\"], [\"[\", \"]\"]]));\n  CodeMirror.registerHelper(\"fold\", \"brace-paren\", bracketFolding([[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]]));\n  CodeMirror.registerHelper(\"fold\", \"import\", function (cm, start) {\n    function hasImport(line) {\n      if (line < cm.firstLine() || line > cm.lastLine()) return null;\n      var start = cm.getTokenAt(CodeMirror.Pos(line, 1));\n      if (!/\\S/.test(start.string)) start = cm.getTokenAt(CodeMirror.Pos(line, start.end + 1));\n      if (start.type != \"keyword\" || start.string != \"import\") return null;\n      // Now find closing semicolon, return its position\n      for (var i = line, e = Math.min(cm.lastLine(), line + 10); i <= e; ++i) {\n        var text = cm.getLine(i),\n          semi = text.indexOf(\";\");\n        if (semi != -1) return {\n          startCh: start.end,\n          end: CodeMirror.Pos(i, semi)\n        };\n      }\n    }\n    var startLine = start.line,\n      has = hasImport(startLine),\n      prev;\n    if (!has || hasImport(startLine - 1) || (prev = hasImport(startLine - 2)) && prev.end.line == startLine - 1) return null;\n    for (var end = has.end;;) {\n      var next = hasImport(end.line + 1);\n      if (next == null) break;\n      end = next.end;\n    }\n    return {\n      from: cm.clipPos(CodeMirror.Pos(startLine, has.startCh + 1)),\n      to: end\n    };\n  });\n  CodeMirror.registerHelper(\"fold\", \"include\", function (cm, start) {\n    function hasInclude(line) {\n      if (line < cm.firstLine() || line > cm.lastLine()) return null;\n      var start = cm.getTokenAt(CodeMirror.Pos(line, 1));\n      if (!/\\S/.test(start.string)) start = cm.getTokenAt(CodeMirror.Pos(line, start.end + 1));\n      if (start.type == \"meta\" && start.string.slice(0, 8) == \"#include\") return start.start + 8;\n    }\n    var startLine = start.line,\n      has = hasInclude(startLine);\n    if (has == null || hasInclude(startLine - 1) != null) return null;\n    for (var end = startLine;;) {\n      var next = hasInclude(end + 1);\n      if (next == null) break;\n      ++end;\n    }\n    return {\n      from: CodeMirror.Pos(startLine, has + 1),\n      to: cm.clipPos(CodeMirror.Pos(end))\n    };\n  });\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","bracketFolding","pairs","cm","start","line","lineText","getLine","findOpening","pair","tokenType","at","ch","pass","found","lastIndexOf","length","getTokenTypeAt","Pos","test","findRange","count","lastLine","end","startCh","endCh","outer","i","text","pos","nextOpen","indexOf","nextClose","Math","min","from","to","open","push","sort","a","b","range","registerHelper","hasImport","firstLine","getTokenAt","string","type","e","semi","startLine","has","prev","next","clipPos","hasInclude","slice"],"sources":["D:/web2/jekedao_front/node_modules/codemirror/addon/fold/brace-fold.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction bracketFolding(pairs) {\n  return function(cm, start) {\n    var line = start.line, lineText = cm.getLine(line);\n\n    function findOpening(pair) {\n      var tokenType;\n      for (var at = start.ch, pass = 0;;) {\n        var found = at <= 0 ? -1 : lineText.lastIndexOf(pair[0], at - 1);\n        if (found == -1) {\n          if (pass == 1) break;\n          pass = 1;\n          at = lineText.length;\n          continue;\n        }\n        if (pass == 1 && found < start.ch) break;\n        tokenType = cm.getTokenTypeAt(CodeMirror.Pos(line, found + 1));\n        if (!/^(comment|string)/.test(tokenType)) return {ch: found + 1, tokenType: tokenType, pair: pair};\n        at = found - 1;\n      }\n    }\n\n    function findRange(found) {\n      var count = 1, lastLine = cm.lastLine(), end, startCh = found.ch, endCh\n      outer: for (var i = line; i <= lastLine; ++i) {\n        var text = cm.getLine(i), pos = i == line ? startCh : 0;\n        for (;;) {\n          var nextOpen = text.indexOf(found.pair[0], pos), nextClose = text.indexOf(found.pair[1], pos);\n          if (nextOpen < 0) nextOpen = text.length;\n          if (nextClose < 0) nextClose = text.length;\n          pos = Math.min(nextOpen, nextClose);\n          if (pos == text.length) break;\n          if (cm.getTokenTypeAt(CodeMirror.Pos(i, pos + 1)) == found.tokenType) {\n            if (pos == nextOpen) ++count;\n            else if (!--count) { end = i; endCh = pos; break outer; }\n          }\n          ++pos;\n        }\n      }\n\n      if (end == null || line == end) return null\n      return {from: CodeMirror.Pos(line, startCh),\n              to: CodeMirror.Pos(end, endCh)};\n    }\n\n    var found = []\n    for (var i = 0; i < pairs.length; i++) {\n      var open = findOpening(pairs[i])\n      if (open) found.push(open)\n    }\n    found.sort(function(a, b) { return a.ch - b.ch })\n    for (var i = 0; i < found.length; i++) {\n      var range = findRange(found[i])\n      if (range) return range\n    }\n    return null\n  }\n}\n\nCodeMirror.registerHelper(\"fold\", \"brace\", bracketFolding([[\"{\", \"}\"], [\"[\", \"]\"]]));\n\nCodeMirror.registerHelper(\"fold\", \"brace-paren\", bracketFolding([[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]]));\n\nCodeMirror.registerHelper(\"fold\", \"import\", function(cm, start) {\n  function hasImport(line) {\n    if (line < cm.firstLine() || line > cm.lastLine()) return null;\n    var start = cm.getTokenAt(CodeMirror.Pos(line, 1));\n    if (!/\\S/.test(start.string)) start = cm.getTokenAt(CodeMirror.Pos(line, start.end + 1));\n    if (start.type != \"keyword\" || start.string != \"import\") return null;\n    // Now find closing semicolon, return its position\n    for (var i = line, e = Math.min(cm.lastLine(), line + 10); i <= e; ++i) {\n      var text = cm.getLine(i), semi = text.indexOf(\";\");\n      if (semi != -1) return {startCh: start.end, end: CodeMirror.Pos(i, semi)};\n    }\n  }\n\n  var startLine = start.line, has = hasImport(startLine), prev;\n  if (!has || hasImport(startLine - 1) || ((prev = hasImport(startLine - 2)) && prev.end.line == startLine - 1))\n    return null;\n  for (var end = has.end;;) {\n    var next = hasImport(end.line + 1);\n    if (next == null) break;\n    end = next.end;\n  }\n  return {from: cm.clipPos(CodeMirror.Pos(startLine, has.startCh + 1)), to: end};\n});\n\nCodeMirror.registerHelper(\"fold\", \"include\", function(cm, start) {\n  function hasInclude(line) {\n    if (line < cm.firstLine() || line > cm.lastLine()) return null;\n    var start = cm.getTokenAt(CodeMirror.Pos(line, 1));\n    if (!/\\S/.test(start.string)) start = cm.getTokenAt(CodeMirror.Pos(line, start.end + 1));\n    if (start.type == \"meta\" && start.string.slice(0, 8) == \"#include\") return start.start + 8;\n  }\n\n  var startLine = start.line, has = hasInclude(startLine);\n  if (has == null || hasInclude(startLine - 1) != null) return null;\n  for (var end = startLine;;) {\n    var next = hasInclude(end + 1);\n    if (next == null) break;\n    ++end;\n  }\n  return {from: CodeMirror.Pos(startLine, has + 1),\n          to: cm.clipPos(CodeMirror.Pos(end))};\n});\n\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}