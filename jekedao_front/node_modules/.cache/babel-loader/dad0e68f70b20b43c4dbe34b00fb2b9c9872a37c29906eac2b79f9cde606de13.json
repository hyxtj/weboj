{"ast":null,"code":"import axios from '@/axios';\nexport default {\n  name: 'CommentComponent',\n  props: {\n    discussionId: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      comments: [],\n      newComment: ''\n    };\n  },\n  created() {\n    this.fetchComments();\n  },\n  methods: {\n    fetchComments() {\n      axios.get(`/discussions/${this.discussionId}/comments`).then(response => {\n        if (response.data.code === 200) {\n          this.comments = response.data.data;\n        } else {\n          this.$message.error(response.data.msg || '获取评论列表失败');\n        }\n      }).catch(error => {\n        console.error('获取评论列表失败:', error);\n        this.$message.error('获取评论列表失败，请重试');\n      });\n    },\n    submitComment() {\n      if (!this.newComment) {\n        this.$message.error('评论内容为必填项');\n        return;\n      }\n      axios.post(`/discussions/${this.discussionId}/comments`, {\n        content: this.newComment\n      }).then(response => {\n        if (response.data.code === 201) {\n          this.$message.success('评论发布成功');\n          this.newComment = '';\n          this.fetchComments();\n        } else {\n          this.$message.error(response.data.msg || '评论发布失败');\n        }\n      }).catch(error => {\n        console.error('评论发布失败:', error);\n        this.$message.error('评论发布失败，请重试');\n      });\n    },\n    formatDate(dateStr) {\n      const date = new Date(dateStr);\n      return date.toLocaleString();\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","discussionId","type","Number","required","data","comments","newComment","created","fetchComments","methods","get","then","response","code","$message","error","msg","catch","console","submitComment","post","content","success","formatDate","dateStr","date","Date","toLocaleString"],"sources":["src/components/CommentComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"comment-component\">\r\n      <h3>评论区</h3>\r\n      <div v-for=\"comment in comments\" :key=\"comment.id\" class=\"comment\">\r\n        <p>{{ comment.author }}: {{ comment.content }}</p>\r\n        <p class=\"comment-time\">{{ formatDate(comment.publish_time) }}</p>\r\n      </div>\r\n      <el-form @submit.native.prevent=\"submitComment\">\r\n        <el-form-item label=\"评论内容\">\r\n          <el-input type=\"textarea\" v-model=\"newComment\" placeholder=\"请输入评论内容\"></el-input>\r\n        </el-form-item>\r\n        <el-button type=\"primary\" @click=\"submitComment\">发布评论</el-button>\r\n      </el-form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from '@/axios';\r\n  \r\n  export default {\r\n    name: 'CommentComponent',\r\n    props: {\r\n      discussionId: {\r\n        type: Number,\r\n        required: true\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        comments: [],\r\n        newComment: ''\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchComments();\r\n    },\r\n    methods: {\r\n      fetchComments() {\r\n        axios.get(`/discussions/${this.discussionId}/comments`)\r\n          .then(response => {\r\n            if (response.data.code === 200) {\r\n              this.comments = response.data.data;\r\n            } else {\r\n              this.$message.error(response.data.msg || '获取评论列表失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('获取评论列表失败:', error);\r\n            this.$message.error('获取评论列表失败，请重试');\r\n          });\r\n      },\r\n      submitComment() {\r\n        if (!this.newComment) {\r\n          this.$message.error('评论内容为必填项');\r\n          return;\r\n        }\r\n  \r\n        axios.post(`/discussions/${this.discussionId}/comments`, { content: this.newComment })\r\n          .then(response => {\r\n            if (response.data.code === 201) {\r\n              this.$message.success('评论发布成功');\r\n              this.newComment = '';\r\n              this.fetchComments();\r\n            } else {\r\n              this.$message.error(response.data.msg || '评论发布失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('评论发布失败:', error);\r\n            this.$message.error('评论发布失败，请重试');\r\n          });\r\n      },\r\n      formatDate(dateStr) {\r\n        const date = new Date(dateStr);\r\n        return date.toLocaleString();\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .comment-component {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .comment {\r\n    margin-bottom: 10px;\r\n    padding: 10px;\r\n    background-color: #f9f9f9;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  .comment-time {\r\n    font-size: 12px;\r\n    color: #999;\r\n  }\r\n  </style>"],"mappings":"AAiBA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,YAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;EACA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAD,cAAA;MACAX,KAAA,CAAAa,GAAA,sBAAAV,YAAA,aACAW,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAR,IAAA,CAAAS,IAAA;UACA,KAAAR,QAAA,GAAAO,QAAA,CAAAR,IAAA,CAAAA,IAAA;QACA;UACA,KAAAU,QAAA,CAAAC,KAAA,CAAAH,QAAA,CAAAR,IAAA,CAAAY,GAAA;QACA;MACA,GACAC,KAAA,CAAAF,KAAA;QACAG,OAAA,CAAAH,KAAA,cAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACAI,cAAA;MACA,UAAAb,UAAA;QACA,KAAAQ,QAAA,CAAAC,KAAA;QACA;MACA;MAEAlB,KAAA,CAAAuB,IAAA,sBAAApB,YAAA;QAAAqB,OAAA,OAAAf;MAAA,GACAK,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAR,IAAA,CAAAS,IAAA;UACA,KAAAC,QAAA,CAAAQ,OAAA;UACA,KAAAhB,UAAA;UACA,KAAAE,aAAA;QACA;UACA,KAAAM,QAAA,CAAAC,KAAA,CAAAH,QAAA,CAAAR,IAAA,CAAAY,GAAA;QACA;MACA,GACAC,KAAA,CAAAF,KAAA;QACAG,OAAA,CAAAH,KAAA,YAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACAQ,WAAAC,OAAA;MACA,MAAAC,IAAA,OAAAC,IAAA,CAAAF,OAAA;MACA,OAAAC,IAAA,CAAAE,cAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}