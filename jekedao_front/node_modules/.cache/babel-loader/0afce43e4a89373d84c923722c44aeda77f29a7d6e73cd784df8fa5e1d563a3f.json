{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from '@/axios';\nexport default {\n  name: 'ContestDetail',\n  data() {\n    return {\n      contest: {}\n    };\n  },\n  created() {\n    const contestId = this.$route.params.id;\n    this.fetchContest(contestId);\n  },\n  methods: {\n    fetchContest(contestId) {\n      axios.get(`/contests/${contestId}`).then(response => {\n        if (response.data.code === 200) {\n          this.contest = response.data.data;\n        } else {\n          this.$message.error(response.data.msg || '获取比赛详情失败');\n        }\n      }).catch(error => {\n        console.error('获取比赛详情失败:', error);\n        this.$message.error('获取比赛详情失败，请重试');\n      });\n    },\n    formatDate(dateStr) {\n      const date = new Date(dateStr);\n      return date.toLocaleString();\n    },\n    drawStars() {\n      var canvas = document.getElementById('starfield'),\n        context = canvas.getContext('2d'),\n        stars = [],\n        stars_count = 800;\n      function ini() {\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        stars = [];\n        makeStars();\n      }\n      function makeStars() {\n        for (var i = 0; i < stars_count; i++) {\n          let x = Math.random() * canvas.offsetWidth;\n          let y = Math.random() * canvas.offsetHeight;\n          let radius = Math.random() * 0.8;\n          let color = \"rgba(\" + Math.random() * 255 + \",\" + Math.random() * 255 + \",\" + Math.random() * 255 + \",0.8)\";\n          let speed = Math.random() * 0.5;\n          stars.push({\n            x,\n            y,\n            radius,\n            color,\n            speed\n          });\n        }\n      }\n      function drawStars() {\n        context.fillStyle = \"#0e1729\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        for (var i = 0; i < stars.length; i++) {\n          var x = stars[i].x - stars[i].speed;\n          if (x < -2 * stars[i].radius) x = canvas.width;\n          stars[i].x = x;\n          var y = stars[i].y;\n          var radius = stars[i].radius;\n          context.beginPath();\n          context.arc(x, y, radius * 2, 0, 2 * Math.PI);\n          context.fillStyle = stars[i].color;\n          context.fill();\n        }\n      }\n      ini();\n      setInterval(drawStars, 50);\n      window.onresize = ini;\n    }\n  },\n  mounted() {\n    this.drawStars();\n  }\n};","map":{"version":3,"names":["axios","name","data","contest","created","contestId","$route","params","id","fetchContest","methods","get","then","response","code","$message","error","msg","catch","console","formatDate","dateStr","date","Date","toLocaleString","drawStars","canvas","document","getElementById","context","getContext","stars","stars_count","ini","width","window","innerWidth","height","innerHeight","makeStars","i","x","Math","random","offsetWidth","y","offsetHeight","radius","color","speed","push","fillStyle","fillRect","length","beginPath","arc","PI","fill","setInterval","onresize","mounted"],"sources":["src/components/ContestDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"contest-detail\">\r\n    <canvas id=\"starfield\"></canvas>\r\n    <div class=\"content\">\r\n      <h1>{{ contest.name }}</h1>\r\n      <p>{{ contest.description }}</p>\r\n      <p>创建时间: {{ formatDate(contest.created_at) }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from '@/axios';\r\n\r\nexport default {\r\n  name: 'ContestDetail',\r\n  data() {\r\n    return {\r\n      contest: {}\r\n    };\r\n  },\r\n  created() {\r\n    const contestId = this.$route.params.id;\r\n    this.fetchContest(contestId);\r\n  },\r\n  methods: {\r\n    fetchContest(contestId) {\r\n      axios.get(`/contests/${contestId}`)\r\n        .then(response => {\r\n          if (response.data.code === 200) {\r\n            this.contest = response.data.data;\r\n          } else {\r\n            this.$message.error(response.data.msg || '获取比赛详情失败');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('获取比赛详情失败:', error);\r\n          this.$message.error('获取比赛详情失败，请重试');\r\n        });\r\n    },\r\n    formatDate(dateStr) {\r\n      const date = new Date(dateStr);\r\n      return date.toLocaleString();\r\n    },\r\n    drawStars() {\r\n      var canvas = document.getElementById('starfield'),\r\n        context = canvas.getContext('2d'),\r\n        stars = [],\r\n        stars_count = 800;\r\n\r\n      function ini() {\r\n        canvas.width = window.innerWidth;\r\n        canvas.height = window.innerHeight;\r\n        stars = [];\r\n        makeStars();\r\n      }\r\n\r\n      function makeStars() {\r\n        for (var i = 0; i < stars_count; i++) {\r\n          let x = Math.random() * canvas.offsetWidth;\r\n          let y = Math.random() * canvas.offsetHeight;\r\n          let radius = Math.random() * 0.8;\r\n          let color = \"rgba(\" + Math.random() * 255 + \",\" + Math.random() * 255 + \",\" + Math.random() * 255 + \",0.8)\";\r\n          let speed = Math.random() * 0.5;\r\n          stars.push({ x, y, radius, color, speed });\r\n        }\r\n      }\r\n\r\n      function drawStars() {\r\n        context.fillStyle = \"#0e1729\";\r\n        context.fillRect(0, 0, canvas.width, canvas.height);\r\n        for (var i = 0; i < stars.length; i++) {\r\n          var x = stars[i].x - stars[i].speed;\r\n          if (x < -2 * stars[i].radius) x = canvas.width;\r\n          stars[i].x = x;\r\n          var y = stars[i].y;\r\n          var radius = stars[i].radius;\r\n          context.beginPath();\r\n          context.arc(x, y, radius * 2, 0, 2 * Math.PI);\r\n          context.fillStyle = stars[i].color;\r\n          context.fill();\r\n        }\r\n      }\r\n\r\n      ini();\r\n      setInterval(drawStars, 50);\r\n      window.onresize = ini;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.drawStars();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: 'KaiTi', serif;\r\n}\r\n\r\nhtml, body, #app {\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\ncanvas {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: -6;\r\n  background: #0e1729;\r\n}\r\n\r\n.contest-detail {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 20px;\r\n  position: relative;\r\n  z-index: 1;\r\n  min-height: 100vh;\r\n}\r\n\r\n.content {\r\n  background: rgba(255, 255, 255, 0.9);\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.5);\r\n  color: #333;\r\n  max-width: 600px;\r\n  text-align: center;\r\n}\r\n\r\nh1 {\r\n  color: #333;\r\n}\r\n\r\np {\r\n  color: #666;\r\n}\r\n</style>"],"mappings":";AAYA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,MAAAC,SAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;IACA,KAAAC,YAAA,CAAAJ,SAAA;EACA;EACAK,OAAA;IACAD,aAAAJ,SAAA;MACAL,KAAA,CAAAW,GAAA,cAAAN,SAAA,IACAO,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAX,IAAA,CAAAY,IAAA;UACA,KAAAX,OAAA,GAAAU,QAAA,CAAAX,IAAA,CAAAA,IAAA;QACA;UACA,KAAAa,QAAA,CAAAC,KAAA,CAAAH,QAAA,CAAAX,IAAA,CAAAe,GAAA;QACA;MACA,GACAC,KAAA,CAAAF,KAAA;QACAG,OAAA,CAAAH,KAAA,cAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACAI,WAAAC,OAAA;MACA,MAAAC,IAAA,OAAAC,IAAA,CAAAF,OAAA;MACA,OAAAC,IAAA,CAAAE,cAAA;IACA;IACAC,UAAA;MACA,IAAAC,MAAA,GAAAC,QAAA,CAAAC,cAAA;QACAC,OAAA,GAAAH,MAAA,CAAAI,UAAA;QACAC,KAAA;QACAC,WAAA;MAEA,SAAAC,IAAA;QACAP,MAAA,CAAAQ,KAAA,GAAAC,MAAA,CAAAC,UAAA;QACAV,MAAA,CAAAW,MAAA,GAAAF,MAAA,CAAAG,WAAA;QACAP,KAAA;QACAQ,SAAA;MACA;MAEA,SAAAA,UAAA;QACA,SAAAC,CAAA,MAAAA,CAAA,GAAAR,WAAA,EAAAQ,CAAA;UACA,IAAAC,CAAA,GAAAC,IAAA,CAAAC,MAAA,KAAAjB,MAAA,CAAAkB,WAAA;UACA,IAAAC,CAAA,GAAAH,IAAA,CAAAC,MAAA,KAAAjB,MAAA,CAAAoB,YAAA;UACA,IAAAC,MAAA,GAAAL,IAAA,CAAAC,MAAA;UACA,IAAAK,KAAA,aAAAN,IAAA,CAAAC,MAAA,iBAAAD,IAAA,CAAAC,MAAA,iBAAAD,IAAA,CAAAC,MAAA;UACA,IAAAM,KAAA,GAAAP,IAAA,CAAAC,MAAA;UACAZ,KAAA,CAAAmB,IAAA;YAAAT,CAAA;YAAAI,CAAA;YAAAE,MAAA;YAAAC,KAAA;YAAAC;UAAA;QACA;MACA;MAEA,SAAAxB,UAAA;QACAI,OAAA,CAAAsB,SAAA;QACAtB,OAAA,CAAAuB,QAAA,OAAA1B,MAAA,CAAAQ,KAAA,EAAAR,MAAA,CAAAW,MAAA;QACA,SAAAG,CAAA,MAAAA,CAAA,GAAAT,KAAA,CAAAsB,MAAA,EAAAb,CAAA;UACA,IAAAC,CAAA,GAAAV,KAAA,CAAAS,CAAA,EAAAC,CAAA,GAAAV,KAAA,CAAAS,CAAA,EAAAS,KAAA;UACA,IAAAR,CAAA,QAAAV,KAAA,CAAAS,CAAA,EAAAO,MAAA,EAAAN,CAAA,GAAAf,MAAA,CAAAQ,KAAA;UACAH,KAAA,CAAAS,CAAA,EAAAC,CAAA,GAAAA,CAAA;UACA,IAAAI,CAAA,GAAAd,KAAA,CAAAS,CAAA,EAAAK,CAAA;UACA,IAAAE,MAAA,GAAAhB,KAAA,CAAAS,CAAA,EAAAO,MAAA;UACAlB,OAAA,CAAAyB,SAAA;UACAzB,OAAA,CAAA0B,GAAA,CAAAd,CAAA,EAAAI,CAAA,EAAAE,MAAA,aAAAL,IAAA,CAAAc,EAAA;UACA3B,OAAA,CAAAsB,SAAA,GAAApB,KAAA,CAAAS,CAAA,EAAAQ,KAAA;UACAnB,OAAA,CAAA4B,IAAA;QACA;MACA;MAEAxB,GAAA;MACAyB,WAAA,CAAAjC,SAAA;MACAU,MAAA,CAAAwB,QAAA,GAAA1B,GAAA;IACA;EACA;EACA2B,QAAA;IACA,KAAAnC,SAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}