{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from '@/axios'; // 使用自定义的 Axios 实例\n\nexport default {\n  name: 'LoginComponent',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loading: false\n    };\n  },\n  methods: {\n    handleLogin() {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          axios.post('/login', this.loginForm).then(response => {\n            this.loading = false;\n            if (response.data.code === 200) {\n              this.$message.success(response.data.message);\n              // 存储 Token\n              localStorage.setItem('access_token', response.data.access_token);\n              // 跳转到用户仪表盘\n              this.$router.push('/dashboard');\n              // 触发全局事件，通知其他组件更新登录状态\n              const event = new Event('user-login-status-change');\n              window.dispatchEvent(event);\n            } else {\n              this.$message.error(response.data.message || '登录失败');\n            }\n          }).catch(error => {\n            this.loading = false;\n            console.error('登录失败:', error);\n            this.$message.error('登录失败，请重试');\n          });\n        } else {\n          this.$message.error('请完成表单字段的填写');\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","loginForm","username","password","loading","methods","handleLogin","$refs","validate","valid","post","then","response","code","$message","success","message","localStorage","setItem","access_token","$router","push","event","Event","window","dispatchEvent","error","catch","console"],"sources":["src/components/Login.vue"],"sourcesContent":["<!-- src/components/Login.vue -->\r\n\r\n<template>\r\n  <div id=\"app\" class=\"login-container\">\r\n    <el-form :model=\"loginForm\" ref=\"loginForm\" class=\"login-form\" @submit.native.prevent=\"handleLogin\">\r\n      <el-form-item prop=\"username\" :rules=\"[{ required: true, message: '请输入用户名', trigger: 'blur' }]\">\r\n        <el-input v-model=\"loginForm.username\" placeholder=\"用户名\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"password\" :rules=\"[{ required: true, message: '请输入密码', trigger: 'blur' }]\">\r\n        <el-input type=\"password\" v-model=\"loginForm.password\" placeholder=\"密码\" show-password></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"handleLogin\" :loading=\"loading\">登录</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from '@/axios'; // 使用自定义的 Axios 实例\r\n\r\nexport default {\r\n  name: 'LoginComponent',\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      loading: false\r\n    };\r\n  },\r\n  methods: {\r\n    handleLogin() {\r\n      this.$refs.loginForm.validate((valid) => {\r\n        if (valid) {\r\n          this.loading = true;\r\n          axios.post('/login', this.loginForm)\r\n            .then(response => {\r\n              this.loading = false;\r\n              if (response.data.code === 200) {\r\n                this.$message.success(response.data.message);\r\n                // 存储 Token\r\n                localStorage.setItem('access_token', response.data.access_token);\r\n                // 跳转到用户仪表盘\r\n                this.$router.push('/dashboard');\r\n                // 触发全局事件，通知其他组件更新登录状态\r\n                const event = new Event('user-login-status-change');\r\n                window.dispatchEvent(event);\r\n              } else {\r\n                this.$message.error(response.data.message || '登录失败');\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              this.loading = false;\r\n              console.error('登录失败:', error);\r\n              this.$message.error('登录失败，请重试');\r\n            });\r\n        } else {\r\n          this.$message.error('请完成表单字段的填写');\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background: #f5f5f5;\r\n}\r\n\r\n.login-form {\r\n  width: 300px;\r\n  padding: 20px;\r\n  background: #fff;\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);\r\n  border-radius: 8px;\r\n}\r\n</style>"],"mappings":";AAmBA,OAAAA,KAAA;;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACAC,YAAA;MACA,KAAAC,KAAA,CAAAN,SAAA,CAAAO,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAL,OAAA;UACAN,KAAA,CAAAY,IAAA,gBAAAT,SAAA,EACAU,IAAA,CAAAC,QAAA;YACA,KAAAR,OAAA;YACA,IAAAQ,QAAA,CAAAZ,IAAA,CAAAa,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA,CAAAH,QAAA,CAAAZ,IAAA,CAAAgB,OAAA;cACA;cACAC,YAAA,CAAAC,OAAA,iBAAAN,QAAA,CAAAZ,IAAA,CAAAmB,YAAA;cACA;cACA,KAAAC,OAAA,CAAAC,IAAA;cACA;cACA,MAAAC,KAAA,OAAAC,KAAA;cACAC,MAAA,CAAAC,aAAA,CAAAH,KAAA;YACA;cACA,KAAAR,QAAA,CAAAY,KAAA,CAAAd,QAAA,CAAAZ,IAAA,CAAAgB,OAAA;YACA;UACA,GACAW,KAAA,CAAAD,KAAA;YACA,KAAAtB,OAAA;YACAwB,OAAA,CAAAF,KAAA,UAAAA,KAAA;YACA,KAAAZ,QAAA,CAAAY,KAAA;UACA;QACA;UACA,KAAAZ,QAAA,CAAAY,KAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}