{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'UploadProblem',\n  data() {\n    return {\n      form: {\n        id: '',\n        title: '',\n        description: ''\n      },\n      existingIds: [],\n      loading: false,\n      rules: {\n        id: [{\n          required: true,\n          message: '请输入题目ID',\n          trigger: 'blur'\n        }, {\n          type: 'number',\n          message: '题目ID必须是数字',\n          trigger: 'blur'\n        }],\n        title: [{\n          required: true,\n          message: '请输入题目标题',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          message: '标题至少为5个字符',\n          trigger: 'blur'\n        }],\n        description: [{\n          required: true,\n          message: '请输入题目描述',\n          trigger: 'blur'\n        }, {\n          min: 10,\n          message: '描述至少为10个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.fetchExistingIds();\n  },\n  methods: {\n    fetchExistingIds() {\n      axios.get('/problems').then(response => {\n        if (response.data.code === 200) {\n          this.existingIds = response.data.data.map(problem => problem.id);\n        } else {\n          this.$message.error('无法获取现有题目ID');\n        }\n      }).catch(error => {\n        console.error('获取现有题目ID失败:', error);\n        this.$message.error('获取现有题目ID失败');\n      });\n    },\n    submitForm() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          if (this.existingIds.includes(this.form.id)) {\n            this.$message.error('题目ID已存在，请选择其他ID');\n            return;\n          }\n          this.loading = true;\n          axios.post('/problems', this.form, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('access_token')}`\n            }\n          }).then(response => {\n            this.loading = false;\n            if (response.data.code === 200) {\n              this.$message.success('题目上传成功！');\n              this.existingIds.push(this.form.id);\n              this.resetForm();\n            } else {\n              this.$message.error(response.data.message || '题目上传失败');\n            }\n          }).catch(error => {\n            this.loading = false;\n            console.error('题目上传失败:', error);\n            this.$message.error(error.response?.data?.message || '题目上传失败，请重试');\n          });\n        } else {\n          this.$message.error('请完成表单字段的填写');\n          return false;\n        }\n      });\n    },\n    resetForm() {\n      this.$refs.form.resetFields();\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","form","id","title","description","existingIds","loading","rules","required","message","trigger","type","min","created","fetchExistingIds","methods","get","then","response","code","map","problem","$message","error","catch","console","submitForm","$refs","validate","valid","includes","post","headers","Authorization","localStorage","getItem","success","push","resetForm","resetFields"],"sources":["src/components/UploadProblem.vue"],"sourcesContent":["<template>\r\n  <div class=\"upload-problem\">\r\n    <h1>上传题目</h1>\r\n    <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\" @submit.native.prevent=\"submitForm\">\r\n      <el-form-item label=\"题目ID\" prop=\"id\">\r\n        <el-input v-model.number=\"form.id\" type=\"number\" placeholder=\"请输入题目ID\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"题目标题\" prop=\"title\">\r\n        <el-input v-model=\"form.title\" placeholder=\"请输入题目标题\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"题目描述\" prop=\"description\">\r\n        <el-input type=\"textarea\" v-model=\"form.description\" placeholder=\"请输入题目描述\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" :loading=\"loading\" @click=\"submitForm\">提交</el-button>\r\n        <el-button @click=\"resetForm\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'UploadProblem',\r\n  data() {\r\n    return {\r\n      form: {\r\n        id: '',\r\n        title: '',\r\n        description: ''\r\n      },\r\n      existingIds: [],\r\n      loading: false,\r\n      rules: {\r\n        id: [\r\n          { required: true, message: '请输入题目ID', trigger: 'blur' },\r\n          { type: 'number', message: '题目ID必须是数字', trigger: 'blur' }\r\n        ],\r\n        title: [\r\n          { required: true, message: '请输入题目标题', trigger: 'blur' },\r\n          { min: 5, message: '标题至少为5个字符', trigger: 'blur' }\r\n        ],\r\n        description: [\r\n          { required: true, message: '请输入题目描述', trigger: 'blur' },\r\n          { min: 10, message: '描述至少为10个字符', trigger: 'blur' }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchExistingIds();\r\n  },\r\n  methods: {\r\n    fetchExistingIds() {\r\n      axios.get('/problems')\r\n        .then(response => {\r\n          if (response.data.code === 200) {\r\n            this.existingIds = response.data.data.map(problem => problem.id);\r\n          } else {\r\n            this.$message.error('无法获取现有题目ID');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('获取现有题目ID失败:', error);\r\n          this.$message.error('获取现有题目ID失败');\r\n        });\r\n    },\r\n    submitForm() {\r\n      this.$refs.form.validate((valid) => {\r\n        if (valid) {\r\n          if (this.existingIds.includes(this.form.id)) {\r\n            this.$message.error('题目ID已存在，请选择其他ID');\r\n            return;\r\n          }\r\n\r\n          this.loading = true;\r\n          axios.post('/problems', this.form, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('access_token')}`\r\n            }\r\n          })\r\n          .then(response => {\r\n            this.loading = false;\r\n            if (response.data.code === 200) {\r\n              this.$message.success('题目上传成功！');\r\n              this.existingIds.push(this.form.id);\r\n              this.resetForm();\r\n            } else {\r\n              this.$message.error(response.data.message || '题目上传失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            this.loading = false;\r\n            console.error('题目上传失败:', error);\r\n            this.$message.error(error.response?.data?.message || '题目上传失败，请重试');\r\n          });\r\n        } else {\r\n          this.$message.error('请完成表单字段的填写');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    resetForm() {\r\n      this.$refs.form.resetFields();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.upload-problem {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n</style>"],"mappings":";AAsBA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,EAAA;QACAC,KAAA;QACAC,WAAA;MACA;MACAC,WAAA;MACAC,OAAA;MACAC,KAAA;QACAL,EAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,IAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAP,KAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAE,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAN,WAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAE,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAG,QAAA;IACA,KAAAC,gBAAA;EACA;EACAC,OAAA;IACAD,iBAAA;MACAhB,KAAA,CAAAkB,GAAA,cACAC,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAlB,IAAA,CAAAmB,IAAA;UACA,KAAAd,WAAA,GAAAa,QAAA,CAAAlB,IAAA,CAAAA,IAAA,CAAAoB,GAAA,CAAAC,OAAA,IAAAA,OAAA,CAAAnB,EAAA;QACA;UACA,KAAAoB,QAAA,CAAAC,KAAA;QACA;MACA,GACAC,KAAA,CAAAD,KAAA;QACAE,OAAA,CAAAF,KAAA,gBAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACAG,WAAA;MACA,KAAAC,KAAA,CAAA1B,IAAA,CAAA2B,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,SAAAxB,WAAA,CAAAyB,QAAA,MAAA7B,IAAA,CAAAC,EAAA;YACA,KAAAoB,QAAA,CAAAC,KAAA;YACA;UACA;UAEA,KAAAjB,OAAA;UACAR,KAAA,CAAAiC,IAAA,mBAAA9B,IAAA;YACA+B,OAAA;cACAC,aAAA,YAAAC,YAAA,CAAAC,OAAA;YACA;UACA,GACAlB,IAAA,CAAAC,QAAA;YACA,KAAAZ,OAAA;YACA,IAAAY,QAAA,CAAAlB,IAAA,CAAAmB,IAAA;cACA,KAAAG,QAAA,CAAAc,OAAA;cACA,KAAA/B,WAAA,CAAAgC,IAAA,MAAApC,IAAA,CAAAC,EAAA;cACA,KAAAoC,SAAA;YACA;cACA,KAAAhB,QAAA,CAAAC,KAAA,CAAAL,QAAA,CAAAlB,IAAA,CAAAS,OAAA;YACA;UACA,GACAe,KAAA,CAAAD,KAAA;YACA,KAAAjB,OAAA;YACAmB,OAAA,CAAAF,KAAA,YAAAA,KAAA;YACA,KAAAD,QAAA,CAAAC,KAAA,CAAAA,KAAA,CAAAL,QAAA,EAAAlB,IAAA,EAAAS,OAAA;UACA;QACA;UACA,KAAAa,QAAA,CAAAC,KAAA;UACA;QACA;MACA;IACA;IACAe,UAAA;MACA,KAAAX,KAAA,CAAA1B,IAAA,CAAAsC,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}