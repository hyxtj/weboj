{"ast":null,"code":"export default {\n  name: \"ProblemList\",\n  data() {\n    return {\n      activeNames: [],\n      problemLists: [{\n        id: 1,\n        name: \"题单1\",\n        creator: \"用户1\",\n        createTime: \"2023-10-01\",\n        problems: [{\n          id: 1,\n          name: \"题目1\",\n          difficulty: \"简单\",\n          uploadTime: \"2023-10-01\"\n        }, {\n          id: 2,\n          name: \"题目2\",\n          difficulty: \"中等\",\n          uploadTime: \"2023-10-02\"\n        }, {\n          id: 3,\n          name: \"题目3\",\n          difficulty: \"困难\",\n          uploadTime: \"2023-10-03\"\n        }]\n      }, {\n        id: 2,\n        name: \"题单2\",\n        creator: \"用户2\",\n        createTime: \"2023-10-02\",\n        problems: [{\n          id: 4,\n          name: \"题目4\",\n          difficulty: \"简单\",\n          uploadTime: \"2023-10-04\"\n        }, {\n          id: 5,\n          name: \"题目5\",\n          difficulty: \"中等\",\n          uploadTime: \"2023-10-05\"\n        }]\n      }\n      // 可以添加更多题单\n      ]\n    };\n  },\n  methods: {\n    getTagType(difficulty) {\n      switch (difficulty) {\n        case \"简单\":\n          return \"success\";\n        case \"中等\":\n          return \"warning\";\n        case \"困难\":\n          return \"danger\";\n        default:\n          return \"\";\n      }\n    },\n    initDynamicBackground() {\n      const cvs = document.getElementById(\"cvs\");\n      const ctx = cvs.getContext(\"2d\");\n      const {\n        clientWidth: width,\n        clientHeight: height\n      } = document.documentElement;\n      cvs.width = width;\n      cvs.height = height;\n      ctx.fillStyle = \"#ffffff\"; // 小点的颜色\n\n      // 生成小点，400是小点的数量\n      const bgColors = Array.from(new Array(400)).map(() => ({\n        x: Math.random() * width,\n        y: Math.random() * height,\n        step: Math.random() * 0.1 + 0.5\n      }));\n\n      // 渲染函数\n      const render = () => {\n        ctx.clearRect(0, 0, width, height);\n        ctx.beginPath();\n        bgColors.forEach(v => {\n          v.y = v.y > height ? 0 : v.y + v.step;\n          ctx.rect(v.x, v.y, 3, 3);\n        });\n        ctx.fill();\n        requestAnimationFrame(render);\n      };\n      render();\n\n      // 禁止用户缩放浏览器\n      const keyCodeMap = {\n        61: true,\n        107: true,\n        // 数字键盘 +\n        109: true,\n        // 数字键盘 -\n        173: true,\n        // 火狐 - 号\n        187: true,\n        // +\n        189: true // -\n      };\n      // 覆盖ctrl||command + ‘+’/‘-’\n      document.onkeydown = function (event) {\n        const e = event || window.event;\n        const ctrlKey = e.ctrlKey || e.metaKey;\n        if (ctrlKey && keyCodeMap[e.keyCode]) {\n          e.preventDefault();\n        } else if (e.detail) {\n          // Firefox\n          event.returnValue = false;\n        }\n      };\n      // 覆盖鼠标滑动\n      document.body.addEventListener(\"wheel\", e => {\n        if (e.ctrlKey) {\n          e.preventDefault();\n          return false;\n        }\n      }, {\n        passive: false\n      });\n    }\n  },\n  mounted() {\n    this.initDynamicBackground();\n    window.addEventListener(\"resize\", () => {\n      const cvs = document.getElementById(\"cvs\");\n      const {\n        clientWidth: width,\n        clientHeight: height\n      } = document.documentElement;\n      cvs.width = width;\n      cvs.height = height;\n      // 重新设置画布大小后，可能需要重新初始化背景\n      // 如果动画不继续，可以在这里调用 initDynamicBackground() 或其他恢复动画的逻辑\n    });\n  }\n};","map":{"version":3,"names":["name","data","activeNames","problemLists","id","creator","createTime","problems","difficulty","uploadTime","methods","getTagType","initDynamicBackground","cvs","document","getElementById","ctx","getContext","clientWidth","width","clientHeight","height","documentElement","fillStyle","bgColors","Array","from","map","x","Math","random","y","step","render","clearRect","beginPath","forEach","v","rect","fill","requestAnimationFrame","keyCodeMap","onkeydown","event","e","window","ctrlKey","metaKey","keyCode","preventDefault","detail","returnValue","body","addEventListener","passive","mounted"],"sources":["src/components/ProblemList.vue"],"sourcesContent":["<template>\r\n  <div class=\"problem-list-page\">\r\n    <canvas id=\"cvs\"></canvas>\r\n    <div class=\"content\">\r\n      <h1>题单</h1>\r\n      <el-collapse v-model=\"activeNames\" accordion>\r\n        <el-collapse-item\r\n          v-for=\"list in problemLists\"\r\n          :key=\"list.id\"\r\n          :name=\"list.id.toString()\"\r\n        >\r\n          <template #title>\r\n            <div class=\"list-header\">\r\n              <span class=\"list-name\">{{ list.name }}</span>\r\n              <span class=\"list-meta\">\r\n                创建者: {{ list.creator }} | 创建时间: {{ list.createTime }} | 题目数量: {{ list.problems.length }}\r\n              </span>\r\n            </div>\r\n          </template>\r\n          <el-table :data=\"list.problems\" style=\"width: 100%\">\r\n            <el-table-column prop=\"id\" label=\"题目ID\" width=\"100\">\r\n              <template #default=\"scope\">\r\n                <router-link :to=\"`/problem/${scope.row.id}`\">{{ scope.row.id }}</router-link>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"name\" label=\"题目名称\" width=\"180\">\r\n              <template #default=\"scope\">\r\n                <router-link :to=\"`/problem/${scope.row.id}`\">{{ scope.row.name }}</router-link>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"difficulty\" label=\"难度\" width=\"100\">\r\n              <template #default=\"scope\">\r\n                <el-tag :type=\"getTagType(scope.row.difficulty)\">{{ scope.row.difficulty }}</el-tag>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"uploadTime\" label=\"上传时间\" width=\"180\"></el-table-column>\r\n          </el-table>\r\n        </el-collapse-item>\r\n      </el-collapse>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"ProblemList\",\r\n  data() {\r\n    return {\r\n      activeNames: [],\r\n      problemLists: [\r\n        {\r\n          id: 1,\r\n          name: \"题单1\",\r\n          creator: \"用户1\",\r\n          createTime: \"2023-10-01\",\r\n          problems: [\r\n            { id: 1, name: \"题目1\", difficulty: \"简单\", uploadTime: \"2023-10-01\" },\r\n            { id: 2, name: \"题目2\", difficulty: \"中等\", uploadTime: \"2023-10-02\" },\r\n            { id: 3, name: \"题目3\", difficulty: \"困难\", uploadTime: \"2023-10-03\" },\r\n          ],\r\n        },\r\n        {\r\n          id: 2,\r\n          name: \"题单2\",\r\n          creator: \"用户2\",\r\n          createTime: \"2023-10-02\",\r\n          problems: [\r\n            { id: 4, name: \"题目4\", difficulty: \"简单\", uploadTime: \"2023-10-04\" },\r\n            { id: 5, name: \"题目5\", difficulty: \"中等\", uploadTime: \"2023-10-05\" },\r\n          ],\r\n        },\r\n        // 可以添加更多题单\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    getTagType(difficulty) {\r\n      switch (difficulty) {\r\n        case \"简单\":\r\n          return \"success\";\r\n        case \"中等\":\r\n          return \"warning\";\r\n        case \"困难\":\r\n          return \"danger\";\r\n        default:\r\n          return \"\";\r\n      }\r\n    },\r\n    initDynamicBackground() {\r\n      const cvs = document.getElementById(\"cvs\");\r\n      const ctx = cvs.getContext(\"2d\");\r\n      const { clientWidth: width, clientHeight: height } = document.documentElement;\r\n      cvs.width = width;\r\n      cvs.height = height;\r\n      ctx.fillStyle = \"#ffffff\"; // 小点的颜色\r\n\r\n      // 生成小点，400是小点的数量\r\n      const bgColors = Array.from(new Array(400)).map(() => ({\r\n        x: Math.random() * width,\r\n        y: Math.random() * height,\r\n        step: Math.random() * 0.1 + 0.5,\r\n      }));\r\n\r\n      // 渲染函数\r\n      const render = () => {\r\n        ctx.clearRect(0, 0, width, height);\r\n        ctx.beginPath();\r\n        bgColors.forEach((v) => {\r\n          v.y = v.y > height ? 0 : v.y + v.step;\r\n          ctx.rect(v.x, v.y, 3, 3);\r\n        });\r\n        ctx.fill();\r\n        requestAnimationFrame(render);\r\n      };\r\n      render();\r\n\r\n      // 禁止用户缩放浏览器\r\n      const keyCodeMap = {\r\n        61: true,\r\n        107: true, // 数字键盘 +\r\n        109: true, // 数字键盘 -\r\n        173: true, // 火狐 - 号\r\n        187: true, // +\r\n        189: true, // -\r\n      };\r\n      // 覆盖ctrl||command + ‘+’/‘-’\r\n      document.onkeydown = function (event) {\r\n        const e = event || window.event;\r\n        const ctrlKey = e.ctrlKey || e.metaKey;\r\n        if (ctrlKey && keyCodeMap[e.keyCode]) {\r\n          e.preventDefault();\r\n        } else if (e.detail) {\r\n          // Firefox\r\n          event.returnValue = false;\r\n        }\r\n      };\r\n      // 覆盖鼠标滑动\r\n      document.body.addEventListener(\r\n        \"wheel\",\r\n        (e) => {\r\n          if (e.ctrlKey) {\r\n            e.preventDefault();\r\n            return false;\r\n          }\r\n        },\r\n        { passive: false }\r\n      );\r\n    },\r\n  },\r\n  mounted() {\r\n    this.initDynamicBackground();\r\n    window.addEventListener(\"resize\", () => {\r\n      const cvs = document.getElementById(\"cvs\");\r\n      const { clientWidth: width, clientHeight: height } = document.documentElement;\r\n      cvs.width = width;\r\n      cvs.height = height;\r\n      // 重新设置画布大小后，可能需要重新初始化背景\r\n      // 如果动画不继续，可以在这里调用 initDynamicBackground() 或其他恢复动画的逻辑\r\n    });\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  font-family: \"KaiTi\", serif;\r\n}\r\n\r\nhtml,\r\nbody,\r\n#app {\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  overflow: hidden;\r\n}\r\n\r\ncanvas#cvs {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: -6;\r\n  background-color: #000;\r\n}\r\n\r\n.problem-list-page {\r\n  position: relative;\r\n  padding: 20px;\r\n  height: 100vh;\r\n  overflow: auto;\r\n}\r\n\r\n.content {\r\n  background: rgba(255, 255, 255, 0.95);\r\n  padding: 30px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);\r\n  color: #333;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  color: #333;\r\n  margin-bottom: 30px;\r\n  font-size: 32px;\r\n}\r\n\r\n.list-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 0;\r\n}\r\n\r\n.list-name {\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n}\r\n\r\n.list-meta {\r\n  color: #666;\r\n  font-size: 14px;\r\n}\r\n\r\n.el-collapse-item__content {\r\n  padding: 20px 0;\r\n}\r\n\r\n.el-table {\r\n  background: rgba(255, 255, 255, 0.9);\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.el-table th {\r\n  background-color: #f5f5f5;\r\n  color: #333;\r\n}\r\n\r\n.el-tag {\r\n  border-radius: 4px;\r\n  padding: 5px 10px;\r\n  color: #fff;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .content {\r\n    padding: 20px;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 24px;\r\n  }\r\n\r\n  .list-name {\r\n    font-size: 18px;\r\n  }\r\n\r\n  .list-meta {\r\n    font-size: 12px;\r\n  }\r\n\r\n  .el-table-column {\r\n    font-size: 14px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}