{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from '@/axios';\nexport default {\n  name: 'ContestPage',\n  data() {\n    return {\n      contests: []\n    };\n  },\n  created() {\n    this.fetchContests();\n  },\n  methods: {\n    createContest() {\n      this.$router.push('/create-contest');\n    },\n    fetchContests() {\n      axios.get('/contests').then(response => {\n        if (response.data.code === 200) {\n          this.contests = response.data.data;\n        } else {\n          this.$message.error(response.data.msg || '获取比赛列表失败');\n        }\n      }).catch(error => {\n        console.error('获取比赛列表失败:', error);\n        this.$message.error('获取比赛列表失败，请重试');\n      });\n    },\n    drawStars() {\n      var canvas = document.getElementById('starfield'),\n        context = canvas.getContext('2d'),\n        stars = [],\n        stars_count = 800;\n      function ini() {\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        stars = [];\n        makeStars();\n      }\n      function makeStars() {\n        for (var i = 0; i < stars_count; i++) {\n          let x = Math.random() * canvas.offsetWidth;\n          let y = Math.random() * canvas.offsetHeight;\n          let radius = Math.random() * 0.8;\n          let color = \"rgba(\" + Math.random() * 255 + \",\" + Math.random() * 255 + \",\" + Math.random() * 255 + \",0.8)\";\n          let speed = Math.random() * 0.5;\n          stars.push({\n            x,\n            y,\n            radius,\n            color,\n            speed\n          });\n        }\n      }\n      function drawStars() {\n        context.fillStyle = \"#0e1729\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        for (var i = 0; i < stars.length; i++) {\n          var x = stars[i].x - stars[i].speed;\n          if (x < -2 * stars[i].radius) x = canvas.width;\n          stars[i].x = x;\n          var y = stars[i].y;\n          var radius = stars[i].radius;\n          context.beginPath();\n          context.arc(x, y, radius * 2, 0, 2 * Math.PI);\n          context.fillStyle = stars[i].color;\n          context.fill();\n        }\n      }\n      ini();\n      setInterval(drawStars, 50);\n      window.onresize = ini;\n    }\n  },\n  mounted() {\n    this.drawStars();\n  }\n};","map":{"version":3,"names":["axios","name","data","contests","created","fetchContests","methods","createContest","$router","push","get","then","response","code","$message","error","msg","catch","console","drawStars","canvas","document","getElementById","context","getContext","stars","stars_count","ini","width","window","innerWidth","height","innerHeight","makeStars","i","x","Math","random","offsetWidth","y","offsetHeight","radius","color","speed","fillStyle","fillRect","length","beginPath","arc","PI","fill","setInterval","onresize","mounted"],"sources":["src/components/Contest.vue"],"sourcesContent":["<template>\r\n  <div class=\"contest-page\">\r\n    <canvas id=\"starfield\"></canvas>\r\n    <div class=\"content\">\r\n      <h1>比赛</h1>\r\n      <el-button type=\"primary\" @click=\"createContest\" class=\"large-button\">发布新比赛</el-button>\r\n      <el-table :data=\"contests\" style=\"width: 100%\">\r\n        <el-table-column prop=\"name\" label=\"名称\" width=\"300\">\r\n          <template slot-scope=\"scope\">\r\n            <router-link :to=\"`/contest/${scope.row.id}`\">{{ scope.row.name }}</router-link>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"created_at\" label=\"创建时间\" width=\"180\"></el-table-column>\r\n      </el-table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from '@/axios';\r\n\r\nexport default {\r\n  name: 'ContestPage',\r\n  data() {\r\n    return {\r\n      contests: []\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchContests();\r\n  },\r\n  methods: {\r\n    createContest() {\r\n      this.$router.push('/create-contest');\r\n    },\r\n    fetchContests() {\r\n      axios.get('/contests')\r\n        .then(response => {\r\n          if (response.data.code === 200) {\r\n            this.contests = response.data.data;\r\n          } else {\r\n            this.$message.error(response.data.msg || '获取比赛列表失败');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('获取比赛列表失败:', error);\r\n          this.$message.error('获取比赛列表失败，请重试');\r\n        });\r\n    },\r\n    drawStars() {\r\n      var canvas = document.getElementById('starfield'),\r\n        context = canvas.getContext('2d'),\r\n        stars = [],\r\n        stars_count = 800;\r\n\r\n      function ini() {\r\n        canvas.width = window.innerWidth;\r\n        canvas.height = window.innerHeight;\r\n        stars = [];\r\n        makeStars();\r\n      }\r\n\r\n      function makeStars() {\r\n        for (var i = 0; i < stars_count; i++) {\r\n          let x = Math.random() * canvas.offsetWidth;\r\n          let y = Math.random() * canvas.offsetHeight;\r\n          let radius = Math.random() * 0.8;\r\n          let color = \"rgba(\" + Math.random() * 255 + \",\" + Math.random() * 255 + \",\" + Math.random() * 255 + \",0.8)\";\r\n          let speed = Math.random() * 0.5;\r\n          stars.push({ x, y, radius, color, speed });\r\n        }\r\n      }\r\n\r\n      function drawStars() {\r\n        context.fillStyle = \"#0e1729\";\r\n        context.fillRect(0, 0, canvas.width, canvas.height);\r\n        for (var i = 0; i < stars.length; i++) {\r\n          var x = stars[i].x - stars[i].speed;\r\n          if (x < -2 * stars[i].radius) x = canvas.width;\r\n          stars[i].x = x;\r\n          var y = stars[i].y;\r\n          var radius = stars[i].radius;\r\n          context.beginPath();\r\n          context.arc(x, y, radius * 2, 0, 2 * Math.PI);\r\n          context.fillStyle = stars[i].color;\r\n          context.fill();\r\n        }\r\n      }\r\n\r\n      ini();\r\n      setInterval(drawStars, 50);\r\n      window.onresize = ini;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.drawStars();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: 'KaiTi', serif;\r\n}\r\n\r\nhtml, body, #app {\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\ncanvas {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: -6;\r\n  background: #0e1729;\r\n}\r\n\r\n.contest-page {\r\n  padding: 20px;\r\n  position: relative;\r\n  z-index: 1;\r\n  min-height: 100vh;\r\n}\r\n\r\n.content {\r\n  background: rgba(255, 255, 255, 0.9);\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.5);\r\n  color: #333;\r\n}\r\n\r\nh1 {\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-button.large-button {\r\n  margin-bottom: 20px;\r\n  padding: 15px 20px;\r\n  font-size: 18px;\r\n  border-radius: 20px;\r\n}\r\n\r\n.el-table {\r\n  background: rgba(255, 255, 255, 0.9);\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);\r\n}\r\n</style>"],"mappings":";AAmBA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAC,cAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACAJ,cAAA;MACAL,KAAA,CAAAU,GAAA,cACAC,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAV,IAAA,CAAAW,IAAA;UACA,KAAAV,QAAA,GAAAS,QAAA,CAAAV,IAAA,CAAAA,IAAA;QACA;UACA,KAAAY,QAAA,CAAAC,KAAA,CAAAH,QAAA,CAAAV,IAAA,CAAAc,GAAA;QACA;MACA,GACAC,KAAA,CAAAF,KAAA;QACAG,OAAA,CAAAH,KAAA,cAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACAI,UAAA;MACA,IAAAC,MAAA,GAAAC,QAAA,CAAAC,cAAA;QACAC,OAAA,GAAAH,MAAA,CAAAI,UAAA;QACAC,KAAA;QACAC,WAAA;MAEA,SAAAC,IAAA;QACAP,MAAA,CAAAQ,KAAA,GAAAC,MAAA,CAAAC,UAAA;QACAV,MAAA,CAAAW,MAAA,GAAAF,MAAA,CAAAG,WAAA;QACAP,KAAA;QACAQ,SAAA;MACA;MAEA,SAAAA,UAAA;QACA,SAAAC,CAAA,MAAAA,CAAA,GAAAR,WAAA,EAAAQ,CAAA;UACA,IAAAC,CAAA,GAAAC,IAAA,CAAAC,MAAA,KAAAjB,MAAA,CAAAkB,WAAA;UACA,IAAAC,CAAA,GAAAH,IAAA,CAAAC,MAAA,KAAAjB,MAAA,CAAAoB,YAAA;UACA,IAAAC,MAAA,GAAAL,IAAA,CAAAC,MAAA;UACA,IAAAK,KAAA,aAAAN,IAAA,CAAAC,MAAA,iBAAAD,IAAA,CAAAC,MAAA,iBAAAD,IAAA,CAAAC,MAAA;UACA,IAAAM,KAAA,GAAAP,IAAA,CAAAC,MAAA;UACAZ,KAAA,CAAAhB,IAAA;YAAA0B,CAAA;YAAAI,CAAA;YAAAE,MAAA;YAAAC,KAAA;YAAAC;UAAA;QACA;MACA;MAEA,SAAAxB,UAAA;QACAI,OAAA,CAAAqB,SAAA;QACArB,OAAA,CAAAsB,QAAA,OAAAzB,MAAA,CAAAQ,KAAA,EAAAR,MAAA,CAAAW,MAAA;QACA,SAAAG,CAAA,MAAAA,CAAA,GAAAT,KAAA,CAAAqB,MAAA,EAAAZ,CAAA;UACA,IAAAC,CAAA,GAAAV,KAAA,CAAAS,CAAA,EAAAC,CAAA,GAAAV,KAAA,CAAAS,CAAA,EAAAS,KAAA;UACA,IAAAR,CAAA,QAAAV,KAAA,CAAAS,CAAA,EAAAO,MAAA,EAAAN,CAAA,GAAAf,MAAA,CAAAQ,KAAA;UACAH,KAAA,CAAAS,CAAA,EAAAC,CAAA,GAAAA,CAAA;UACA,IAAAI,CAAA,GAAAd,KAAA,CAAAS,CAAA,EAAAK,CAAA;UACA,IAAAE,MAAA,GAAAhB,KAAA,CAAAS,CAAA,EAAAO,MAAA;UACAlB,OAAA,CAAAwB,SAAA;UACAxB,OAAA,CAAAyB,GAAA,CAAAb,CAAA,EAAAI,CAAA,EAAAE,MAAA,aAAAL,IAAA,CAAAa,EAAA;UACA1B,OAAA,CAAAqB,SAAA,GAAAnB,KAAA,CAAAS,CAAA,EAAAQ,KAAA;UACAnB,OAAA,CAAA2B,IAAA;QACA;MACA;MAEAvB,GAAA;MACAwB,WAAA,CAAAhC,SAAA;MACAU,MAAA,CAAAuB,QAAA,GAAAzB,GAAA;IACA;EACA;EACA0B,QAAA;IACA,KAAAlC,SAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}