{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from '@/axios'; // 使用配置好的 Axios 实例\n\nexport default {\n  name: 'UploadProblem',\n  data() {\n    return {\n      form: {\n        title: '',\n        description: '',\n        difficulty: 'Medium'\n      },\n      loading: false,\n      rules: {\n        title: [{\n          required: true,\n          message: '请输入题目标题',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          max: 100,\n          message: '标题长度在5到100个字符',\n          trigger: 'blur'\n        }],\n        description: [{\n          required: true,\n          message: '请输入题目描述',\n          trigger: 'blur'\n        }, {\n          min: 10,\n          message: '描述长度至少10个字符',\n          trigger: 'blur'\n        }],\n        difficulty: [{\n          required: true,\n          message: '请选择难度',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          console.log('Submitting form with token:', localStorage.getItem('access_token')); // 调试日志\n          axios.post('/problems', {\n            // 直接使用导入的 axios 实例\n            title: this.form.title,\n            description: this.form.description,\n            difficulty: this.form.difficulty\n          }).then(response => {\n            this.loading = false;\n            if (response.data.code === 200) {\n              this.$message.success('题目上传成功！');\n              this.resetForm();\n              this.$router.push('/problemset'); // 确保跳转路径正确\n            } else {\n              this.$message.error(response.data.msg || '题目上传失败');\n            }\n          }).catch(error => {\n            this.loading = false;\n            console.error('题目上传失败:', error);\n            if (error.response) {\n              console.error('响应数据:', error.response.data);\n              console.error('响应状态:', error.response.status);\n              console.error('响应头:', error.response.headers);\n              this.$message.error(error.response.data.msg || '题目上传失败');\n            } else if (error.request) {\n              console.error('请求数据:', error.request);\n              this.$message.error('未收到服务器响应，请检查网络连接');\n            } else {\n              console.error('错误信息:', error.message);\n              this.$message.error('发生错误，请重试');\n            }\n          });\n        } else {\n          this.$message.error('请完成表单字段的填写');\n          return false;\n        }\n      });\n    },\n    resetForm() {\n      this.$refs.form.resetFields();\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","form","title","description","difficulty","loading","rules","required","message","trigger","min","max","methods","submitForm","$refs","validate","valid","console","log","localStorage","getItem","post","then","response","code","$message","success","resetForm","$router","push","error","msg","catch","status","headers","request","resetFields"],"sources":["src/components/UploadProblem.vue"],"sourcesContent":["<!-- src/components/UploadProblem.vue -->\r\n<template>\r\n  <div class=\"upload-problem\">\r\n    <h1>上传题目</h1>\r\n    <el-form\r\n      ref=\"form\"\r\n      :model=\"form\"\r\n      :rules=\"rules\"\r\n      label-width=\"80px\"\r\n      @submit.native.prevent=\"submitForm\"\r\n    >\r\n      <el-form-item label=\"题目标题\" prop=\"title\">\r\n        <el-input v-model=\"form.title\" placeholder=\"请输入题目标题\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"题目描述\" prop=\"description\">\r\n        <el-input\r\n          type=\"textarea\"\r\n          v-model=\"form.description\"\r\n          placeholder=\"请输入题目描述\"\r\n          :rows=\"10\"\r\n        ></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"难度\" prop=\"difficulty\">\r\n        <el-select v-model=\"form.difficulty\" placeholder=\"请选择难度\">\r\n          <el-option label=\"Easy\" value=\"Easy\"></el-option>\r\n          <el-option label=\"Medium\" value=\"Medium\"></el-option>\r\n          <el-option label=\"Hard\" value=\"Hard\"></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"submitForm\" :loading=\"loading\">提交</el-button>\r\n        <el-button @click=\"resetForm\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from '@/axios'; // 使用配置好的 Axios 实例\r\n\r\nexport default {\r\n  name: 'UploadProblem',\r\n  data() {\r\n    return {\r\n      form: {\r\n        title: '',\r\n        description: '',\r\n        difficulty: 'Medium',\r\n      },\r\n      loading: false,\r\n      rules: {\r\n        title: [\r\n          { required: true, message: '请输入题目标题', trigger: 'blur' },\r\n          { min: 5, max: 100, message: '标题长度在5到100个字符', trigger: 'blur' },\r\n        ],\r\n        description: [\r\n          { required: true, message: '请输入题目描述', trigger: 'blur' },\r\n          { min: 10, message: '描述长度至少10个字符', trigger: 'blur' },\r\n        ],\r\n        difficulty: [\r\n          { required: true, message: '请选择难度', trigger: 'change' },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    submitForm() {\r\n      this.$refs.form.validate((valid) => {\r\n        if (valid) {\r\n          this.loading = true;\r\n          console.log('Submitting form with token:', localStorage.getItem('access_token')); // 调试日志\r\n          axios.post('/problems', { // 直接使用导入的 axios 实例\r\n            title: this.form.title,\r\n            description: this.form.description,\r\n            difficulty: this.form.difficulty,\r\n          })\r\n          .then((response) => {\r\n            this.loading = false;\r\n            if (response.data.code === 200) {\r\n              this.$message.success('题目上传成功！');\r\n              this.resetForm();\r\n              this.$router.push('/problemset'); // 确保跳转路径正确\r\n            } else {\r\n              this.$message.error(response.data.msg || '题目上传失败');\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.loading = false;\r\n            console.error('题目上传失败:', error);\r\n            if (error.response) {\r\n              console.error('响应数据:', error.response.data);\r\n              console.error('响应状态:', error.response.status);\r\n              console.error('响应头:', error.response.headers);\r\n              this.$message.error(error.response.data.msg || '题目上传失败');\r\n            } else if (error.request) {\r\n              console.error('请求数据:', error.request);\r\n              this.$message.error('未收到服务器响应，请检查网络连接');\r\n            } else {\r\n              console.error('错误信息:', error.message);\r\n              this.$message.error('发生错误，请重试');\r\n            }\r\n          });\r\n        } else {\r\n          this.$message.error('请完成表单字段的填写');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    resetForm() {\r\n      this.$refs.form.resetFields();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.upload-problem {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n</style>"],"mappings":";AAyCA,OAAAA,KAAA;;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,KAAA;QACAC,WAAA;QACAC,UAAA;MACA;MACAC,OAAA;MACAC,KAAA;QACAJ,KAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAN,WAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAL,UAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAG,OAAA;IACAC,WAAA;MACA,KAAAC,KAAA,CAAAb,IAAA,CAAAc,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAX,OAAA;UACAY,OAAA,CAAAC,GAAA,gCAAAC,YAAA,CAAAC,OAAA;UACAtB,KAAA,CAAAuB,IAAA;YAAA;YACAnB,KAAA,OAAAD,IAAA,CAAAC,KAAA;YACAC,WAAA,OAAAF,IAAA,CAAAE,WAAA;YACAC,UAAA,OAAAH,IAAA,CAAAG;UACA,GACAkB,IAAA,CAAAC,QAAA;YACA,KAAAlB,OAAA;YACA,IAAAkB,QAAA,CAAAvB,IAAA,CAAAwB,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAAC,SAAA;cACA,KAAAC,OAAA,CAAAC,IAAA;YACA;cACA,KAAAJ,QAAA,CAAAK,KAAA,CAAAP,QAAA,CAAAvB,IAAA,CAAA+B,GAAA;YACA;UACA,GACAC,KAAA,CAAAF,KAAA;YACA,KAAAzB,OAAA;YACAY,OAAA,CAAAa,KAAA,YAAAA,KAAA;YACA,IAAAA,KAAA,CAAAP,QAAA;cACAN,OAAA,CAAAa,KAAA,UAAAA,KAAA,CAAAP,QAAA,CAAAvB,IAAA;cACAiB,OAAA,CAAAa,KAAA,UAAAA,KAAA,CAAAP,QAAA,CAAAU,MAAA;cACAhB,OAAA,CAAAa,KAAA,SAAAA,KAAA,CAAAP,QAAA,CAAAW,OAAA;cACA,KAAAT,QAAA,CAAAK,KAAA,CAAAA,KAAA,CAAAP,QAAA,CAAAvB,IAAA,CAAA+B,GAAA;YACA,WAAAD,KAAA,CAAAK,OAAA;cACAlB,OAAA,CAAAa,KAAA,UAAAA,KAAA,CAAAK,OAAA;cACA,KAAAV,QAAA,CAAAK,KAAA;YACA;cACAb,OAAA,CAAAa,KAAA,UAAAA,KAAA,CAAAtB,OAAA;cACA,KAAAiB,QAAA,CAAAK,KAAA;YACA;UACA;QACA;UACA,KAAAL,QAAA,CAAAK,KAAA;UACA;QACA;MACA;IACA;IACAH,UAAA;MACA,KAAAb,KAAA,CAAAb,IAAA,CAAAmC,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}