{"ast":null,"code":"// // src/router.js\n//\n// import Vue from 'vue';\n// import VueRouter from 'vue-router';\n// import HomePage from './components/HomePage.vue';\n// import Login from './components/Login.vue';\n// import Register from './components/Register.vue';\n// import ProblemSet from './components/ProblemSet.vue';\n// import ProblemList from './components/ProblemList.vue';\n// import ContestPage from './components/Contest.vue';\n// import ContestDetail from './components/ContestDetail.vue';\n// import CreateContest from './components/CreateContest.vue';\n// import DiscussionPage from './components/Discussion.vue';\n// import CreateDiscussion from './components/CreateDiscussion.vue';\n// import SquarePage from './components/Square.vue';\n// import UserProfile from './components/UserProfile.vue';\n// import ProblemDetail from './components/ProblemDetail.vue';\n// import UploadProblem from './components/UploadProblem.vue';\n// import SolutionDetail from './components/SolutionDetail.vue';\n// import CreateProblemList from './components/CreateProblemList.vue';\n// import SubmitCode from './components/SubmitCode.vue';\n// import Dashboard from './components/Dashboard.vue';\n// import UploadSolution from \"@/components/UploadSolution.vue\";\n//\n// Vue.use(VueRouter);\n//\n// const routes = [\n//   { path: '/', component: HomePage },\n//   { path: '/login', component: Login },\n//   { path: '/register', component: Register },\n//   { path: '/problemset', component: ProblemSet, meta: { requiresAuth: true } },\n//   { path: '/problemlist', component: ProblemList, meta: { requiresAuth: true } },\n//   { path: '/contest', component: ContestPage, meta: { requiresAuth: true } },\n//   {\n//     path: '/contest/:id',\n//     component: ContestDetail,\n//     meta: { requiresAuth: true },\n//     props: true\n//   },\n//   { path: '/create-contest', component: CreateContest, meta: { requiresAuth: true } },\n//   { path: '/discussion', component: DiscussionPage, meta: { requiresAuth: true } },\n//   { path: '/create-discussion', component: CreateDiscussion, meta: { requiresAuth: true } },\n//   { path: '/square', component: SquarePage, meta: { requiresAuth: true } },\n//   {\n//     path: '/profile/:userId',\n//     component: UserProfile,\n//     meta: { requiresAuth: true },\n//     props: true\n//   },\n//   {\n//     path: '/problem/:problemId',\n//     component: ProblemDetail,\n//     meta: { requiresAuth: true },\n//     props: route => ({ problemId: parseInt(route.params.problemId, 10) }),\n//     children: [\n//       {\n//         path: 'solution',\n//         name: 'SolutionDetail',\n//         component: SolutionDetail,\n//         meta: { requiresAuth: true },\n//         props: route => ({ problemId: parseInt(route.params.problemId, 10) })\n//       },\n//       {\n//         path: 'submit',\n//         name: 'SubmitCode',\n//         component: SubmitCode,\n//         meta: { requiresAuth: true },\n//         props: route => ({ problemId: parseInt(route.params.problemId, 10) })\n//       },\n//     ]\n//   },\n//   { path: '/upload', component: UploadProblem, meta: { requiresAuth: true } },\n//   { path: '/uploadsolutions', component: UploadSolution, meta: { requiresAuth: true } }, // 上传题解\n//   { path: '/create-problemlist', component: CreateProblemList, meta: { requiresAuth: true } },\n//   { path: '/dashboard', component: Dashboard, meta: { requiresAuth: true } },\n//   { path: '*', redirect: '/login' },\n// ];\n//\n// const router = new VueRouter({\n//   mode: 'history',\n//   routes\n// });\n//\n// // 路由守卫\n// router.beforeEach((to, from, next) => {\n//   const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n//   const token = localStorage.getItem('access_token');\n//\n//   if (requiresAuth && !token) {\n//     next('/login');\n//   } else {\n//     next();\n//   }\n// });\n//\n// // 全局导航守卫，触发全局事件以更新组件状态\n// router.afterEach(() => {\n//   const event = new Event('user-login-status-change');\n//   window.dispatchEvent(event);\n// });\n//\n// export default router;\n\n// src/router.js\n\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport HomePage from './components/HomePage.vue';\nimport Login from './components/Login.vue';\nimport Register from './components/Register.vue';\nimport ProblemSet from './components/ProblemSet.vue';\nimport ProblemList from './components/ProblemList.vue';\nimport ContestPage from './components/Contest.vue';\nimport ContestDetail from './components/ContestDetail.vue';\nimport CreateContest from './components/CreateContest.vue';\nimport DiscussionPage from './components/Discussion.vue';\nimport CreateDiscussion from './components/CreateDiscussion.vue';\nimport SquarePage from './components/Square.vue';\nimport UserProfile from './components/UserProfile.vue';\nimport ProblemDetail from './components/ProblemDetail.vue';\nimport UploadProblem from './components/UploadProblem.vue';\nimport SolutionDetail from './components/SolutionDetail.vue';\nimport CreateProblemList from './components/CreateProblemList.vue';\nimport SubmitCode from './components/SubmitCode.vue';\nimport Dashboard from './components/Dashboard.vue';\nimport UploadSolution from \"@/components/UploadSolution.vue\";\nimport DiscussionDetail from './components/DiscussionDetail.vue';\nVue.use(VueRouter);\nconst routes = [{\n  path: '/',\n  component: HomePage\n}, {\n  path: '/login',\n  component: Login\n}, {\n  path: '/register',\n  component: Register\n}, {\n  path: '/problemset',\n  component: ProblemSet,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/problemlist',\n  component: ProblemList,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/contest',\n  component: ContestPage,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/contest/:id',\n  component: ContestDetail,\n  meta: {\n    requiresAuth: true\n  },\n  props: true\n}, {\n  path: '/create-contest',\n  component: CreateContest,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/discussion',\n  component: DiscussionPage,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/create-discussion',\n  component: CreateDiscussion,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/square',\n  component: SquarePage,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/profile/:userId',\n  component: UserProfile,\n  meta: {\n    requiresAuth: true\n  },\n  props: true\n}, {\n  path: '/problem/:problemId',\n  component: ProblemDetail,\n  meta: {\n    requiresAuth: true\n  },\n  props: route => ({\n    problemId: parseInt(route.params.problemId, 10)\n  }),\n  children: [{\n    path: 'solution',\n    name: 'SolutionDetail',\n    component: SolutionDetail,\n    meta: {\n      requiresAuth: true\n    },\n    props: route => ({\n      problemId: parseInt(route.params.problemId, 10)\n    })\n  }, {\n    path: 'submit',\n    name: 'SubmitCode',\n    component: SubmitCode,\n    meta: {\n      requiresAuth: true\n    },\n    props: route => ({\n      problemId: parseInt(route.params.problemId, 10)\n    })\n  }]\n}, {\n  path: '/upload',\n  component: UploadProblem,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/uploadsolutions',\n  component: UploadSolution,\n  meta: {\n    requiresAuth: true\n  }\n},\n// 上传题解\n{\n  path: '/create-problemlist',\n  component: CreateProblemList,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/dashboard',\n  component: Dashboard,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '*',\n  redirect: '/login'\n}, {\n  path: '/discussion/:discussionId',\n  component: DiscussionDetail,\n  meta: {\n    requiresAuth: true\n  },\n  props: true\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  routes\n});\n\n// 路由守卫\nrouter.beforeEach((to, from, next) => {\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n  const token = localStorage.getItem('access_token');\n  if (requiresAuth && !token) {\n    next('/login');\n  } else {\n    next();\n  }\n});\n\n// 全局导航守卫，触发全局事件以更新组件状态\nrouter.afterEach(() => {\n  const event = new Event('user-login-status-change');\n  window.dispatchEvent(event);\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","HomePage","Login","Register","ProblemSet","ProblemList","ContestPage","ContestDetail","CreateContest","DiscussionPage","CreateDiscussion","SquarePage","UserProfile","ProblemDetail","UploadProblem","SolutionDetail","CreateProblemList","SubmitCode","Dashboard","UploadSolution","DiscussionDetail","use","routes","path","component","meta","requiresAuth","props","route","problemId","parseInt","params","children","name","redirect","router","mode","beforeEach","to","from","next","matched","some","record","token","localStorage","getItem","afterEach","event","Event","window","dispatchEvent"],"sources":["D:/web2/jekedao_front/src/router.js"],"sourcesContent":["// // src/router.js\r\n//\r\n// import Vue from 'vue';\r\n// import VueRouter from 'vue-router';\r\n// import HomePage from './components/HomePage.vue';\r\n// import Login from './components/Login.vue';\r\n// import Register from './components/Register.vue';\r\n// import ProblemSet from './components/ProblemSet.vue';\r\n// import ProblemList from './components/ProblemList.vue';\r\n// import ContestPage from './components/Contest.vue';\r\n// import ContestDetail from './components/ContestDetail.vue';\r\n// import CreateContest from './components/CreateContest.vue';\r\n// import DiscussionPage from './components/Discussion.vue';\r\n// import CreateDiscussion from './components/CreateDiscussion.vue';\r\n// import SquarePage from './components/Square.vue';\r\n// import UserProfile from './components/UserProfile.vue';\r\n// import ProblemDetail from './components/ProblemDetail.vue';\r\n// import UploadProblem from './components/UploadProblem.vue';\r\n// import SolutionDetail from './components/SolutionDetail.vue';\r\n// import CreateProblemList from './components/CreateProblemList.vue';\r\n// import SubmitCode from './components/SubmitCode.vue';\r\n// import Dashboard from './components/Dashboard.vue';\r\n// import UploadSolution from \"@/components/UploadSolution.vue\";\r\n//\r\n// Vue.use(VueRouter);\r\n//\r\n// const routes = [\r\n//   { path: '/', component: HomePage },\r\n//   { path: '/login', component: Login },\r\n//   { path: '/register', component: Register },\r\n//   { path: '/problemset', component: ProblemSet, meta: { requiresAuth: true } },\r\n//   { path: '/problemlist', component: ProblemList, meta: { requiresAuth: true } },\r\n//   { path: '/contest', component: ContestPage, meta: { requiresAuth: true } },\r\n//   {\r\n//     path: '/contest/:id',\r\n//     component: ContestDetail,\r\n//     meta: { requiresAuth: true },\r\n//     props: true\r\n//   },\r\n//   { path: '/create-contest', component: CreateContest, meta: { requiresAuth: true } },\r\n//   { path: '/discussion', component: DiscussionPage, meta: { requiresAuth: true } },\r\n//   { path: '/create-discussion', component: CreateDiscussion, meta: { requiresAuth: true } },\r\n//   { path: '/square', component: SquarePage, meta: { requiresAuth: true } },\r\n//   {\r\n//     path: '/profile/:userId',\r\n//     component: UserProfile,\r\n//     meta: { requiresAuth: true },\r\n//     props: true\r\n//   },\r\n//   {\r\n//     path: '/problem/:problemId',\r\n//     component: ProblemDetail,\r\n//     meta: { requiresAuth: true },\r\n//     props: route => ({ problemId: parseInt(route.params.problemId, 10) }),\r\n//     children: [\r\n//       {\r\n//         path: 'solution',\r\n//         name: 'SolutionDetail',\r\n//         component: SolutionDetail,\r\n//         meta: { requiresAuth: true },\r\n//         props: route => ({ problemId: parseInt(route.params.problemId, 10) })\r\n//       },\r\n//       {\r\n//         path: 'submit',\r\n//         name: 'SubmitCode',\r\n//         component: SubmitCode,\r\n//         meta: { requiresAuth: true },\r\n//         props: route => ({ problemId: parseInt(route.params.problemId, 10) })\r\n//       },\r\n//     ]\r\n//   },\r\n//   { path: '/upload', component: UploadProblem, meta: { requiresAuth: true } },\r\n//   { path: '/uploadsolutions', component: UploadSolution, meta: { requiresAuth: true } }, // 上传题解\r\n//   { path: '/create-problemlist', component: CreateProblemList, meta: { requiresAuth: true } },\r\n//   { path: '/dashboard', component: Dashboard, meta: { requiresAuth: true } },\r\n//   { path: '*', redirect: '/login' },\r\n// ];\r\n//\r\n// const router = new VueRouter({\r\n//   mode: 'history',\r\n//   routes\r\n// });\r\n//\r\n// // 路由守卫\r\n// router.beforeEach((to, from, next) => {\r\n//   const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\r\n//   const token = localStorage.getItem('access_token');\r\n//\r\n//   if (requiresAuth && !token) {\r\n//     next('/login');\r\n//   } else {\r\n//     next();\r\n//   }\r\n// });\r\n//\r\n// // 全局导航守卫，触发全局事件以更新组件状态\r\n// router.afterEach(() => {\r\n//   const event = new Event('user-login-status-change');\r\n//   window.dispatchEvent(event);\r\n// });\r\n//\r\n// export default router;\r\n\r\n// src/router.js\r\n\r\nimport Vue from 'vue';\r\nimport VueRouter from 'vue-router';\r\nimport HomePage from './components/HomePage.vue';\r\nimport Login from './components/Login.vue';\r\nimport Register from './components/Register.vue';\r\nimport ProblemSet from './components/ProblemSet.vue';\r\nimport ProblemList from './components/ProblemList.vue';\r\nimport ContestPage from './components/Contest.vue';\r\nimport ContestDetail from './components/ContestDetail.vue';\r\nimport CreateContest from './components/CreateContest.vue';\r\nimport DiscussionPage from './components/Discussion.vue';\r\nimport CreateDiscussion from './components/CreateDiscussion.vue';\r\nimport SquarePage from './components/Square.vue';\r\nimport UserProfile from './components/UserProfile.vue';\r\nimport ProblemDetail from './components/ProblemDetail.vue';\r\nimport UploadProblem from './components/UploadProblem.vue';\r\nimport SolutionDetail from './components/SolutionDetail.vue';\r\nimport CreateProblemList from './components/CreateProblemList.vue';\r\nimport SubmitCode from './components/SubmitCode.vue';\r\nimport Dashboard from './components/Dashboard.vue';\r\nimport UploadSolution from \"@/components/UploadSolution.vue\";\r\nimport DiscussionDetail from './components/DiscussionDetail.vue';\r\n\r\nVue.use(VueRouter);\r\n\r\nconst routes = [\r\n  { path: '/', component: HomePage },\r\n  { path: '/login', component: Login },\r\n  { path: '/register', component: Register },\r\n  { path: '/problemset', component: ProblemSet, meta: { requiresAuth: true } },\r\n  { path: '/problemlist', component: ProblemList, meta: { requiresAuth: true } },\r\n  { path: '/contest', component: ContestPage, meta: { requiresAuth: true } },\r\n  {\r\n    path: '/contest/:id',\r\n    component: ContestDetail,\r\n    meta: { requiresAuth: true },\r\n    props: true\r\n  },\r\n  { path: '/create-contest', component: CreateContest, meta: { requiresAuth: true } },\r\n  { path: '/discussion', component: DiscussionPage, meta: { requiresAuth: true } },\r\n  { path: '/create-discussion', component: CreateDiscussion, meta: { requiresAuth: true } },\r\n  { path: '/square', component: SquarePage, meta: { requiresAuth: true } },\r\n  {\r\n    path: '/profile/:userId',\r\n    component: UserProfile,\r\n    meta: { requiresAuth: true },\r\n    props: true\r\n  },\r\n  {\r\n    path: '/problem/:problemId',\r\n    component: ProblemDetail,\r\n    meta: { requiresAuth: true },\r\n    props: route => ({ problemId: parseInt(route.params.problemId, 10) }),\r\n    children: [\r\n      {\r\n        path: 'solution',\r\n        name: 'SolutionDetail',\r\n        component: SolutionDetail,\r\n        meta: { requiresAuth: true },\r\n        props: route => ({ problemId: parseInt(route.params.problemId, 10) })\r\n      },\r\n      {\r\n        path: 'submit',\r\n        name: 'SubmitCode',\r\n        component: SubmitCode,\r\n        meta: { requiresAuth: true },\r\n        props: route => ({ problemId: parseInt(route.params.problemId, 10) })\r\n      },\r\n    ]\r\n  },\r\n  { path: '/upload', component: UploadProblem, meta: { requiresAuth: true } },\r\n  { path: '/uploadsolutions', component: UploadSolution, meta: { requiresAuth: true } }, // 上传题解\r\n  { path: '/create-problemlist', component: CreateProblemList, meta: { requiresAuth: true } },\r\n  { path: '/dashboard', component: Dashboard, meta: { requiresAuth: true } },\r\n  { path: '*', redirect: '/login' },\r\n  {\r\n    path: '/discussion/:discussionId',\r\n    component: DiscussionDetail,\r\n    meta: { requiresAuth: true },\r\n    props: true\r\n  },\r\n];\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  routes\r\n});\r\n\r\n// 路由守卫\r\nrouter.beforeEach((to, from, next) => {\r\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\r\n  const token = localStorage.getItem('access_token');\r\n\r\n  if (requiresAuth && !token) {\r\n    next('/login');\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\n// 全局导航守卫，触发全局事件以更新组件状态\r\nrouter.afterEach(() => {\r\n  const event = new Event('user-login-status-change');\r\n  window.dispatchEvent(event);\r\n});\r\n\r\nexport default router;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,gBAAgB,MAAM,mCAAmC;AAChE,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,iBAAiB,MAAM,oCAAoC;AAClE,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,gBAAgB,MAAM,mCAAmC;AAEhErB,GAAG,CAACsB,GAAG,CAACrB,SAAS,CAAC;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}