{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from '@/axios'; // 使用自定义的 Axios 实例\n\nexport default {\n  name: 'LoginComponent',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loading: false\n    };\n  },\n  methods: {\n    handleLogin() {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          axios.post('/login', this.loginForm).then(response => {\n            this.loading = false;\n            if (response.data.code === 200) {\n              this.$message.success('登录成功');\n              // 存储 Token\n              localStorage.setItem('access_token', response.data.access_token);\n              // 跳转到用户仪表盘\n              this.$router.push('/dashboard');\n              // 触发全局事件，通知其他组件更新登录状态\n              const event = new Event('user-login-status-change');\n              window.dispatchEvent(event);\n            } else {\n              this.$message.error(response.data.msg || '登录失败');\n            }\n          }).catch(error => {\n            this.loading = false;\n            console.error('登录失败:', error);\n            this.$message.error('登录失败，请重试');\n          });\n        } else {\n          this.$message.error('请完成表单字段的填写');\n          return false;\n        }\n      });\n    },\n    initStarryBackground() {\n      let canvas = document.getElementById('starry');\n      canvas.width = document.documentElement.clientWidth;\n      canvas.height = document.documentElement.clientHeight;\n      let ctx = canvas.getContext('2d');\n      class Star {\n        constructor() {\n          this.x = randNum(3, canvas.width - 3);\n          this.y = randNum(3, canvas.height - 3);\n          this.r = randNum(1, 3);\n          this.color = randColor();\n          this.speedX = randNum(-2, 2) * 0.2;\n          this.speedY = randNum(-3, 3) * 0.2;\n        }\n        draw() {\n          ctx.beginPath();\n          ctx.globalAlpha = 1;\n          ctx.fillStyle = this.color;\n          ctx.arc(this.x, this.y, this.r, 0, Math.PI * 2);\n          ctx.fill();\n        }\n        move() {\n          this.x += this.speedX;\n          this.y += this.speedY;\n          if (this.x <= 3 || this.x >= canvas.width - 3) this.speedX *= -1;\n          if (this.y <= 3 || this.y >= canvas.height - 3) this.speedY *= -1;\n        }\n      }\n      let stars = [];\n      for (let i = 0; i < 150; i++) {\n        let star = new Star();\n        stars.push(star);\n      }\n      let mouseX, mouseY;\n      canvas.onmousemove = function (event) {\n        mouseX = event.offsetX;\n        mouseY = event.offsetY;\n      };\n      function mouseLine() {\n        for (var i = 0; i < stars.length; i++) {\n          if (Math.sqrt(Math.pow(stars[i].x - mouseX, 2) + Math.pow(stars[i].y - mouseY, 2)) < 120) {\n            ctx.beginPath();\n            ctx.moveTo(stars[i].x, stars[i].y);\n            ctx.lineTo(mouseX, mouseY);\n            ctx.strokeStyle = \"white\";\n            ctx.globalAlpha = 0.8;\n            ctx.stroke();\n          }\n        }\n      }\n      function drawLine() {\n        for (var i = 0; i < stars.length; i++) {\n          stars[i].draw();\n          stars[i].move();\n        }\n      }\n      function main() {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        mouseLine();\n        drawLine();\n        window.requestAnimationFrame(main);\n      }\n      main();\n      function randNum(m, n) {\n        return Math.floor(Math.random() * (n - m + 1) + m);\n      }\n      function randColor() {\n        return 'rgb(' + randNum(0, 255) + ',' + randNum(0, 255) + ',' + randNum(0, 255) + ')';\n      }\n    }\n  },\n  mounted() {\n    this.initStarryBackground();\n  }\n};","map":{"version":3,"names":["axios","name","data","loginForm","username","password","loading","methods","handleLogin","$refs","validate","valid","post","then","response","code","$message","success","localStorage","setItem","access_token","$router","push","event","Event","window","dispatchEvent","error","msg","catch","console","initStarryBackground","canvas","document","getElementById","width","documentElement","clientWidth","height","clientHeight","ctx","getContext","Star","constructor","x","randNum","y","r","color","randColor","speedX","speedY","draw","beginPath","globalAlpha","fillStyle","arc","Math","PI","fill","move","stars","i","star","mouseX","mouseY","onmousemove","offsetX","offsetY","mouseLine","length","sqrt","pow","moveTo","lineTo","strokeStyle","stroke","drawLine","main","clearRect","requestAnimationFrame","m","n","floor","random","mounted"],"sources":["src/components/Login.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\" class=\"login-container\">\r\n    <canvas id=\"starry\"></canvas>\r\n    <el-form :model=\"loginForm\" ref=\"loginForm\" class=\"login-form\" @submit.native.prevent=\"handleLogin\">\r\n      <el-form-item prop=\"username\" :rules=\"[{ required: true, message: '请输入用户名', trigger: 'blur' }]\">\r\n        <el-input v-model=\"loginForm.username\" placeholder=\"用户名\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"password\" :rules=\"[{ required: true, message: '请输入密码', trigger: 'blur' }]\">\r\n        <el-input type=\"password\" v-model=\"loginForm.password\" placeholder=\"密码\" show-password></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"handleLogin\" :loading=\"loading\" class=\"login-button\">登录</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from '@/axios'; // 使用自定义的 Axios 实例\r\n\r\nexport default {\r\n  name: 'LoginComponent',\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      loading: false\r\n    };\r\n  },\r\n  methods: {\r\n    handleLogin() {\r\n      this.$refs.loginForm.validate((valid) => {\r\n        if (valid) {\r\n          this.loading = true;\r\n          axios.post('/login', this.loginForm)\r\n            .then(response => {\r\n              this.loading = false;\r\n              if (response.data.code === 200) {\r\n                this.$message.success('登录成功');\r\n                // 存储 Token\r\n                localStorage.setItem('access_token', response.data.access_token);\r\n                // 跳转到用户仪表盘\r\n                this.$router.push('/dashboard');\r\n                // 触发全局事件，通知其他组件更新登录状态\r\n                const event = new Event('user-login-status-change');\r\n                window.dispatchEvent(event);\r\n              } else {\r\n                this.$message.error(response.data.msg || '登录失败');\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              this.loading = false;\r\n              console.error('登录失败:', error);\r\n              this.$message.error('登录失败，请重试');\r\n            });\r\n        } else {\r\n          this.$message.error('请完成表单字段的填写');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    initStarryBackground() {\r\n      let canvas = document.getElementById('starry');\r\n      canvas.width = document.documentElement.clientWidth;\r\n      canvas.height = document.documentElement.clientHeight;\r\n      let ctx = canvas.getContext('2d');\r\n\r\n      class Star {\r\n        constructor() {\r\n          this.x = randNum(3, canvas.width - 3);\r\n          this.y = randNum(3, canvas.height - 3);\r\n          this.r = randNum(1, 3);\r\n          this.color = randColor();\r\n          this.speedX = randNum(-2, 2) * 0.2;\r\n          this.speedY = randNum(-3, 3) * 0.2;\r\n        }\r\n        draw() {\r\n          ctx.beginPath();\r\n          ctx.globalAlpha = 1;\r\n          ctx.fillStyle = this.color;\r\n          ctx.arc(this.x, this.y, this.r, 0, Math.PI * 2);\r\n          ctx.fill();\r\n        }\r\n        move() {\r\n          this.x += this.speedX;\r\n          this.y += this.speedY;\r\n          if (this.x <= 3 || this.x >= canvas.width - 3) this.speedX *= -1;\r\n          if (this.y <= 3 || this.y >= canvas.height - 3) this.speedY *= -1;\r\n        }\r\n      }\r\n\r\n      let stars = [];\r\n      for (let i = 0; i < 150; i++) {\r\n        let star = new Star();\r\n        stars.push(star);\r\n      }\r\n\r\n      let mouseX, mouseY;\r\n      canvas.onmousemove = function (event) {\r\n        mouseX = event.offsetX;\r\n        mouseY = event.offsetY;\r\n      }\r\n\r\n      function mouseLine() {\r\n        for (var i = 0; i < stars.length; i++) {\r\n          if (Math.sqrt(Math.pow((stars[i].x - mouseX), 2) + Math.pow((stars[i].y - mouseY), 2)) < 120) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(stars[i].x, stars[i].y);\r\n            ctx.lineTo(mouseX, mouseY);\r\n            ctx.strokeStyle = \"white\";\r\n            ctx.globalAlpha = 0.8;\r\n            ctx.stroke();\r\n          }\r\n        }\r\n      }\r\n\r\n      function drawLine() {\r\n        for (var i = 0; i < stars.length; i++) {\r\n          stars[i].draw();\r\n          stars[i].move();\r\n        }\r\n      }\r\n\r\n      function main() {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        mouseLine();\r\n        drawLine();\r\n        window.requestAnimationFrame(main);\r\n      }\r\n\r\n      main();\r\n\r\n      function randNum(m, n) {\r\n        return Math.floor(Math.random() * (n - m + 1) + m);\r\n      }\r\n\r\n      function randColor() {\r\n        return 'rgb(' + randNum(0, 255) + ',' + randNum(0, 255) + ',' + randNum(0, 255) + ')';\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initStarryBackground();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\nbody,\r\nhtml {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n#starry {\r\n  position: absolute;\r\n  background-color: #000000;\r\n}\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.login-form {\r\n  width: 300px;\r\n  padding: 20px;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.5);\r\n  border-radius: 8px;\r\n  z-index: 1;\r\n  color: #fff;\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n  padding: 15px;\r\n  font-size: 18px;\r\n  border-radius: 20px;\r\n  background: linear-gradient(45deg, #6b8cff, #a3a8ff);\r\n  color: #fff;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\r\n  transition: background 0.3s ease;\r\n}\r\n\r\n.login-button:hover {\r\n  background: linear-gradient(45deg, #5a7bff, #9298ff);\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}