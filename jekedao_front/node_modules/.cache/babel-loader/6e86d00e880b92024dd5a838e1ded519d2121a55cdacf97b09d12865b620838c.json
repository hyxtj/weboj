{"ast":null,"code":"import axios from '@/axios'; // 使用实例化的 Axios\n\nexport default {\n  name: 'SubmitCode',\n  data() {\n    return {\n      selectedLanguage: '',\n      code: '',\n      problemId: this.$route.params.problemId,\n      username: '用户',\n      // 需要从后端获取\n      userId: 1,\n      // 需要从后端获取\n      problemTitle: '题目名称',\n      // 需要从后端获取\n      formLabelWidth: '100px',\n      submissionResult: null\n    };\n  },\n  created() {\n    this.fetchProblemDetails();\n    this.fetchUserDetails();\n  },\n  methods: {\n    fetchProblemDetails() {\n      this.$axios.get(`/problems/${this.problemId}`).then(response => {\n        if (response.data.code === 200) {\n          this.problemTitle = response.data.data.title;\n        } else {\n          this.$message.error(response.data.msg || '无法获取题目信息');\n        }\n      }).catch(error => {\n        console.error('获取题目信息失败:', error);\n        this.$message.error('获取题目信息失败，请重试');\n      });\n    },\n    fetchUserDetails() {\n      this.$axios.get('/profile/me').then(response => {\n        if (response.data.code === 200) {\n          this.username = response.data.data.username;\n          this.userId = response.data.data.id;\n        } else {\n          this.$message.error(response.data.msg || '无法获取用户信息');\n        }\n      }).catch(error => {\n        console.error('获取用户信息失败:', error);\n        this.$message.error('获取用户信息失败，请重试');\n      });\n    },\n    submitCode() {\n      const payload = {\n        problem_id: parseInt(this.problemId, 10),\n        // 确保 problemId 是正整数\n        language: this.selectedLanguage,\n        code: this.code\n      };\n      console.log('Sending payload:', payload); // 调试步骤\n\n      this.$axios.post('/submit', payload).then(response => {\n        if (response.data.code === 201) {\n          this.$message.success('代码提交成功');\n          // 处理评测结果\n          const result = response.data.result;\n          if (result.status === 'AC') {\n            this.submissionResult = {\n              message: '评测通过',\n              type: 'success'\n            };\n          } else {\n            this.submissionResult = {\n              message: `评测失败: ${result.message}`,\n              type: 'error'\n            };\n          }\n          // 清空表单\n          this.selectedLanguage = '';\n          this.code = '';\n        } else {\n          this.$message.error(response.data.msg || '代码提交失败');\n        }\n      }).catch(error => {\n        console.error('提交失败:', error);\n        this.$message.error('代码提交失败，请重试');\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","selectedLanguage","code","problemId","$route","params","username","userId","problemTitle","formLabelWidth","submissionResult","created","fetchProblemDetails","fetchUserDetails","methods","$axios","get","then","response","title","$message","error","msg","catch","console","id","submitCode","payload","problem_id","parseInt","language","log","post","success","result","status","message","type"],"sources":["src/components/SubmitCode.vue"],"sourcesContent":["<template>\r\n  <div class=\"submit-code-container\">\r\n    <div class=\"form-section\">\r\n      <el-form @submit.native.prevent=\"submitCode\">\r\n        <el-form-item label=\"编程语言\" :label-width=\"formLabelWidth\">\r\n          <el-select v-model=\"selectedLanguage\" placeholder=\"请选择编程语言\">\r\n            <el-option label=\"Python\" value=\"python\"></el-option>\r\n            <el-option label=\"JavaScript\" value=\"javascript\"></el-option>\r\n            <el-option label=\"C++\" value=\"cpp\"></el-option>\r\n            <el-option label=\"Java\" value=\"java\"></el-option>\r\n            <el-option label=\"Go\" value=\"go\"></el-option>\r\n            <el-option label=\"Rust\" value=\"rust\"></el-option>\r\n            <el-option label=\"Ruby\" value=\"ruby\"></el-option>\r\n            <el-option label=\"PHP\" value=\"php\"></el-option>\r\n            <el-option label=\"Swift\" value=\"swift\"></el-option>\r\n            <el-option label=\"Kotlin\" value=\"kotlin\"></el-option>\r\n            <el-option label=\"C#\" value=\"csharp\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"代码\" :label-width=\"formLabelWidth\">\r\n          <el-input type=\"textarea\" v-model=\"code\" placeholder=\"请输入您的代码\"></el-input>\r\n        </el-form-item>\r\n        <el-button type=\"primary\" @click=\"submitCode\">提交代码</el-button>\r\n      </el-form>\r\n    </div>\r\n    <div class=\"info-section\">\r\n      <div class=\"user-info\">\r\n        <h3>用户信息</h3>\r\n        <p>用户名: {{ username }}</p>\r\n        <p>用户ID: {{ userId }}</p>\r\n      </div>\r\n      <div class=\"problem-info\">\r\n        <h3>题目信息</h3>\r\n        <p>题目ID: {{ problemId }}</p>\r\n        <p>题目名称: {{ problemTitle }}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"result-section\">\r\n      <el-alert\r\n        v-if=\"submissionResult\"\r\n        :title=\"submissionResult.message\"\r\n        :type=\"submissionResult.type\"\r\n        show-icon\r\n      ></el-alert>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from '@/axios'; // 使用实例化的 Axios\r\n\r\nexport default {\r\n  name: 'SubmitCode',\r\n  data() {\r\n    return {\r\n      selectedLanguage: '',\r\n      code: '',\r\n      problemId: this.$route.params.problemId,\r\n      username: '用户', // 需要从后端获取\r\n      userId: 1, // 需要从后端获取\r\n      problemTitle: '题目名称', // 需要从后端获取\r\n      formLabelWidth: '100px',\r\n      submissionResult: null\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchProblemDetails();\r\n    this.fetchUserDetails();\r\n  },\r\n  methods: {\r\n    fetchProblemDetails() {\r\n      this.$axios.get(`/problems/${this.problemId}`)\r\n        .then(response => {\r\n          if (response.data.code === 200) {\r\n            this.problemTitle = response.data.data.title;\r\n          } else {\r\n            this.$message.error(response.data.msg || '无法获取题目信息');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('获取题目信息失败:', error);\r\n          this.$message.error('获取题目信息失败，请重试');\r\n        });\r\n    },\r\n    fetchUserDetails() {\r\n      this.$axios.get('/profile/me')\r\n        .then(response => {\r\n          if (response.data.code === 200) {\r\n            this.username = response.data.data.username;\r\n            this.userId = response.data.data.id;\r\n          } else {\r\n            this.$message.error(response.data.msg || '无法获取用户信息');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('获取用户信息失败:', error);\r\n          this.$message.error('获取用户信息失败，请重试');\r\n        });\r\n    },\r\n    submitCode() {\r\n      const payload = {\r\n        problem_id: parseInt(this.problemId, 10),  // 确保 problemId 是正整数\r\n        language: this.selectedLanguage,\r\n        code: this.code\r\n      };\r\n\r\n      console.log('Sending payload:', payload);  // 调试步骤\r\n\r\n      this.$axios.post('/submit', payload)\r\n        .then(response => {\r\n          if (response.data.code === 201) {\r\n            this.$message.success('代码提交成功');\r\n            // 处理评测结果\r\n            const result = response.data.result;\r\n            if (result.status === 'AC') {\r\n              this.submissionResult = {\r\n                message: '评测通过',\r\n                type: 'success'\r\n              };\r\n            } else {\r\n              this.submissionResult = {\r\n                message: `评测失败: ${result.message}`,\r\n                type: 'error'\r\n              };\r\n            }\r\n            // 清空表单\r\n            this.selectedLanguage = '';\r\n            this.code = '';\r\n          } else {\r\n            this.$message.error(response.data.msg || '代码提交失败');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('提交失败:', error);\r\n          this.$message.error('代码提交失败，请重试');\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.submit-code-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 20px;\r\n  background-color: rgba(255, 255, 255, 0.95);\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.form-section {\r\n  flex: 2 1 60%;\r\n  padding: 20px;\r\n}\r\n\r\n.info-section {\r\n  flex: 1 1 30%;\r\n  padding: 20px;\r\n  margin-left: 20px;\r\n}\r\n\r\n.user-info, .problem-info {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.user-info h3, .problem-info h3 {\r\n  margin-bottom: 10px;\r\n  color: #007bff;\r\n}\r\n\r\n.result-section {\r\n  margin-top: 20px;\r\n  width: 100%;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .submit-code-container {\r\n    flex-direction: column;\r\n  }\r\n  .info-section {\r\n    margin-left: 0;\r\n    margin-top: 20px;\r\n  }\r\n}\r\n</style>"],"mappings":"AAiDA,OAAAA,KAAA;;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,gBAAA;MACAC,IAAA;MACAC,SAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAF,SAAA;MACAG,QAAA;MAAA;MACAC,MAAA;MAAA;MACAC,YAAA;MAAA;MACAC,cAAA;MACAC,gBAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,mBAAA;IACA,KAAAC,gBAAA;EACA;EACAC,OAAA;IACAF,oBAAA;MACA,KAAAG,MAAA,CAAAC,GAAA,mBAAAb,SAAA,IACAc,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAlB,IAAA,CAAAE,IAAA;UACA,KAAAM,YAAA,GAAAU,QAAA,CAAAlB,IAAA,CAAAA,IAAA,CAAAmB,KAAA;QACA;UACA,KAAAC,QAAA,CAAAC,KAAA,CAAAH,QAAA,CAAAlB,IAAA,CAAAsB,GAAA;QACA;MACA,GACAC,KAAA,CAAAF,KAAA;QACAG,OAAA,CAAAH,KAAA,cAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACAR,iBAAA;MACA,KAAAE,MAAA,CAAAC,GAAA,gBACAC,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAlB,IAAA,CAAAE,IAAA;UACA,KAAAI,QAAA,GAAAY,QAAA,CAAAlB,IAAA,CAAAA,IAAA,CAAAM,QAAA;UACA,KAAAC,MAAA,GAAAW,QAAA,CAAAlB,IAAA,CAAAA,IAAA,CAAAyB,EAAA;QACA;UACA,KAAAL,QAAA,CAAAC,KAAA,CAAAH,QAAA,CAAAlB,IAAA,CAAAsB,GAAA;QACA;MACA,GACAC,KAAA,CAAAF,KAAA;QACAG,OAAA,CAAAH,KAAA,cAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACAK,WAAA;MACA,MAAAC,OAAA;QACAC,UAAA,EAAAC,QAAA,MAAA1B,SAAA;QAAA;QACA2B,QAAA,OAAA7B,gBAAA;QACAC,IAAA,OAAAA;MACA;MAEAsB,OAAA,CAAAO,GAAA,qBAAAJ,OAAA;;MAEA,KAAAZ,MAAA,CAAAiB,IAAA,YAAAL,OAAA,EACAV,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAlB,IAAA,CAAAE,IAAA;UACA,KAAAkB,QAAA,CAAAa,OAAA;UACA;UACA,MAAAC,MAAA,GAAAhB,QAAA,CAAAlB,IAAA,CAAAkC,MAAA;UACA,IAAAA,MAAA,CAAAC,MAAA;YACA,KAAAzB,gBAAA;cACA0B,OAAA;cACAC,IAAA;YACA;UACA;YACA,KAAA3B,gBAAA;cACA0B,OAAA,WAAAF,MAAA,CAAAE,OAAA;cACAC,IAAA;YACA;UACA;UACA;UACA,KAAApC,gBAAA;UACA,KAAAC,IAAA;QACA;UACA,KAAAkB,QAAA,CAAAC,KAAA,CAAAH,QAAA,CAAAlB,IAAA,CAAAsB,GAAA;QACA;MACA,GACAC,KAAA,CAAAF,KAAA;QACAG,OAAA,CAAAH,KAAA,UAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}