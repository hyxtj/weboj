{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//import axios from '@/axios'; // 使用实例化的 Axios\n\nexport default {\n  name: 'RegisterComponent',\n  data() {\n    return {\n      registerForm: {\n        username: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      }\n    };\n  },\n  methods: {\n    handleRegister() {\n      if (this.registerForm.password !== this.registerForm.confirmPassword) {\n        this.$message.error('密码和确认密码不一致');\n        return;\n      }\n      this.$axios.post('/register', this.registerForm).then(response => {\n        if (response.data.code === 200) {\n          this.$message.success(response.data.message);\n          this.$router.push('/login');\n        } else {\n          this.$message.error(response.data.message);\n        }\n      }).catch(() => {\n        this.$message.error('注册失败');\n      });\n    },\n    initStarryBackground() {\n      let canvas = document.getElementById('starry');\n      canvas.width = document.documentElement.clientWidth;\n      canvas.height = document.documentElement.clientHeight;\n      let ctx = canvas.getContext('2d');\n      class Star {\n        constructor() {\n          this.x = randNum(3, canvas.width - 3);\n          this.y = randNum(3, canvas.height - 3);\n          this.r = randNum(1, 3);\n          this.color = randColor();\n          this.speedX = randNum(-2, 2) * 0.2;\n          this.speedY = randNum(-3, 3) * 0.2;\n        }\n        draw() {\n          ctx.beginPath();\n          ctx.globalAlpha = 1;\n          ctx.fillStyle = this.color;\n          ctx.arc(this.x, this.y, this.r, 0, Math.PI * 2);\n          ctx.fill();\n        }\n        move() {\n          this.x += this.speedX;\n          this.y += this.speedY;\n          if (this.x <= 3 || this.x >= canvas.width - 3) this.speedX *= -1;\n          if (this.y <= 3 || this.y >= canvas.height - 3) this.speedY *= -1;\n        }\n      }\n      let stars = [];\n      for (let i = 0; i < 200; i++) {\n        let star = new Star();\n        stars.push(star);\n      }\n      let mouseX, mouseY;\n      canvas.onmousemove = function (event) {\n        mouseX = event.offsetX;\n        mouseY = event.offsetY;\n      };\n      function mouseLine() {\n        for (var i = 0; i < stars.length; i++) {\n          if (Math.sqrt(Math.pow(stars[i].x - mouseX, 2) + Math.pow(stars[i].y - mouseY, 2)) < 120) {\n            ctx.beginPath();\n            ctx.moveTo(stars[i].x, stars[i].y);\n            ctx.lineTo(mouseX, mouseY);\n            ctx.strokeStyle = \"white\";\n            ctx.globalAlpha = 0.8;\n            ctx.stroke();\n          }\n        }\n      }\n      function drawLine() {\n        for (var i = 0; i < stars.length; i++) {\n          stars[i].draw();\n          stars[i].move();\n        }\n      }\n      function main() {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        mouseLine();\n        drawLine();\n        window.requestAnimationFrame(main);\n      }\n      main();\n      function randNum(m, n) {\n        return Math.floor(Math.random() * (n - m + 1) + m);\n      }\n      function randColor() {\n        return 'rgb(' + randNum(0, 255) + ',' + randNum(0, 255) + ',' + randNum(0, 255) + ')';\n      }\n    }\n  },\n  mounted() {\n    this.initStarryBackground();\n  }\n};","map":{"version":3,"names":["name","data","registerForm","username","email","password","confirmPassword","methods","handleRegister","$message","error","$axios","post","then","response","code","success","message","$router","push","catch","initStarryBackground","canvas","document","getElementById","width","documentElement","clientWidth","height","clientHeight","ctx","getContext","Star","constructor","x","randNum","y","r","color","randColor","speedX","speedY","draw","beginPath","globalAlpha","fillStyle","arc","Math","PI","fill","move","stars","i","star","mouseX","mouseY","onmousemove","event","offsetX","offsetY","mouseLine","length","sqrt","pow","moveTo","lineTo","strokeStyle","stroke","drawLine","main","clearRect","window","requestAnimationFrame","m","n","floor","random","mounted"],"sources":["src/components/Register.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\" class=\"register-container\">\r\n    <canvas id=\"starry\"></canvas>\r\n    <el-form :model=\"registerForm\" ref=\"registerForm\" class=\"register-form\">\r\n      <el-form-item prop=\"username\">\r\n        <el-input v-model=\"registerForm.username\" placeholder=\"用户名\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"email\">\r\n        <el-input v-model=\"registerForm.email\" placeholder=\"邮箱\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"password\">\r\n        <el-input type=\"password\" v-model=\"registerForm.password\" placeholder=\"密码\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"confirmPassword\">\r\n        <el-input type=\"password\" v-model=\"registerForm.confirmPassword\" placeholder=\"确认密码\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"handleRegister\">注册</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//import axios from '@/axios'; // 使用实例化的 Axios\r\n\r\nexport default {\r\n  name: 'RegisterComponent',\r\n  data() {\r\n    return {\r\n      registerForm: {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    handleRegister() {\r\n      if (this.registerForm.password !== this.registerForm.confirmPassword) {\r\n        this.$message.error('密码和确认密码不一致');\r\n        return;\r\n      }\r\n      this.$axios.post('/register', this.registerForm)\r\n        .then(response => {\r\n          if (response.data.code === 200) {\r\n            this.$message.success(response.data.message);\r\n            this.$router.push('/login');\r\n          } else {\r\n            this.$message.error(response.data.message);\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.$message.error('注册失败');\r\n        });\r\n    },\r\n    initStarryBackground() {\r\n      let canvas = document.getElementById('starry');\r\n      canvas.width = document.documentElement.clientWidth;\r\n      canvas.height = document.documentElement.clientHeight;\r\n      let ctx = canvas.getContext('2d');\r\n\r\n      class Star {\r\n        constructor() {\r\n          this.x = randNum(3, canvas.width - 3);\r\n          this.y = randNum(3, canvas.height - 3);\r\n          this.r = randNum(1, 3);\r\n          this.color = randColor();\r\n          this.speedX = randNum(-2, 2) * 0.2;\r\n          this.speedY = randNum(-3, 3) * 0.2;\r\n        }\r\n        draw() {\r\n          ctx.beginPath();\r\n          ctx.globalAlpha = 1;\r\n          ctx.fillStyle = this.color;\r\n          ctx.arc(this.x, this.y, this.r, 0, Math.PI * 2);\r\n          ctx.fill();\r\n        }\r\n        move() {\r\n          this.x += this.speedX;\r\n          this.y += this.speedY;\r\n          if (this.x <= 3 || this.x >= canvas.width - 3) this.speedX *= -1;\r\n          if (this.y <= 3 || this.y >= canvas.height - 3) this.speedY *= -1;\r\n        }\r\n      }\r\n\r\n      let stars = [];\r\n      for (let i = 0; i < 200; i++) {\r\n        let star = new Star();\r\n        stars.push(star);\r\n      }\r\n\r\n      let mouseX, mouseY;\r\n      canvas.onmousemove = function (event) {\r\n        mouseX = event.offsetX;\r\n        mouseY = event.offsetY;\r\n      }\r\n\r\n      function mouseLine() {\r\n        for (var i = 0; i < stars.length; i++) {\r\n          if (Math.sqrt(Math.pow((stars[i].x - mouseX), 2) + Math.pow((stars[i].y - mouseY), 2)) < 120) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(stars[i].x, stars[i].y);\r\n            ctx.lineTo(mouseX, mouseY);\r\n            ctx.strokeStyle = \"white\";\r\n            ctx.globalAlpha = 0.8;\r\n            ctx.stroke();\r\n          }\r\n        }\r\n      }\r\n\r\n      function drawLine() {\r\n        for (var i = 0; i < stars.length; i++) {\r\n          stars[i].draw();\r\n          stars[i].move();\r\n        }\r\n      }\r\n\r\n      function main() {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        mouseLine();\r\n        drawLine();\r\n        window.requestAnimationFrame(main);\r\n      }\r\n\r\n      main();\r\n\r\n      function randNum(m, n) {\r\n        return Math.floor(Math.random() * (n - m + 1) + m);\r\n      }\r\n\r\n      function randColor() {\r\n        return 'rgb(' + randNum(0, 255) + ',' + randNum(0, 255) + ',' + randNum(0, 255) + ')';\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initStarryBackground();\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\nbody,\r\nhtml {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  font-family: 'Arial', sans-serif;\r\n}\r\n#starry {\r\n  position: absolute;\r\n  background-color: #000000;\r\n}\r\n.register-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.register-form {\r\n  width: 300px;\r\n  padding: 20px;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);\r\n  border-radius: 8px;\r\n  z-index: 1;\r\n  color: #fff;\r\n  text-align: center;\r\n}\r\n\r\n.el-input {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border: none;\r\n  border-radius: 8px;\r\n  color: #fff;\r\n  font-size: 16px;\r\n}\r\n\r\n.el-input::placeholder {\r\n  color: rgba(255, 255, 255, 0.5);\r\n}\r\n\r\n.el-button {\r\n  width: 100%;\r\n  padding: 15px;\r\n  font-size: 18px;\r\n  border-radius: 25px;\r\n  background: linear-gradient(45deg, #6b8cff, #a3a8ff);\r\n  color: #fff;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\r\n  transition: background 0.3s ease, transform 0.3s ease;\r\n}\r\n\r\n.el-button:hover {\r\n  background: linear-gradient(45deg, #5a7bff, #9298ff);\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.el-button:active {\r\n  transform: translateY(1px);\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}