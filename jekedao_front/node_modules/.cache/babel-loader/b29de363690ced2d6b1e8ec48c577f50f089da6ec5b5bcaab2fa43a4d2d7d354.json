{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from '@/axios';\nimport SolutionDetail from './SolutionDetail.vue'; // 引入题解详情组件\nimport SubmitCode from './SubmitCode.vue'; // 引入提交代码组件\n\nexport default {\n  name: 'ProblemDetail',\n  components: {\n    SolutionDetail,\n    SubmitCode\n  },\n  props: {\n    problemId: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      problem: null,\n      loading: false,\n      isAuthor: false,\n      // 是否为题目作者\n      activeTab: 'solution',\n      // 默认激活的标签\n      editDialogVisible: false,\n      // 编辑弹窗显示状态\n      editForm: {\n        title: '',\n        description: '',\n        difficulty: ''\n      },\n      editRules: {\n        title: [{\n          required: true,\n          message: '请输入题目标题',\n          trigger: 'blur'\n        }],\n        description: [{\n          required: true,\n          message: '请输入题目描述',\n          trigger: 'blur'\n        }],\n        difficulty: [{\n          required: true,\n          message: '请选择难度',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  watch: {\n    problemId(newId, oldId) {\n      if (newId !== oldId) {\n        this.fetchProblem();\n      }\n    }\n  },\n  created() {\n    if (this.problemId) {\n      this.fetchProblem();\n      // 根据当前路由设置激活的标签\n      const currentPath = this.$route.path;\n      if (currentPath.includes('/solution')) {\n        this.activeTab = 'solution';\n      } else if (currentPath.includes('/submit')) {\n        this.activeTab = 'submit';\n      }\n    } else {\n      this.$message.error('无效的题目ID');\n    }\n  },\n  methods: {\n    fetchProblem() {\n      console.log('Fetching problem with ID:', this.problemId);\n      if (!this.problemId) {\n        this.$message.error('无效的题目ID');\n        return;\n      }\n      this.loading = true;\n      axios.get(`/problems/${this.problemId}`).then(response => {\n        this.loading = false;\n        if (response.data.code === 200) {\n          this.problem = response.data.data;\n          this.checkAuthor();\n        } else {\n          this.$message.error(response.data.msg || '获取题目信息失败');\n        }\n      }).catch(error => {\n        this.loading = false;\n        console.error('获取题目信息失败:', error);\n        this.$message.error('获取题目信息失败，请重试');\n      });\n    },\n    formatDate(dateStr) {\n      const date = new Date(dateStr);\n      return date.toLocaleString();\n    },\n    checkAuthor() {\n      // 假设后端返回的题目信息包含作者ID\n      const currentUserId = parseInt(localStorage.getItem('user_id'), 10);\n      if (this.problem.author_id === currentUserId) {\n        this.isAuthor = true;\n      }\n      // 初始化编辑表单数据\n      if (this.isAuthor) {\n        this.editForm.title = this.problem.title;\n        this.editForm.description = this.problem.description;\n        this.editForm.difficulty = this.problem.difficulty;\n      }\n    },\n    deleteProblem() {\n      this.$confirm('确定要删除这个题目吗？', '删除题目', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        axios.delete(`/problems/${this.problemId}`).then(response => {\n          if (response.data.code === 200) {\n            this.$message.success('题目删除成功');\n            this.$router.push('/problemset');\n          } else {\n            this.$message.error(response.data.msg || '删除失败');\n          }\n        }).catch(error => {\n          console.error('删除题目失败:', error);\n          this.$message.error('删除题目失败，请重试');\n        });\n      }).catch(() => {\n        // 取消删除\n      });\n    },\n    openEditDialog() {\n      this.editDialogVisible = true;\n    },\n    submitEdit() {\n      this.$refs.editForm.validate(valid => {\n        if (valid) {\n          axios.put(`/problems/${this.problemId}`, this.editForm).then(response => {\n            if (response.data.code === 200) {\n              this.$message.success('题目编辑成功');\n              this.editDialogVisible = false;\n              this.fetchProblem(); // 重新获取最新题目信息\n            } else {\n              this.$message.error(response.data.msg || '编辑失败');\n            }\n          }).catch(error => {\n            console.error('编辑题目失败:', error);\n            this.$message.error('编辑题目失败，请重试');\n          });\n        } else {\n          console.log('表单验证失败');\n          return false;\n        }\n      });\n    },\n    handleTabClick(tab) {\n      this.activeTab = tab.name;\n      if (tab.name === 'solution') {\n        this.$router.push(`/problem/${this.problemId}/solution`);\n      } else if (tab.name === 'submit') {\n        this.$router.push(`/problem/${this.problemId}/submit`);\n      }\n    },\n    initStarryBackground() {\n      let canvas = document.getElementById('starry');\n      canvas.width = document.documentElement.clientWidth;\n      canvas.height = document.documentElement.clientHeight;\n      let ctx = canvas.getContext('2d');\n      class Star {\n        constructor() {\n          this.x = randNum(3, canvas.width - 3);\n          this.y = randNum(3, canvas.height - 3);\n          this.r = randNum(1, 3);\n          this.color = randColor();\n          this.speedX = randNum(-2, 2) * 0.2;\n          this.speedY = randNum(-3, 3) * 0.2;\n        }\n        draw() {\n          ctx.beginPath();\n          ctx.globalAlpha = 1;\n          ctx.fillStyle = this.color;\n          ctx.arc(this.x, this.y, this.r, 0, Math.PI * 2);\n          ctx.fill();\n        }\n        move() {\n          this.x += this.speedX;\n          this.y += this.speedY;\n          if (this.x <= 3 || this.x >= canvas.width - 3) this.speedX *= -1;\n          if (this.y <= 3 || this.y >= canvas.height - 3) this.speedY *= -1;\n        }\n      }\n      let stars = [];\n      for (let i = 0; i < 200; i++) {\n        let star = new Star();\n        stars.push(star);\n      }\n      let mouseX, mouseY;\n      canvas.onmousemove = function (event) {\n        mouseX = event.offsetX;\n        mouseY = event.offsetY;\n      };\n      function mouseLine() {\n        for (var i = 0; i < stars.length; i++) {\n          if (Math.sqrt(Math.pow(stars[i].x - mouseX, 2) + Math.pow(stars[i].y - mouseY, 2)) < 120) {\n            ctx.beginPath();\n            ctx.moveTo(stars[i].x, stars[i].y);\n            ctx.lineTo(mouseX, mouseY);\n            ctx.strokeStyle = \"rgba(0, 0, 0, 0.5)\";\n            ctx.globalAlpha = 0.8;\n            ctx.stroke();\n          }\n        }\n      }\n      function drawLine() {\n        for (var i = 0; i < stars.length; i++) {\n          stars[i].draw();\n          stars[i].move();\n        }\n      }\n      function main() {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        mouseLine();\n        drawLine();\n        window.requestAnimationFrame(main);\n      }\n      main();\n      function randNum(m, n) {\n        return Math.floor(Math.random() * (n - m + 1) + m);\n      }\n      function randColor() {\n        return 'rgb(' + randNum(50, 200) + ',' + randNum(50, 200) + ',' + randNum(50, 200) + ')';\n      }\n    }\n  },\n  mounted() {\n    this.initStarryBackground();\n    window.addEventListener('resize', this.initStarryBackground);\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.initStarryBackground);\n  }\n};","map":{"version":3,"names":["axios","SolutionDetail","SubmitCode","name","components","props","problemId","type","Number","required","data","problem","loading","isAuthor","activeTab","editDialogVisible","editForm","title","description","difficulty","editRules","message","trigger","watch","newId","oldId","fetchProblem","created","currentPath","$route","path","includes","$message","error","methods","console","log","get","then","response","code","checkAuthor","msg","catch","formatDate","dateStr","date","Date","toLocaleString","currentUserId","parseInt","localStorage","getItem","author_id","deleteProblem","$confirm","confirmButtonText","cancelButtonText","delete","success","$router","push","openEditDialog","submitEdit","$refs","validate","valid","put","handleTabClick","tab","initStarryBackground","canvas","document","getElementById","width","documentElement","clientWidth","height","clientHeight","ctx","getContext","Star","constructor","x","randNum","y","r","color","randColor","speedX","speedY","draw","beginPath","globalAlpha","fillStyle","arc","Math","PI","fill","move","stars","i","star","mouseX","mouseY","onmousemove","event","offsetX","offsetY","mouseLine","length","sqrt","pow","moveTo","lineTo","strokeStyle","stroke","drawLine","main","clearRect","window","requestAnimationFrame","m","n","floor","random","mounted","addEventListener","beforeDestroy","removeEventListener"],"sources":["src/components/ProblemDetail.vue"],"sourcesContent":["<!-- src/components/ProblemDetail.vue -->\r\n<template>\r\n  <div class=\"problem-detail-container\">\r\n    <canvas id=\"starry\"></canvas>\r\n    <el-card class=\"box-card\">\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <span class=\"title\">{{ problem.title }}</span>\r\n        <div class=\"header-buttons\" v-if=\"isAuthor\">\r\n          <el-button\r\n            type=\"primary\"\r\n            size=\"mini\"\r\n            icon=\"el-icon-edit\"\r\n            @click=\"openEditDialog\"\r\n          >\r\n            编辑题目\r\n          </el-button>\r\n          <el-button\r\n            type=\"danger\"\r\n            size=\"mini\"\r\n            icon=\"el-icon-delete\"\r\n            @click=\"deleteProblem\"\r\n          >\r\n            删除题目\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n      <div v-if=\"problem\">\r\n        <el-row>\r\n          <el-col :span=\"4\" class=\"label\">描述:</el-col>\r\n          <el-col :span=\"20\" class=\"content\">{{ problem.description }}</el-col>\r\n        </el-row>\r\n        <el-row>\r\n          <el-col :span=\"4\" class=\"label\">难度:</el-col>\r\n          <el-col :span=\"20\" class=\"content\">{{ problem.difficulty }}</el-col>\r\n        </el-row>\r\n        <el-row>\r\n          <el-col :span=\"4\" class=\"label\">上传时间:</el-col>\r\n          <el-col :span=\"20\" class=\"content\">{{ formatDate(problem.upload_time) }}</el-col>\r\n        </el-row>\r\n      </div>\r\n      <div v-else-if=\"loading\" class=\"loading\">\r\n        <el-spinner type=\"double-bubble\"></el-spinner>\r\n        <span>加载中...</span>\r\n      </div>\r\n      <div v-else class=\"error-message\">\r\n        <el-alert title=\"无效的题目ID\" type=\"error\" show-icon></el-alert>\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 编辑题目弹窗 -->\r\n    <el-dialog title=\"编辑题目\" :visible.sync=\"editDialogVisible\">\r\n      <el-form :model=\"editForm\" :rules=\"editRules\" ref=\"editForm\" label-width=\"120px\">\r\n        <el-form-item label=\"题目标题\" prop=\"title\">\r\n          <el-input v-model=\"editForm.title\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\" prop=\"description\">\r\n          <el-input type=\"textarea\" v-model=\"editForm.description\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"难度\" prop=\"difficulty\">\r\n          <el-select v-model=\"editForm.difficulty\" placeholder=\"请选择难度\">\r\n            <el-option label=\"简单\" value=\"Easy\"></el-option>\r\n            <el-option label=\"中等\" value=\"Medium\"></el-option>\r\n            <el-option label=\"困难\" value=\"Hard\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitEdit\">确定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- 题解和提交代码标签页 -->\r\n    <el-tabs\r\n      v-if=\"problem\"\r\n      type=\"card\"\r\n      class=\"tabs-section\"\r\n      @tab-click=\"handleTabClick\"\r\n      :value=\"activeTab\"\r\n    >\r\n      <el-tab-pane label=\"题解\" name=\"solution\">\r\n        <SolutionDetail :problemId=\"problemId\" />\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"提交代码\" name=\"submit\">\r\n        <SubmitCode :problemId=\"problemId\" />\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from '@/axios';\r\nimport SolutionDetail from './SolutionDetail.vue'; // 引入题解详情组件\r\nimport SubmitCode from './SubmitCode.vue'; // 引入提交代码组件\r\n\r\nexport default {\r\n  name: 'ProblemDetail',\r\n  components: {\r\n    SolutionDetail,\r\n    SubmitCode\r\n  },\r\n  props: {\r\n    problemId: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      problem: null,\r\n      loading: false,\r\n      isAuthor: false, // 是否为题目作者\r\n      activeTab: 'solution', // 默认激活的标签\r\n      editDialogVisible: false, // 编辑弹窗显示状态\r\n      editForm: {\r\n        title: '',\r\n        description: '',\r\n        difficulty: ''\r\n      },\r\n      editRules: {\r\n        title: [\r\n          { required: true, message: '请输入题目标题', trigger: 'blur' }\r\n        ],\r\n        description: [\r\n          { required: true, message: '请输入题目描述', trigger: 'blur' }\r\n        ],\r\n        difficulty: [\r\n          { required: true, message: '请选择难度', trigger: 'change' }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  watch: {\r\n    problemId(newId, oldId) {\r\n      if (newId !== oldId) {\r\n        this.fetchProblem();\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    if (this.problemId) {\r\n      this.fetchProblem();\r\n      // 根据当前路由设置激活的标签\r\n      const currentPath = this.$route.path;\r\n      if (currentPath.includes('/solution')) {\r\n        this.activeTab = 'solution';\r\n      } else if (currentPath.includes('/submit')) {\r\n        this.activeTab = 'submit';\r\n      }\r\n    } else {\r\n      this.$message.error('无效的题目ID');\r\n    }\r\n  },\r\n  methods: {\r\n    fetchProblem() {\r\n      console.log('Fetching problem with ID:', this.problemId);\r\n      if (!this.problemId) {\r\n        this.$message.error('无效的题目ID');\r\n        return;\r\n      }\r\n      this.loading = true;\r\n      axios.get(`/problems/${this.problemId}`)\r\n        .then(response => {\r\n          this.loading = false;\r\n          if (response.data.code === 200) {\r\n            this.problem = response.data.data;\r\n            this.checkAuthor();\r\n          } else {\r\n            this.$message.error(response.data.msg || '获取题目信息失败');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          this.loading = false;\r\n          console.error('获取题目信息失败:', error);\r\n          this.$message.error('获取题目信息失败，请重试');\r\n        });\r\n    },\r\n    formatDate(dateStr) {\r\n      const date = new Date(dateStr);\r\n      return date.toLocaleString();\r\n    },\r\n    checkAuthor() {\r\n      // 假设后端返回的题目信息包含作者ID\r\n      const currentUserId = parseInt(localStorage.getItem('user_id'), 10);\r\n      if (this.problem.author_id === currentUserId) {\r\n        this.isAuthor = true;\r\n      }\r\n      // 初始化编辑表单数据\r\n      if (this.isAuthor) {\r\n        this.editForm.title = this.problem.title;\r\n        this.editForm.description = this.problem.description;\r\n        this.editForm.difficulty = this.problem.difficulty;\r\n      }\r\n    },\r\n    deleteProblem() {\r\n      this.$confirm('确定要删除这个题目吗？', '删除题目', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        axios.delete(`/problems/${this.problemId}`)\r\n          .then(response => {\r\n            if (response.data.code === 200) {\r\n              this.$message.success('题目删除成功');\r\n              this.$router.push('/problemset');\r\n            } else {\r\n              this.$message.error(response.data.msg || '删除失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('删除题目失败:', error);\r\n            this.$message.error('删除题目失败，请重试');\r\n          });\r\n      }).catch(() => {\r\n        // 取消删除\r\n      });\r\n    },\r\n    openEditDialog() {\r\n      this.editDialogVisible = true;\r\n    },\r\n    submitEdit() {\r\n      this.$refs.editForm.validate((valid) => {\r\n        if (valid) {\r\n          axios.put(`/problems/${this.problemId}`, this.editForm)\r\n            .then(response => {\r\n              if (response.data.code === 200) {\r\n                this.$message.success('题目编辑成功');\r\n                this.editDialogVisible = false;\r\n                this.fetchProblem(); // 重新获取最新题目信息\r\n              } else {\r\n                this.$message.error(response.data.msg || '编辑失败');\r\n              }\r\n            })\r\n            .catch(error => {\r\n              console.error('编辑题目失败:', error);\r\n              this.$message.error('编辑题目失败，请重试');\r\n            });\r\n        } else {\r\n          console.log('表单验证失败');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    handleTabClick(tab) {\r\n      this.activeTab = tab.name;\r\n      if (tab.name === 'solution') {\r\n        this.$router.push(`/problem/${this.problemId}/solution`);\r\n      } else if (tab.name === 'submit') {\r\n        this.$router.push(`/problem/${this.problemId}/submit`);\r\n      }\r\n    },\r\n    initStarryBackground() {\r\n      let canvas = document.getElementById('starry');\r\n      canvas.width = document.documentElement.clientWidth;\r\n      canvas.height = document.documentElement.clientHeight;\r\n      let ctx = canvas.getContext('2d');\r\n\r\n      class Star {\r\n        constructor() {\r\n          this.x = randNum(3, canvas.width - 3);\r\n          this.y = randNum(3, canvas.height - 3);\r\n          this.r = randNum(1, 3);\r\n          this.color = randColor();\r\n          this.speedX = randNum(-2, 2) * 0.2;\r\n          this.speedY = randNum(-3, 3) * 0.2;\r\n        }\r\n        draw() {\r\n          ctx.beginPath();\r\n          ctx.globalAlpha = 1;\r\n          ctx.fillStyle = this.color;\r\n          ctx.arc(this.x, this.y, this.r, 0, Math.PI * 2);\r\n          ctx.fill();\r\n        }\r\n        move() {\r\n          this.x += this.speedX;\r\n          this.y += this.speedY;\r\n          if (this.x <= 3 || this.x >= canvas.width - 3) this.speedX *= -1;\r\n          if (this.y <= 3 || this.y >= canvas.height - 3) this.speedY *= -1;\r\n        }\r\n      }\r\n\r\n      let stars = [];\r\n      for (let i = 0; i < 200; i++) {\r\n        let star = new Star();\r\n        stars.push(star);\r\n      }\r\n\r\n      let mouseX, mouseY;\r\n      canvas.onmousemove = function (event) {\r\n        mouseX = event.offsetX;\r\n        mouseY = event.offsetY;\r\n      }\r\n\r\n      function mouseLine() {\r\n        for (var i = 0; i < stars.length; i++) {\r\n          if (Math.sqrt(Math.pow((stars[i].x - mouseX), 2) + Math.pow((stars[i].y - mouseY), 2)) < 120) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(stars[i].x, stars[i].y);\r\n            ctx.lineTo(mouseX, mouseY);\r\n            ctx.strokeStyle = \"rgba(0, 0, 0, 0.5)\";\r\n            ctx.globalAlpha = 0.8;\r\n            ctx.stroke();\r\n          }\r\n        }\r\n      }\r\n\r\n      function drawLine() {\r\n        for (var i = 0; i < stars.length; i++) {\r\n          stars[i].draw();\r\n          stars[i].move();\r\n        }\r\n      }\r\n\r\n      function main() {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        mouseLine();\r\n        drawLine();\r\n        window.requestAnimationFrame(main);\r\n      }\r\n\r\n      main();\r\n\r\n      function randNum(m, n) {\r\n        return Math.floor(Math.random() * (n - m + 1) + m);\r\n      }\r\n\r\n      function randColor() {\r\n        return 'rgb(' + randNum(50, 200) + ',' + randNum(50, 200) + ',' + randNum(50, 200) + ')';\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initStarryBackground();\r\n    window.addEventListener('resize', this.initStarryBackground);\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener('resize', this.initStarryBackground);\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\nbody,\r\nhtml {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  font-family: 'KaiTi', '楷体', serif; /* 设置字体为楷体 */\r\n}\r\n#starry {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #ffffff; /* 设置背景颜色为白色 */\r\n  z-index: -1;\r\n}\r\n.problem-detail-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  background: rgba(255, 255, 255, 0.9); /* 设置容器背景为白色 */\r\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\r\n  border-radius: 12px;\r\n}\r\n.box-card {\r\n  margin-bottom: 20px;\r\n  width: 100%;\r\n}\r\n.title {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  font-family: 'KaiTi', '楷体', serif; /* 设置字体为楷体 */\r\n}\r\n.header-buttons {\r\n  float: right;\r\n}\r\n.header-buttons .el-button {\r\n  margin-left: 10px;\r\n}\r\n.label {\r\n  font-weight: bold;\r\n  padding: 10px 0;\r\n  font-family: 'KaiTi', '楷体', serif; /* 设置字体为楷体 */\r\n}\r\n.content {\r\n  padding: 10px 0;\r\n  color: #555;\r\n  font-family: 'KaiTi', '楷体', serif; /* 设置字体为楷体 */\r\n}\r\n.loading {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 20px;\r\n  color: #409EFF;\r\n  font-family: 'KaiTi', '楷体', serif; /* 设置字体为楷体 */\r\n}\r\n.loading span {\r\n  margin-left: 10px;\r\n}\r\n.error-message {\r\n  padding: 20px;\r\n  font-family: 'KaiTi', '楷体', serif; /* 设置字体为楷体 */\r\n}\r\n.tabs-section {\r\n  margin-top: 20px;\r\n  width: 100%;\r\n  font-family: 'KaiTi', '楷体', serif; /* 设置字体为楷体 */\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}