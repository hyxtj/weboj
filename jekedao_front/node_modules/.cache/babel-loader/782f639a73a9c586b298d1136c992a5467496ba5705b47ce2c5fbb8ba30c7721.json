{"ast":null,"code":"import axios from '@/axios'; // 使用实例化的 Axios\n\nexport default {\n  name: 'SubmitSolution',\n  data() {\n    return {\n      solutionText: '',\n      problemId: this.$route.params.problemId,\n      username: '用户',\n      // 需要从后端获取\n      userId: 1,\n      // 需要从后端获取\n      problemTitle: '题目名称',\n      // 需要从后端获取\n      formLabelWidth: '100px'\n    };\n  },\n  created() {\n    this.fetchProblemDetails();\n    this.fetchUserDetails();\n  },\n  methods: {\n    fetchProblemDetails() {\n      axios.get(`/problems/${this.problemId}`).then(response => {\n        if (response.data.code === 200) {\n          this.problemTitle = response.data.data.title;\n        } else {\n          this.$message.error(response.data.msg || '无法获取题目信息');\n        }\n      }).catch(error => {\n        console.error('获取题目信息失败:', error);\n        this.$message.error('获取题目信息失败，请重试');\n      });\n    },\n    fetchUserDetails() {\n      axios.get('/profile/me').then(response => {\n        if (response.data.code === 200) {\n          this.username = response.data.data.username;\n          this.userId = response.data.data.id;\n        } else {\n          this.$message.error(response.data.msg || '无法获取用户信息');\n        }\n      }).catch(error => {\n        console.error('获取用户信息失败:', error);\n        this.$message.error('获取用户信息失败，请重试');\n      });\n    },\n    submitSolution() {\n      const payload = {\n        problem_id: this.problemId,\n        solution: this.solutionText\n      };\n      axios.post('/solutions', payload).then(() => {\n        this.$message.success('题解提交成功');\n        // 清空表单\n        this.solutionText = '';\n      }).catch(error => {\n        console.error('提交失败:', error);\n        this.$message.error('题解提交失败，请重试');\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","solutionText","problemId","$route","params","username","userId","problemTitle","formLabelWidth","created","fetchProblemDetails","fetchUserDetails","methods","get","then","response","code","title","$message","error","msg","catch","console","id","submitSolution","payload","problem_id","solution","post","success"],"sources":["src/components/SubmitSolution.vue"],"sourcesContent":["<template>\r\n  <div class=\"submit-solution-container\">\r\n    <div class=\"form-section\">\r\n      <el-form @submit.native.prevent=\"submitSolution\">\r\n        <el-form-item label=\"题解内容\" :label-width=\"formLabelWidth\">\r\n          <el-input type=\"textarea\" v-model=\"solutionText\" placeholder=\"请输入您的题解\"></el-input>\r\n        </el-form-item>\r\n        <el-button type=\"primary\" @click=\"submitSolution\">提交题解</el-button>\r\n      </el-form>\r\n    </div>\r\n    <div class=\"info-section\">\r\n      <div class=\"user-info\">\r\n        <h3>用户信息</h3>\r\n        <p>用户名: {{ username }}</p>\r\n        <p>用户ID: {{ userId }}</p>\r\n      </div>\r\n      <div class=\"problem-info\">\r\n        <h3>题目信息</h3>\r\n        <p>题目ID: {{ problemId }}</p>\r\n        <p>题目名称: {{ problemTitle }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from '@/axios'; // 使用实例化的 Axios\r\n\r\nexport default {\r\n  name: 'SubmitSolution',\r\n  data() {\r\n    return {\r\n      solutionText: '',\r\n      problemId: this.$route.params.problemId,\r\n      username: '用户', // 需要从后端获取\r\n      userId: 1, // 需要从后端获取\r\n      problemTitle: '题目名称', // 需要从后端获取\r\n      formLabelWidth: '100px',\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchProblemDetails();\r\n    this.fetchUserDetails();\r\n  },\r\n  methods: {\r\n    fetchProblemDetails() {\r\n      axios.get(`/problems/${this.problemId}`)\r\n        .then(response => {\r\n          if (response.data.code === 200) {\r\n            this.problemTitle = response.data.data.title;\r\n          } else {\r\n            this.$message.error(response.data.msg || '无法获取题目信息');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('获取题目信息失败:', error);\r\n          this.$message.error('获取题目信息失败，请重试');\r\n        });\r\n    },\r\n    fetchUserDetails() {\r\n      axios.get('/profile/me')\r\n        .then(response => {\r\n          if (response.data.code === 200) {\r\n            this.username = response.data.data.username;\r\n            this.userId = response.data.data.id;\r\n          } else {\r\n            this.$message.error(response.data.msg || '无法获取用户信息');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('获取用户信息失败:', error);\r\n          this.$message.error('获取用户信息失败，请重试');\r\n        });\r\n    },\r\n    submitSolution() {\r\n      const payload = {\r\n        problem_id: this.problemId,\r\n        solution: this.solutionText\r\n      };\r\n\r\n      axios.post('/solutions', payload)\r\n        .then(() => {\r\n          this.$message.success('题解提交成功');\r\n          // 清空表单\r\n          this.solutionText = '';\r\n        })\r\n        .catch(error => {\r\n          console.error('提交失败:', error);\r\n          this.$message.error('题解提交失败，请重试');\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.submit-solution-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 20px;\r\n  background-color: rgba(255, 255, 255, 0.95);\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.form-section {\r\n  flex: 2 1 60%;\r\n  padding: 20px;\r\n}\r\n\r\n.info-section {\r\n  flex: 1 1 30%;\r\n  padding: 20px;\r\n  margin-left: 20px;\r\n}\r\n\r\n.user-info, .problem-info {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.user-info h3, .problem-info h3 {\r\n  margin-bottom: 10px;\r\n  color: #007bff;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .submit-solution-container {\r\n    flex-direction: column;\r\n  }\r\n  .info-section {\r\n    margin-left: 0;\r\n    margin-top: 20px;\r\n  }\r\n}\r\n</style>"],"mappings":"AA0BA,OAAAA,KAAA;;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,YAAA;MACAC,SAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAF,SAAA;MACAG,QAAA;MAAA;MACAC,MAAA;MAAA;MACAC,YAAA;MAAA;MACAC,cAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,mBAAA;IACA,KAAAC,gBAAA;EACA;EACAC,OAAA;IACAF,oBAAA;MACAZ,KAAA,CAAAe,GAAA,mBAAAX,SAAA,IACAY,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAf,IAAA,CAAAgB,IAAA;UACA,KAAAT,YAAA,GAAAQ,QAAA,CAAAf,IAAA,CAAAA,IAAA,CAAAiB,KAAA;QACA;UACA,KAAAC,QAAA,CAAAC,KAAA,CAAAJ,QAAA,CAAAf,IAAA,CAAAoB,GAAA;QACA;MACA,GACAC,KAAA,CAAAF,KAAA;QACAG,OAAA,CAAAH,KAAA,cAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACAR,iBAAA;MACAb,KAAA,CAAAe,GAAA,gBACAC,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAf,IAAA,CAAAgB,IAAA;UACA,KAAAX,QAAA,GAAAU,QAAA,CAAAf,IAAA,CAAAA,IAAA,CAAAK,QAAA;UACA,KAAAC,MAAA,GAAAS,QAAA,CAAAf,IAAA,CAAAA,IAAA,CAAAuB,EAAA;QACA;UACA,KAAAL,QAAA,CAAAC,KAAA,CAAAJ,QAAA,CAAAf,IAAA,CAAAoB,GAAA;QACA;MACA,GACAC,KAAA,CAAAF,KAAA;QACAG,OAAA,CAAAH,KAAA,cAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACAK,eAAA;MACA,MAAAC,OAAA;QACAC,UAAA,OAAAxB,SAAA;QACAyB,QAAA,OAAA1B;MACA;MAEAH,KAAA,CAAA8B,IAAA,eAAAH,OAAA,EACAX,IAAA;QACA,KAAAI,QAAA,CAAAW,OAAA;QACA;QACA,KAAA5B,YAAA;MACA,GACAoB,KAAA,CAAAF,KAAA;QACAG,OAAA,CAAAH,KAAA,UAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}