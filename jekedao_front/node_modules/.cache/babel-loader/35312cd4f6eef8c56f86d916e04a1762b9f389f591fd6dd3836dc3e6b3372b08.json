{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from '@/axios'; // 使用实例化的 Axios\n\nexport default {\n  name: 'ProblemSet',\n  data() {\n    return {\n      problems: [],\n      currentPage: 1,\n      pageSize: 10\n    };\n  },\n  computed: {\n    displayedProblems() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = this.currentPage * this.pageSize;\n      return this.problems.slice(start, end);\n    }\n  },\n  created() {\n    this.fetchProblems();\n  },\n  methods: {\n    getTagColor(difficulty) {\n      switch (difficulty) {\n        case 'Easy':\n          return '#67C23A';\n        // 绿色\n        case 'Medium':\n          return '#E6A23C';\n        // 橙色\n        case 'Hard':\n          return '#F56C6C';\n        // 红色\n        default:\n          return '#909399';\n        // 灰色\n      }\n    },\n    viewProblem(id) {\n      this.$router.push(`/problem/${id}`);\n    },\n    handleCurrentChange(page) {\n      this.currentPage = page;\n    },\n    fetchProblems() {\n      axios.get('/problems') // 使用 axios 实例\n      .then(response => {\n        if (response.data.code === 200) {\n          this.problems = response.data.data.map(problem => ({\n            id: problem.id,\n            title: problem.title,\n            difficulty: problem.difficulty,\n            upload_time: problem.upload_time.split('T')[0] // 格式化日期\n          }));\n        } else {\n          this.$message.error(response.data.msg || '获取题目失败');\n        }\n      }).catch(error => {\n        console.error('获取题目失败:', error);\n        this.$message.error('获取题目失败，请重试');\n      });\n    },\n    initDynamicBackground() {\n      const cvs = document.getElementById(\"cvs\");\n      const ctx = cvs.getContext(\"2d\");\n      const {\n        clientWidth: width,\n        clientHeight: height\n      } = document.documentElement;\n      cvs.width = width;\n      cvs.height = height;\n      ctx.fillStyle = \"#ffffff\"; // 小点的颜色\n\n      // 生成小点，400是小点的数量\n      const bgColors = Array.from(new Array(400)).map(() => ({\n        x: Math.random() * width,\n        y: Math.random() * height,\n        step: Math.random() * 0.1 + 0.5\n      }));\n\n      // 渲染函数\n      const render = () => {\n        ctx.clearRect(0, 0, width, height);\n        ctx.beginPath();\n        bgColors.forEach(v => {\n          v.y = v.y > height ? 0 : v.y + v.step;\n          ctx.rect(v.x, v.y, 3, 3);\n        });\n        ctx.fill();\n        requestAnimationFrame(render);\n      };\n      render();\n\n      // 禁止用户缩放浏览器\n      const keyCodeMap = {\n        61: true,\n        107: true,\n        // 数字键盘 +\n        109: true,\n        // 数字键盘 -\n        173: true,\n        // 火狐 - 号\n        187: true,\n        // +\n        189: true // -\n      };\n      // 覆盖ctrl||command + ‘+’/‘-’\n      document.onkeydown = function (event) {\n        const e = event || window.event;\n        const ctrlKey = e.ctrlKey || e.metaKey;\n        if (ctrlKey && keyCodeMap[e.keyCode]) {\n          e.preventDefault();\n        } else if (e.detail) {\n          // Firefox\n          event.returnValue = false;\n        }\n      };\n      // 覆盖鼠标滑动\n      document.body.addEventListener(\"wheel\", e => {\n        if (e.ctrlKey) {\n          e.preventDefault();\n          return false;\n        }\n      }, {\n        passive: false\n      });\n    }\n  },\n  mounted() {\n    this.initDynamicBackground();\n    window.addEventListener(\"resize\", () => {\n      const cvs = document.getElementById(\"cvs\");\n      const {\n        clientWidth: width,\n        clientHeight: height\n      } = document.documentElement;\n      cvs.width = width;\n      cvs.height = height;\n      // 重新初始化背景以适应新的尺寸\n      this.initDynamicBackground();\n    });\n  }\n};","map":{"version":3,"names":["axios","name","data","problems","currentPage","pageSize","computed","displayedProblems","start","end","slice","created","fetchProblems","methods","getTagColor","difficulty","viewProblem","id","$router","push","handleCurrentChange","page","get","then","response","code","map","problem","title","upload_time","split","$message","error","msg","catch","console","initDynamicBackground","cvs","document","getElementById","ctx","getContext","clientWidth","width","clientHeight","height","documentElement","fillStyle","bgColors","Array","from","x","Math","random","y","step","render","clearRect","beginPath","forEach","v","rect","fill","requestAnimationFrame","keyCodeMap","onkeydown","event","e","window","ctrlKey","metaKey","keyCode","preventDefault","detail","returnValue","body","addEventListener","passive","mounted"],"sources":["src/components/ProblemSet.vue"],"sourcesContent":["<template>\r\n  <div class=\"problem-set\">\r\n    <canvas id=\"cvs\"></canvas>\r\n    <div class=\"content\">\r\n      <h1>题库</h1>\r\n      <div v-if=\"problems.length === 0\" class=\"no-problems\">没有题目</div>\r\n      <el-row v-else>\r\n        <el-col :span=\"24\">\r\n          <el-table\r\n            :data=\"displayedProblems\"\r\n            border\r\n            style=\"width: 100%\">\r\n            <el-table-column prop=\"id\" label=\"题目ID\" width=\"100\">\r\n              <template #default=\"scope\">\r\n                <router-link :to=\"`/problem/${scope.row.id}`\">{{ scope.row.id }}</router-link>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"title\" label=\"题目名称\" width=\"200\">\r\n              <template #default=\"scope\">\r\n                <router-link :to=\"`/problem/${scope.row.id}`\">{{ scope.row.title }}</router-link>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"difficulty\" label=\"难度\" width=\"120\">\r\n              <template #default=\"scope\">\r\n                <el-tag :color=\"getTagColor(scope.row.difficulty)\">{{ scope.row.difficulty }}</el-tag>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"upload_time\" label=\"上传时间\" width=\"180\"></el-table-column>\r\n            <el-table-column label=\"操作\" width=\"150\">\r\n              <template #default=\"scope\">\r\n                <el-button @click=\"viewProblem(scope.row.id)\" type=\"primary\" size=\"medium\">查看</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n          <div class=\"pagination\">\r\n            <el-pagination\r\n              @current-change=\"handleCurrentChange\"\r\n              :current-page=\"currentPage\"\r\n              :page-size=\"pageSize\"\r\n              layout=\"prev, pager, next\"\r\n              :total=\"problems.length\">\r\n            </el-pagination>\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from '@/axios'; // 使用实例化的 Axios\r\n\r\nexport default {\r\n  name: 'ProblemSet',\r\n  data() {\r\n    return {\r\n      problems: [],\r\n      currentPage: 1,\r\n      pageSize: 10,\r\n    };\r\n  },\r\n  computed: {\r\n    displayedProblems() {\r\n      const start = (this.currentPage - 1) * this.pageSize;\r\n      const end = this.currentPage * this.pageSize;\r\n      return this.problems.slice(start, end);\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchProblems();\r\n  },\r\n  methods: {\r\n    getTagColor(difficulty) {\r\n      switch (difficulty) {\r\n        case 'Easy':\r\n          return '#67C23A'; // 绿色\r\n        case 'Medium':\r\n          return '#E6A23C'; // 橙色\r\n        case 'Hard':\r\n          return '#F56C6C'; // 红色\r\n        default:\r\n          return '#909399'; // 灰色\r\n      }\r\n    },\r\n    viewProblem(id) {\r\n      this.$router.push(`/problem/${id}`);\r\n    },\r\n    handleCurrentChange(page) {\r\n      this.currentPage = page;\r\n    },\r\n    fetchProblems() {\r\n      axios.get('/problems') // 使用 axios 实例\r\n        .then(response => {\r\n          if (response.data.code === 200) {\r\n            this.problems = response.data.data.map(problem => ({\r\n              id: problem.id,\r\n              title: problem.title,\r\n              difficulty: problem.difficulty,\r\n              upload_time: problem.upload_time.split('T')[0] // 格式化日期\r\n            }));\r\n          } else {\r\n            this.$message.error(response.data.msg || '获取题目失败');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('获取题目失败:', error);\r\n          this.$message.error('获取题目失败，请重试');\r\n        });\r\n    },\r\n    initDynamicBackground() {\r\n      const cvs = document.getElementById(\"cvs\");\r\n      const ctx = cvs.getContext(\"2d\");\r\n      const { clientWidth: width, clientHeight: height } = document.documentElement;\r\n      cvs.width = width;\r\n      cvs.height = height;\r\n      ctx.fillStyle = \"#ffffff\"; // 小点的颜色\r\n\r\n      // 生成小点，400是小点的数量\r\n      const bgColors = Array.from(new Array(400)).map(() => ({\r\n        x: Math.random() * width,\r\n        y: Math.random() * height,\r\n        step: Math.random() * 0.1 + 0.5,\r\n      }));\r\n\r\n      // 渲染函数\r\n      const render = () => {\r\n        ctx.clearRect(0, 0, width, height);\r\n        ctx.beginPath();\r\n        bgColors.forEach((v) => {\r\n          v.y = v.y > height ? 0 : v.y + v.step;\r\n          ctx.rect(v.x, v.y, 3, 3);\r\n        });\r\n        ctx.fill();\r\n        requestAnimationFrame(render);\r\n      };\r\n      render();\r\n\r\n      // 禁止用户缩放浏览器\r\n      const keyCodeMap = {\r\n        61: true,\r\n        107: true, // 数字键盘 +\r\n        109: true, // 数字键盘 -\r\n        173: true, // 火狐 - 号\r\n        187: true, // +\r\n        189: true, // -\r\n      };\r\n      // 覆盖ctrl||command + ‘+’/‘-’\r\n      document.onkeydown = function (event) {\r\n        const e = event || window.event;\r\n        const ctrlKey = e.ctrlKey || e.metaKey;\r\n        if (ctrlKey && keyCodeMap[e.keyCode]) {\r\n          e.preventDefault();\r\n        } else if (e.detail) {\r\n          // Firefox\r\n          event.returnValue = false;\r\n        }\r\n      };\r\n      // 覆盖鼠标滑动\r\n      document.body.addEventListener(\r\n        \"wheel\",\r\n        (e) => {\r\n          if (e.ctrlKey) {\r\n            e.preventDefault();\r\n            return false;\r\n          }\r\n        },\r\n        { passive: false }\r\n      );\r\n    },\r\n  },\r\n  mounted() {\r\n    this.initDynamicBackground();\r\n    window.addEventListener(\"resize\", () => {\r\n      const cvs = document.getElementById(\"cvs\");\r\n      const { clientWidth: width, clientHeight: height } = document.documentElement;\r\n      cvs.width = width;\r\n      cvs.height = height;\r\n      // 重新初始化背景以适应新的尺寸\r\n      this.initDynamicBackground();\r\n    });\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  font-family: \"KaiTi\", serif;\r\n}\r\n\r\nhtml,\r\nbody,\r\n#app {\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  overflow: hidden;\r\n}\r\n\r\ncanvas#cvs {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: -6;\r\n  background-color: #000;\r\n}\r\n\r\n.problem-set {\r\n  position: relative;\r\n  padding: 20px;\r\n  height: 100vh;\r\n  overflow: auto;\r\n}\r\n\r\n.content {\r\n  background: rgba(255, 255, 255, 0.95);\r\n  padding: 30px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);\r\n  color: #333;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  color: #333;\r\n  margin-bottom: 30px;\r\n  font-size: 32px;\r\n}\r\n\r\n.no-problems {\r\n  text-align: center;\r\n  font-size: 18px;\r\n  color: #999;\r\n  margin-top: 50px;\r\n}\r\n\r\n.el-table {\r\n  background: rgba(255, 255, 255, 0.9);\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.el-table th {\r\n  background-color: #f5f5f5;\r\n  color: #333;\r\n}\r\n\r\n.el-tag {\r\n  border-radius: 4px;\r\n  padding: 5px 10px;\r\n  color: #fff;\r\n  font-weight: bold;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.el-button {\r\n  min-width: 80px;\r\n  height: 40px;\r\n  font-size: 16px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.el-button.primary {\r\n  background-color: #409eff;\r\n  color: #fff;\r\n}\r\n\r\n.el-button.primary:hover {\r\n  background-color: #66b1ff;\r\n}\r\n\r\n.el-button.default {\r\n  background-color: #f5f5f5;\r\n  color: #333;\r\n}\r\n\r\n.el-button.default:hover {\r\n  background-color: #e6e6e6;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .content {\r\n    padding: 20px;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 24px;\r\n  }\r\n\r\n  .no-problems {\r\n    font-size: 16px;\r\n  }\r\n\r\n  .el-tag {\r\n    font-size: 14px;\r\n    padding: 4px 8px;\r\n  }\r\n\r\n  .el-button {\r\n    min-width: 70px;\r\n    height: 35px;\r\n    font-size: 14px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}