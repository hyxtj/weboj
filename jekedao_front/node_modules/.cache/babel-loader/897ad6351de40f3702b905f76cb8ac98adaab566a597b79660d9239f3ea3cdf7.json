{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.registerHelper(\"fold\", \"markdown\", function (cm, start) {\n    var maxDepth = 100;\n    function isHeader(lineNo) {\n      var tokentype = cm.getTokenTypeAt(CodeMirror.Pos(lineNo, 0));\n      return tokentype && /\\bheader\\b/.test(tokentype);\n    }\n    function headerLevel(lineNo, line, nextLine) {\n      var match = line && line.match(/^#+/);\n      if (match && isHeader(lineNo)) return match[0].length;\n      match = nextLine && nextLine.match(/^[=\\-]+\\s*$/);\n      if (match && isHeader(lineNo + 1)) return nextLine[0] == \"=\" ? 1 : 2;\n      return maxDepth;\n    }\n    var firstLine = cm.getLine(start.line),\n      nextLine = cm.getLine(start.line + 1);\n    var level = headerLevel(start.line, firstLine, nextLine);\n    if (level === maxDepth) return undefined;\n    var lastLineNo = cm.lastLine();\n    var end = start.line,\n      nextNextLine = cm.getLine(end + 2);\n    while (end < lastLineNo) {\n      if (headerLevel(end + 1, nextLine, nextNextLine) <= level) break;\n      ++end;\n      nextLine = nextNextLine;\n      nextNextLine = cm.getLine(end + 2);\n    }\n    return {\n      from: CodeMirror.Pos(start.line, firstLine.length),\n      to: CodeMirror.Pos(end, cm.getLine(end).length)\n    };\n  });\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","registerHelper","cm","start","maxDepth","isHeader","lineNo","tokentype","getTokenTypeAt","Pos","test","headerLevel","line","nextLine","match","length","firstLine","getLine","level","undefined","lastLineNo","lastLine","end","nextNextLine","from","to"],"sources":["D:/web2/jekedao_front/node_modules/codemirror/addon/fold/markdown-fold.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.registerHelper(\"fold\", \"markdown\", function(cm, start) {\n  var maxDepth = 100;\n\n  function isHeader(lineNo) {\n    var tokentype = cm.getTokenTypeAt(CodeMirror.Pos(lineNo, 0));\n    return tokentype && /\\bheader\\b/.test(tokentype);\n  }\n\n  function headerLevel(lineNo, line, nextLine) {\n    var match = line && line.match(/^#+/);\n    if (match && isHeader(lineNo)) return match[0].length;\n    match = nextLine && nextLine.match(/^[=\\-]+\\s*$/);\n    if (match && isHeader(lineNo + 1)) return nextLine[0] == \"=\" ? 1 : 2;\n    return maxDepth;\n  }\n\n  var firstLine = cm.getLine(start.line), nextLine = cm.getLine(start.line + 1);\n  var level = headerLevel(start.line, firstLine, nextLine);\n  if (level === maxDepth) return undefined;\n\n  var lastLineNo = cm.lastLine();\n  var end = start.line, nextNextLine = cm.getLine(end + 2);\n  while (end < lastLineNo) {\n    if (headerLevel(end + 1, nextLine, nextNextLine) <= level) break;\n    ++end;\n    nextLine = nextNextLine;\n    nextNextLine = cm.getLine(end + 2);\n  }\n\n  return {\n    from: CodeMirror.Pos(start.line, firstLine.length),\n    to: CodeMirror.Pos(end, cm.getLine(end).length)\n  };\n});\n\n});\n"],"mappings":"AAAA;AACA;;AAEA,CAAC,UAASA,GAAG,EAAE;EACb,IAAI,OAAOC,OAAO,IAAI,QAAQ,IAAI,OAAOC,MAAM,IAAI,QAAQ;IAAE;IAC3DF,GAAG,CAACG,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,KAClC,IAAI,OAAOC,MAAM,IAAI,UAAU,IAAIA,MAAM,CAACC,GAAG;IAAE;IAClDD,MAAM,CAAC,CAAC,sBAAsB,CAAC,EAAEJ,GAAG,CAAC,CAAC;IACnC;IACHA,GAAG,CAACM,UAAU,CAAC;AACnB,CAAC,EAAE,UAASA,UAAU,EAAE;EACxB,YAAY;;EAEZA,UAAU,CAACC,cAAc,CAAC,MAAM,EAAE,UAAU,EAAE,UAASC,EAAE,EAAEC,KAAK,EAAE;IAChE,IAAIC,QAAQ,GAAG,GAAG;IAElB,SAASC,QAAQA,CAACC,MAAM,EAAE;MACxB,IAAIC,SAAS,GAAGL,EAAE,CAACM,cAAc,CAACR,UAAU,CAACS,GAAG,CAACH,MAAM,EAAE,CAAC,CAAC,CAAC;MAC5D,OAAOC,SAAS,IAAI,YAAY,CAACG,IAAI,CAACH,SAAS,CAAC;IAClD;IAEA,SAASI,WAAWA,CAACL,MAAM,EAAEM,IAAI,EAAEC,QAAQ,EAAE;MAC3C,IAAIC,KAAK,GAAGF,IAAI,IAAIA,IAAI,CAACE,KAAK,CAAC,KAAK,CAAC;MACrC,IAAIA,KAAK,IAAIT,QAAQ,CAACC,MAAM,CAAC,EAAE,OAAOQ,KAAK,CAAC,CAAC,CAAC,CAACC,MAAM;MACrDD,KAAK,GAAGD,QAAQ,IAAIA,QAAQ,CAACC,KAAK,CAAC,aAAa,CAAC;MACjD,IAAIA,KAAK,IAAIT,QAAQ,CAACC,MAAM,GAAG,CAAC,CAAC,EAAE,OAAOO,QAAQ,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC;MACpE,OAAOT,QAAQ;IACjB;IAEA,IAAIY,SAAS,GAAGd,EAAE,CAACe,OAAO,CAACd,KAAK,CAACS,IAAI,CAAC;MAAEC,QAAQ,GAAGX,EAAE,CAACe,OAAO,CAACd,KAAK,CAACS,IAAI,GAAG,CAAC,CAAC;IAC7E,IAAIM,KAAK,GAAGP,WAAW,CAACR,KAAK,CAACS,IAAI,EAAEI,SAAS,EAAEH,QAAQ,CAAC;IACxD,IAAIK,KAAK,KAAKd,QAAQ,EAAE,OAAOe,SAAS;IAExC,IAAIC,UAAU,GAAGlB,EAAE,CAACmB,QAAQ,CAAC,CAAC;IAC9B,IAAIC,GAAG,GAAGnB,KAAK,CAACS,IAAI;MAAEW,YAAY,GAAGrB,EAAE,CAACe,OAAO,CAACK,GAAG,GAAG,CAAC,CAAC;IACxD,OAAOA,GAAG,GAAGF,UAAU,EAAE;MACvB,IAAIT,WAAW,CAACW,GAAG,GAAG,CAAC,EAAET,QAAQ,EAAEU,YAAY,CAAC,IAAIL,KAAK,EAAE;MAC3D,EAAEI,GAAG;MACLT,QAAQ,GAAGU,YAAY;MACvBA,YAAY,GAAGrB,EAAE,CAACe,OAAO,CAACK,GAAG,GAAG,CAAC,CAAC;IACpC;IAEA,OAAO;MACLE,IAAI,EAAExB,UAAU,CAACS,GAAG,CAACN,KAAK,CAACS,IAAI,EAAEI,SAAS,CAACD,MAAM,CAAC;MAClDU,EAAE,EAAEzB,UAAU,CAACS,GAAG,CAACa,GAAG,EAAEpB,EAAE,CAACe,OAAO,CAACK,GAAG,CAAC,CAACP,MAAM;IAChD,CAAC;EACH,CAAC,CAAC;AAEF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}