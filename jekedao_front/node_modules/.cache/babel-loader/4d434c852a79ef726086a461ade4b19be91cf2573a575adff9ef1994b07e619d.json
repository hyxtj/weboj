{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from '@/axios'; // 使用配置好的 Axios 实例\n\nexport default {\n  name: 'UploadProblem',\n  data() {\n    return {\n      form: {\n        id: null,\n        // 添加 ID 字段\n        title: '',\n        description: '',\n        difficulty: 'Medium',\n        testCaseInput: '',\n        // 测试用例输入\n        testCaseOutput: '' // 测试用例输出\n      },\n      loading: false,\n      rules: {\n        id: [{\n          required: true,\n          message: '请输入题目ID',\n          trigger: 'blur'\n        }, {\n          type: 'number',\n          message: '题目ID必须是数字',\n          trigger: 'blur'\n        }, {\n          validator: (rule, value, callback) => {\n            if (value === null || value === undefined) {\n              callback(new Error('题目ID为必填项'));\n            } else if (typeof value !== 'number') {\n              callback(new Error('题目ID必须是数字'));\n            } else if (value <= 0) {\n              callback(new Error('题目ID必须大于0'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }],\n        title: [{\n          required: true,\n          message: '请输入题目标题',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          max: 100,\n          message: '标题长度在5到100个字符',\n          trigger: 'blur'\n        }],\n        description: [{\n          required: true,\n          message: '请输入题目描述',\n          trigger: 'blur'\n        }, {\n          min: 10,\n          message: '描述长度至少10个字符',\n          trigger: 'blur'\n        }],\n        difficulty: [{\n          required: true,\n          message: '请选择难度',\n          trigger: 'change'\n        }],\n        testCaseInput: [{\n          required: true,\n          message: '请输入测试用例输入',\n          trigger: 'blur'\n        }],\n        testCaseOutput: [{\n          required: true,\n          message: '请输入测试用例输出',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          console.log('Submitting form with token:', localStorage.getItem('access_token')); // 调试日志\n          axios.post('/problems', {\n            id: this.form.id,\n            title: this.form.title,\n            description: this.form.description,\n            difficulty: this.form.difficulty,\n            testCaseInput: this.form.testCaseInput,\n            testCaseOutput: this.form.testCaseOutput\n          }).then(response => {\n            this.loading = false;\n            if (response.data.code === 201) {\n              // 修改为 201\n              this.$message.success('题目上传成功！');\n              this.resetForm();\n              this.$router.push('/problemset'); // 确保跳转路径正确\n            } else {\n              this.$message.error(response.data.msg || '题目上传失败');\n            }\n          }).catch(error => {\n            this.loading = false;\n            console.error('题目上传失败:', error);\n            if (error.response) {\n              console.error('响应数据:', error.response.data);\n              console.error('响应状态:', error.response.status);\n              console.error('响应头:', error.response.headers);\n              this.$message.error(error.response.data.msg || '题目上传失败');\n            } else if (error.request) {\n              console.error('请求数据:', error.request);\n              this.$message.error('未收到服务器响应，请检查网络连接');\n            } else {\n              console.error('错误信息:', error.message);\n              this.$message.error('发生错误，请重试');\n            }\n          });\n        } else {\n          this.$message.error('请完成表单字段的填写');\n          return false;\n        }\n      });\n    },\n    resetForm() {\n      this.$refs.form.resetFields();\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","form","id","title","description","difficulty","testCaseInput","testCaseOutput","loading","rules","required","message","trigger","type","validator","rule","value","callback","undefined","Error","min","max","methods","submitForm","$refs","validate","valid","console","log","localStorage","getItem","post","then","response","code","$message","success","resetForm","$router","push","error","msg","catch","status","headers","request","resetFields"],"sources":["src/components/UploadProblem.vue"],"sourcesContent":["<template>\r\n  <div class=\"upload-problem\">\r\n    <h1>上传题目</h1>\r\n    <el-form\r\n      ref=\"form\"\r\n      :model=\"form\"\r\n      :rules=\"rules\"\r\n      label-width=\"80px\"\r\n      @submit.native.prevent=\"submitForm\"\r\n    >\r\n      <el-form-item label=\"题目ID\" prop=\"id\">\r\n        <el-input\r\n          v-model.number=\"form.id\"\r\n          placeholder=\"请输入题目ID\"\r\n          type=\"number\"\r\n        ></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"题目标题\" prop=\"title\">\r\n        <el-input v-model=\"form.title\" placeholder=\"请输入题目标题\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"题目描述\" prop=\"description\">\r\n        <el-input\r\n          type=\"textarea\"\r\n          v-model=\"form.description\"\r\n          placeholder=\"请输入题目描述\"\r\n          :rows=\"10\"\r\n        ></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"难度\" prop=\"difficulty\">\r\n        <el-select v-model=\"form.difficulty\" placeholder=\"请选择难度\">\r\n          <el-option label=\"Easy\" value=\"Easy\"></el-option>\r\n          <el-option label=\"Medium\" value=\"Medium\"></el-option>\r\n          <el-option label=\"Hard\" value=\"Hard\"></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n\r\n      <!-- 测试用例输入 -->\r\n      <el-form-item label=\"测试用例输入\" prop=\"testCaseInput\">\r\n        <el-input\r\n          type=\"textarea\"\r\n          v-model=\"form.testCaseInput\"\r\n          placeholder=\"请输入测试用例输入\"\r\n          :rows=\"5\"\r\n        ></el-input>\r\n      </el-form-item>\r\n\r\n      <!-- 测试用例输出 -->\r\n      <el-form-item label=\"测试用例输出\" prop=\"testCaseOutput\">\r\n        <el-input\r\n          type=\"textarea\"\r\n          v-model=\"form.testCaseOutput\"\r\n          placeholder=\"请输入测试用例输出\"\r\n          :rows=\"5\"\r\n        ></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"submitForm\" :loading=\"loading\">提交</el-button>\r\n        <el-button @click=\"resetForm\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from '@/axios'; // 使用配置好的 Axios 实例\r\n\r\nexport default {\r\n  name: 'UploadProblem',\r\n  data() {\r\n    return {\r\n      form: {\r\n        id: null, // 添加 ID 字段\r\n        title: '',\r\n        description: '',\r\n        difficulty: 'Medium',\r\n        testCaseInput: '', // 测试用例输入\r\n        testCaseOutput: '' // 测试用例输出\r\n      },\r\n      loading: false,\r\n      rules: {\r\n        id: [\r\n          { required: true, message: '请输入题目ID', trigger: 'blur' },\r\n          { type: 'number', message: '题目ID必须是数字', trigger: 'blur' },\r\n          {\r\n            validator: (rule, value, callback) => {\r\n              if (value === null || value === undefined) {\r\n                callback(new Error('题目ID为必填项'));\r\n              } else if (typeof value !== 'number') {\r\n                callback(new Error('题目ID必须是数字'));\r\n              } else if (value <= 0) {\r\n                callback(new Error('题目ID必须大于0'));\r\n              } else {\r\n                callback();\r\n              }\r\n            },\r\n            trigger: 'blur',\r\n          },\r\n        ],\r\n        title: [\r\n          { required: true, message: '请输入题目标题', trigger: 'blur' },\r\n          { min: 5, max: 100, message: '标题长度在5到100个字符', trigger: 'blur' },\r\n        ],\r\n        description: [\r\n          { required: true, message: '请输入题目描述', trigger: 'blur' },\r\n          { min: 10, message: '描述长度至少10个字符', trigger: 'blur' },\r\n        ],\r\n        difficulty: [\r\n          { required: true, message: '请选择难度', trigger: 'change' },\r\n        ],\r\n        testCaseInput: [\r\n          { required: true, message: '请输入测试用例输入', trigger: 'blur' }\r\n        ],\r\n        testCaseOutput: [\r\n          { required: true, message: '请输入测试用例输出', trigger: 'blur' }\r\n        ]\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    submitForm() {\r\n      this.$refs.form.validate((valid) => {\r\n        if (valid) {\r\n          this.loading = true;\r\n          console.log('Submitting form with token:', localStorage.getItem('access_token')); // 调试日志\r\n          axios.post('/problems', {\r\n            id: this.form.id,\r\n            title: this.form.title,\r\n            description: this.form.description,\r\n            difficulty: this.form.difficulty,\r\n            testCaseInput: this.form.testCaseInput,\r\n            testCaseOutput: this.form.testCaseOutput\r\n          })\r\n          .then((response) => {\r\n            this.loading = false;\r\n            if (response.data.code === 201) { // 修改为 201\r\n              this.$message.success('题目上传成功！');\r\n              this.resetForm();\r\n              this.$router.push('/problemset'); // 确保跳转路径正确\r\n            } else {\r\n              this.$message.error(response.data.msg || '题目上传失败');\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.loading = false;\r\n            console.error('题目上传失败:', error);\r\n            if (error.response) {\r\n              console.error('响应数据:', error.response.data);\r\n              console.error('响应状态:', error.response.status);\r\n              console.error('响应头:', error.response.headers);\r\n              this.$message.error(error.response.data.msg || '题目上传失败');\r\n            } else if (error.request) {\r\n              console.error('请求数据:', error.request);\r\n              this.$message.error('未收到服务器响应，请检查网络连接');\r\n            } else {\r\n              console.error('错误信息:', error.message);\r\n              this.$message.error('发生错误，请重试');\r\n            }\r\n          });\r\n        } else {\r\n          this.$message.error('请完成表单字段的填写');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    resetForm() {\r\n      this.$refs.form.resetFields();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.upload-problem {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}