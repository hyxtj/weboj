{"ast":null,"code":"import { codemirror } from 'vue-codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/python/python.js';\nimport 'codemirror/mode/javascript/javascript.js';\nimport 'codemirror/mode/clike/clike.js';\nimport 'codemirror/mode/go/go.js';\nimport 'codemirror/mode/rust/rust.js';\nimport 'codemirror/mode/ruby/ruby.js';\nimport 'codemirror/mode/php/php.js';\nimport 'codemirror/mode/swift/swift.js';\nimport 'codemirror/mode/clojure/clojure.js';\n\n// 引入 CodeMirror 插件\nimport 'codemirror/addon/edit/matchbrackets.js';\nimport 'codemirror/addon/edit/closebrackets.js';\nimport 'codemirror/addon/fold/foldcode.js';\nimport 'codemirror/addon/fold/foldgutter.js';\nimport 'codemirror/addon/fold/brace-fold.js';\nimport 'codemirror/addon/fold/indent-fold.js';\nimport 'codemirror/addon/fold/comment-fold.js';\nimport 'codemirror/addon/hint/show-hint.js';\nimport 'codemirror/addon/hint/show-hint.css';\nimport 'codemirror/addon/hint/javascript-hint.js';\nimport 'codemirror/addon/hint/xml-hint.js';\nimport 'codemirror/addon/hint/html-hint.js';\nimport 'codemirror/addon/hint/anyword-hint.js';\nimport 'codemirror/addon/display/placeholder.js';\nimport 'codemirror/addon/fold/foldgutter.css';\nimport 'codemirror/addon/fold/foldcode';\nimport 'codemirror/addon/fold/foldgutter';\nimport 'codemirror/addon/fold/brace-fold';\nimport 'codemirror/addon/fold/comment-fold';\nimport 'codemirror/addon/fold/markdown-fold';\nimport 'codemirror/addon/fold/xml-fold';\nimport 'codemirror/addon/fold/indent-fold';\nimport 'codemirror/addon/hint/javascript-hint';\nimport 'codemirror/addon/hint/xml-hint';\nimport 'codemirror/addon/hint/sql-hint';\nimport 'codemirror/addon/hint/anyword-hint';\nimport 'codemirror/theme/monokai.css';\nimport 'codemirror/theme/eclipse.css';\nimport 'codemirror/theme/neat.css';\nexport default {\n  name: 'SubmitCode',\n  components: {\n    codemirror\n  },\n  data() {\n    return {\n      selectedLanguage: '',\n      code: '',\n      problemId: this.$route.params.problemId,\n      username: '用户',\n      // 需要从后端获取\n      userId: 1,\n      // 需要从后端获取\n      problemTitle: '题目名称',\n      // 需要从后端获取\n      formLabelWidth: '100px',\n      submissionResult: null,\n      submissionId: null,\n      pollingInterval: null,\n      // cmOptions: {\n      //\n      //   tabSize: 4,\n      //   mode: 'text/x-python',\n      //   theme: 'default',\n      //   lineNumbers: true,\n      //   line: true,\n      //   matchBrackets: true, // 括号匹配\n      //   autoCloseBrackets: true, // 自动关闭括号\n      //   foldGutter: true, // 代码折叠\n      //\n      //   gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\n      //   extraKeys: { \"Ctrl-Space\": \"autocomplete\" }, // 自动补全\n      //   placeholder: '请输入您的代码...', // 占位符\n      //   // more CodeMirror options...\n      //\n      // }\n      cmOptions: {\n        theme: 'monokai',\n        mode: 'c++',\n        readOnly: false,\n        tabSize: 4,\n        // 制表符\n        indentUnit: 4,\n        // 缩进位数\n        lineNumbers: true,\n        ineWiseCopyCut: true,\n        viewportMargin: 1000,\n        autofocus: true,\n        autocorrect: true,\n        spellcheck: true,\n        // specialChars: /[\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u061c\\u200b-\\u200f\\u2028\\u2029\\ufeff\\ufff9-\\ufffc]/g,\n        specialCharPlaceholder: function (ch) {\n          let token = document.createElement(\"span\");\n          token.className = \"cm-invalidchar\";\n          token.title = \"\\\\u\" + ch.charCodeAt(0).toString(16);\n          token.setAttribute(\"aria-label\", token.title);\n          return token;\n        },\n        extraKeys: {\n          Tab: cm => {\n            if (cm.somethingSelected()) {\n              cm.indentSelection('add');\n            } else {\n              cm.replaceSelection(Array(cm.getOption(\"indentUnit\") + 1).join(\" \"), \"end\", \"+input\"); // 光标处插入 indentUnit 个空格\n            }\n          }\n        },\n        lint: false,\n        gutters: [\"CodeMirror-lint-markers\", \"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\n        lineWrapping: false,\n        foldGutter: true,\n        // 启用行槽中的代码折叠\n        autoCloseBrackets: true,\n        // 自动闭合符号\n        autoCloseTags: true,\n        matchTags: {\n          bothTags: true\n        },\n        matchBrackets: true,\n        // 在光标点击紧挨{、]括号左、右侧时，自动突出显示匹配的括号 }、]\n        styleSelectedText: true,\n        styleActiveLine: true,\n        autoRefresh: true,\n        highlightSelectionMatches: {\n          minChars: 2,\n          trim: true,\n          style: \"matchhighlight\",\n          showToken: false\n        },\n        hintOptions: {\n          completeSingle: false\n        }\n      }\n    };\n  },\n  watch: {\n    selectedLanguage(newVal) {\n      switch (newVal) {\n        case 'python':\n          this.cmOptions.mode = 'text/x-python';\n          break;\n        case 'javascript':\n          this.cmOptions.mode = 'text/javascript';\n          break;\n        case 'cpp':\n          this.cmOptions.mode = 'text/x-c++src';\n          break;\n        case 'c':\n          this.cmOptions.mode = 'text/x-csrc';\n          break;\n        case 'java':\n          this.cmOptions.mode = 'text/x-java';\n          break;\n        case 'go':\n          this.cmOptions.mode = 'text/x-go';\n          break;\n        case 'rust':\n          this.cmOptions.mode = 'text/x-rustsrc';\n          break;\n        case 'ruby':\n          this.cmOptions.mode = 'text/x-ruby';\n          break;\n        case 'php':\n          this.cmOptions.mode = 'text/x-php';\n          break;\n        case 'swift':\n          this.cmOptions.mode = 'text/x-swift';\n          break;\n        case 'csharp':\n          this.cmOptions.mode = 'text/x-csharp';\n          break;\n        default:\n          this.cmOptions.mode = 'text/x-python';\n      }\n    }\n  },\n  created() {\n    this.fetchProblemDetails();\n    this.fetchUserDetails();\n  },\n  methods: {\n    fetchProblemDetails() {\n      this.$axios.get(`/problems/${this.problemId}`).then(response => {\n        if (response.data.code === 200) {\n          this.problemTitle = response.data.data.title;\n        } else {\n          this.$message.error(response.data.msg || '无法获取题目信息');\n        }\n      }).catch(error => {\n        console.error('获取题目信息失败:', error);\n        this.$message.error('获取题目信息失败，请重试');\n      });\n    },\n    fetchUserDetails() {\n      this.$axios.get('/profile/me').then(response => {\n        if (response.data.code === 200) {\n          this.username = response.data.data.username;\n          this.userId = response.data.data.id;\n        } else {\n          this.$message.error(response.data.msg || '无法获取用户信息');\n        }\n      }).catch(error => {\n        console.error('获取用户信息失败:', error);\n        this.$message.error('获取用户信息失败，请重试');\n      });\n    },\n    submitCode() {\n      const payload = {\n        problem_id: parseInt(this.problemId, 10),\n        // 确保 problemId 是正整数\n        language: this.selectedLanguage,\n        code: this.code\n      };\n      console.log('Sending payload:', payload); // 调试步骤\n\n      this.$axios.post('/submit', payload).then(response => {\n        if (response.data.code === 201) {\n          this.submissionId = response.data.submission_id;\n          this.startPolling();\n          this.$message.success('代码提交成功');\n        } else {\n          this.$message.error(response.data.msg || '代码提交失败');\n        }\n      }).catch(error => {\n        console.error('提交失败:', error);\n        this.$message.error('代码提交失败，请重试');\n      });\n    },\n    startPolling() {\n      this.pollingInterval = setInterval(() => {\n        this.$axios.get(`/submission/${this.submissionId}`).then(response => {\n          if (response.data.code === 200) {\n            this.submissionResult = response.data.data;\n            if (this.submissionResult.status !== 'Pending') {\n              clearInterval(this.pollingInterval);\n              this.$message.success('评测完成');\n            }\n          } else {\n            this.$message.error(response.data.msg || '获取评测结果失败');\n            clearInterval(this.pollingInterval);\n          }\n        }).catch(error => {\n          console.error('获取评测结果失败:', error);\n          this.$message.error('获取评测结果失败，请重试');\n          clearInterval(this.pollingInterval);\n        });\n      }, 2000); // 每2秒轮询一次\n    },\n    onCmReady(cm) {\n      // 这里的 cm 对象就是 codemirror 对象，等于 this.$refs.myCm.codemirror\n      cm.on(\"inputRead\", (cm, obj) => {\n        if (obj.text && obj.text.length > 0) {\n          let c = obj.text[0].charAt(obj.text[0].length - 1);\n          if (c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z') {\n            cm.showHint({\n              completeSingle: false\n            });\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["codemirror","name","components","data","selectedLanguage","code","problemId","$route","params","username","userId","problemTitle","formLabelWidth","submissionResult","submissionId","pollingInterval","cmOptions","theme","mode","readOnly","tabSize","indentUnit","lineNumbers","ineWiseCopyCut","viewportMargin","autofocus","autocorrect","spellcheck","specialCharPlaceholder","ch","token","document","createElement","className","title","charCodeAt","toString","setAttribute","extraKeys","Tab","cm","somethingSelected","indentSelection","replaceSelection","Array","getOption","join","lint","gutters","lineWrapping","foldGutter","autoCloseBrackets","autoCloseTags","matchTags","bothTags","matchBrackets","styleSelectedText","styleActiveLine","autoRefresh","highlightSelectionMatches","minChars","trim","style","showToken","hintOptions","completeSingle","watch","newVal","created","fetchProblemDetails","fetchUserDetails","methods","$axios","get","then","response","$message","error","msg","catch","console","id","submitCode","payload","problem_id","parseInt","language","log","post","submission_id","startPolling","success","setInterval","status","clearInterval","onCmReady","on","obj","text","length","c","charAt","showHint"],"sources":["src/components/SubmitCode.vue"],"sourcesContent":["<!--<template>-->\r\n<!--  <div class=\"submit-code-container\">-->\r\n<!--    <div class=\"form-section\">-->\r\n<!--      <el-form @submit.native.prevent=\"submitCode\">-->\r\n<!--        <el-form-item label=\"编程语言\" :label-width=\"formLabelWidth\">-->\r\n<!--          <el-select v-model=\"selectedLanguage\" placeholder=\"请选择编程语言\">-->\r\n<!--            <el-option label=\"Python\" value=\"python\"></el-option>-->\r\n<!--            <el-option label=\"JavaScript\" value=\"javascript\"></el-option>-->\r\n<!--            <el-option label=\"C++\" value=\"cpp\"></el-option>-->\r\n<!--            <el-option label=\"C\" value=\"c\"></el-option>-->\r\n<!--            <el-option label=\"Java\" value=\"java\"></el-option>-->\r\n<!--            <el-option label=\"Go\" value=\"go\"></el-option>-->\r\n<!--            <el-option label=\"Rust\" value=\"rust\"></el-option>-->\r\n<!--            <el-option label=\"Ruby\" value=\"ruby\"></el-option>-->\r\n<!--            <el-option label=\"PHP\" value=\"php\"></el-option>-->\r\n<!--            <el-option label=\"Swift\" value=\"swift\"></el-option>-->\r\n<!--            <el-option label=\"C#\" value=\"csharp\"></el-option>-->\r\n<!--          </el-select>-->\r\n<!--        </el-form-item>-->\r\n<!--        <el-form-item label=\"代码\" :label-width=\"formLabelWidth\">-->\r\n<!--          <codemirror v-model=\"code\" :options=\"cmOptions\"></codemirror>-->\r\n<!--        </el-form-item>-->\r\n<!--        <el-button type=\"primary\" @click=\"submitCode\">提交代码</el-button>-->\r\n<!--      </el-form>-->\r\n<!--    </div>-->\r\n<!--    <div class=\"info-section\">-->\r\n<!--      <div class=\"user-info\">-->\r\n<!--        <h3>用户信息</h3>-->\r\n<!--        <p>用户名: {{ username }}</p>-->\r\n<!--        <p>用户ID: {{ userId }}</p>-->\r\n<!--      </div>-->\r\n<!--      <div class=\"problem-info\">-->\r\n<!--        <h3>题目信息</h3>-->\r\n<!--        <p>题目ID: {{ problemId }}</p>-->\r\n<!--        <p>题目名称: {{ problemTitle }}</p>-->\r\n<!--      </div>-->\r\n<!--      <div class=\"submission-result\" v-if=\"submissionResult\">-->\r\n<!--        <h3>评测结果</h3>-->\r\n<!--        <p>状态: {{ submissionResult.status }}</p>-->\r\n<!--        <p>用时: {{ submissionResult.time }} ms</p>-->\r\n<!--        <p>内存: {{ submissionResult.memory }} KB</p>-->\r\n<!--      </div>-->\r\n<!--    </div>-->\r\n<!--  </div>-->\r\n<!--</template>-->\r\n\r\n<!--<script>-->\r\n<!--import { codemirror } from 'vue-codemirror';-->\r\n<!--import 'codemirror/lib/codemirror.css';-->\r\n<!--import 'codemirror/mode/python/python.js';-->\r\n<!--import 'codemirror/mode/javascript/javascript.js';-->\r\n<!--import 'codemirror/mode/clike/clike.js';-->\r\n<!--import 'codemirror/mode/go/go.js';-->\r\n<!--import 'codemirror/mode/rust/rust.js';-->\r\n<!--import 'codemirror/mode/ruby/ruby.js';-->\r\n<!--import 'codemirror/mode/php/php.js';-->\r\n<!--import 'codemirror/mode/swift/swift.js';-->\r\n<!--import 'codemirror/mode/clojure/clojure.js';-->\r\n\r\n<!--export default {-->\r\n<!--  name: 'SubmitCode',-->\r\n<!--  components: {-->\r\n<!--    codemirror-->\r\n<!--  },-->\r\n<!--  data() {-->\r\n<!--    return {-->\r\n<!--      selectedLanguage: '',-->\r\n<!--      code: '',-->\r\n<!--      problemId: this.$route.params.problemId,-->\r\n<!--      username: '用户', // 需要从后端获取-->\r\n<!--      userId: 1, // 需要从后端获取-->\r\n<!--      problemTitle: '题目名称', // 需要从后端获取-->\r\n<!--      formLabelWidth: '100px',-->\r\n<!--      submissionResult: null,-->\r\n<!--      submissionId: null,-->\r\n<!--      pollingInterval: null,-->\r\n<!--      cmOptions: {-->\r\n<!--        tabSize: 4,-->\r\n<!--        mode: 'text/x-python',-->\r\n<!--        theme: 'default',-->\r\n<!--        lineNumbers: true,-->\r\n<!--        line: true,-->\r\n<!--        // more CodeMirror options...-->\r\n<!--      }-->\r\n<!--    };-->\r\n<!--  },-->\r\n<!--  watch: {-->\r\n<!--    selectedLanguage(newVal) {-->\r\n<!--      switch (newVal) {-->\r\n<!--        case 'python':-->\r\n<!--          this.cmOptions.mode = 'text/x-python';-->\r\n<!--          break;-->\r\n<!--        case 'javascript':-->\r\n<!--          this.cmOptions.mode = 'text/javascript';-->\r\n<!--          break;-->\r\n<!--        case 'cpp':-->\r\n<!--          this.cmOptions.mode = 'text/x-c++src';-->\r\n<!--          break;-->\r\n<!--        case 'c':-->\r\n<!--          this.cmOptions.mode = 'text/x-csrc';-->\r\n<!--          break;-->\r\n<!--        case 'java':-->\r\n<!--          this.cmOptions.mode = 'text/x-java';-->\r\n<!--          break;-->\r\n<!--        case 'go':-->\r\n<!--          this.cmOptions.mode = 'text/x-go';-->\r\n<!--          break;-->\r\n<!--        case 'rust':-->\r\n<!--          this.cmOptions.mode = 'text/x-rustsrc';-->\r\n<!--          break;-->\r\n<!--        case 'ruby':-->\r\n<!--          this.cmOptions.mode = 'text/x-ruby';-->\r\n<!--          break;-->\r\n<!--        case 'php':-->\r\n<!--          this.cmOptions.mode = 'text/x-php';-->\r\n<!--          break;-->\r\n<!--        case 'swift':-->\r\n<!--          this.cmOptions.mode = 'text/x-swift';-->\r\n<!--          break;-->\r\n<!--        case 'csharp':-->\r\n<!--          this.cmOptions.mode = 'text/x-csharp';-->\r\n<!--          break;-->\r\n<!--        default:-->\r\n<!--          this.cmOptions.mode = 'text/x-python';-->\r\n<!--      }-->\r\n<!--    }-->\r\n<!--  },-->\r\n<!--  created() {-->\r\n<!--    this.fetchProblemDetails();-->\r\n<!--    this.fetchUserDetails();-->\r\n<!--  },-->\r\n<!--  methods: {-->\r\n<!--    fetchProblemDetails() {-->\r\n<!--      this.$axios.get(`/problems/${this.problemId}`)-->\r\n<!--        .then(response => {-->\r\n<!--          if (response.data.code === 200) {-->\r\n<!--            this.problemTitle = response.data.data.title;-->\r\n<!--          } else {-->\r\n<!--            this.$message.error(response.data.msg || '无法获取题目信息');-->\r\n<!--          }-->\r\n<!--        })-->\r\n<!--        .catch(error => {-->\r\n<!--          console.error('获取题目信息失败:', error);-->\r\n<!--          this.$message.error('获取题目信息失败，请重试');-->\r\n<!--        });-->\r\n<!--    },-->\r\n<!--    fetchUserDetails() {-->\r\n<!--      this.$axios.get('/profile/me')-->\r\n<!--        .then(response => {-->\r\n<!--          if (response.data.code === 200) {-->\r\n<!--            this.username = response.data.data.username;-->\r\n<!--            this.userId = response.data.data.id;-->\r\n<!--          } else {-->\r\n<!--            this.$message.error(response.data.msg || '无法获取用户信息');-->\r\n<!--          }-->\r\n<!--        })-->\r\n<!--        .catch(error => {-->\r\n<!--          console.error('获取用户信息失败:', error);-->\r\n<!--          this.$message.error('获取用户信息失败，请重试');-->\r\n<!--        });-->\r\n<!--    },-->\r\n<!--    submitCode() {-->\r\n<!--      const payload = {-->\r\n<!--        problem_id: parseInt(this.problemId, 10),  // 确保 problemId 是正整数-->\r\n<!--        language: this.selectedLanguage,-->\r\n<!--        code: this.code-->\r\n<!--      };-->\r\n\r\n<!--      console.log('Sending payload:', payload);  // 调试步骤-->\r\n\r\n<!--      this.$axios.post('/submit', payload)-->\r\n<!--        .then(response => {-->\r\n<!--          if (response.data.code === 201) {-->\r\n<!--            this.submissionId = response.data.submission_id;-->\r\n<!--            this.startPolling();-->\r\n<!--            this.$message.success('代码提交成功');-->\r\n<!--          } else {-->\r\n<!--            this.$message.error(response.data.msg || '代码提交失败');-->\r\n<!--          }-->\r\n<!--        })-->\r\n<!--        .catch(error => {-->\r\n<!--          console.error('提交失败:', error);-->\r\n<!--          this.$message.error('代码提交失败，请重试');-->\r\n<!--        });-->\r\n<!--    },-->\r\n<!--    startPolling() {-->\r\n<!--      this.pollingInterval = setInterval(() => {-->\r\n<!--        this.$axios.get(`/submission/${this.submissionId}`)-->\r\n<!--          .then(response => {-->\r\n<!--            if (response.data.code === 200) {-->\r\n<!--              this.submissionResult = response.data.data;-->\r\n<!--              if (this.submissionResult.status !== 'Pending') {-->\r\n<!--                clearInterval(this.pollingInterval);-->\r\n<!--                this.$message.success('评测完成');-->\r\n<!--              }-->\r\n<!--            } else {-->\r\n<!--              this.$message.error(response.data.msg || '获取评测结果失败');-->\r\n<!--              clearInterval(this.pollingInterval);-->\r\n<!--            }-->\r\n<!--          })-->\r\n<!--          .catch(error => {-->\r\n<!--            console.error('获取评测结果失败:', error);-->\r\n<!--            this.$message.error('获取评测结果失败，请重试');-->\r\n<!--            clearInterval(this.pollingInterval);-->\r\n<!--          });-->\r\n<!--      }, 2000); // 每2秒轮询一次-->\r\n<!--    }-->\r\n<!--  }-->\r\n<!--};-->\r\n<!--</script>-->\r\n\r\n<!--<style scoped>-->\r\n<!--.submit-code-container {-->\r\n<!--  display: flex;-->\r\n<!--  flex-wrap: wrap;-->\r\n<!--  padding: 20px;-->\r\n<!--  background-color: rgba(255, 255, 255, 0.95);-->\r\n<!--  border-radius: 8px;-->\r\n<!--  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);-->\r\n<!--}-->\r\n\r\n<!--.form-section {-->\r\n<!--  flex: 2 1 60%;-->\r\n<!--  padding: 20px;-->\r\n<!--}-->\r\n\r\n<!--.info-section {-->\r\n<!--  flex: 1 1 30%;-->\r\n<!--  padding: 20px;-->\r\n<!--  margin-left: 20px;-->\r\n<!--}-->\r\n\r\n<!--.user-info, .problem-info, .submission-result {-->\r\n<!--  margin-bottom: 20px;-->\r\n<!--}-->\r\n\r\n<!--.user-info h3, .problem-info h3, .submission-result h3 {-->\r\n<!--  margin-bottom: 10px;-->\r\n<!--  color: #007bff;-->\r\n<!--}-->\r\n\r\n<!--@media (max-width: 768px) {-->\r\n<!--  .submit-code-container {-->\r\n<!--    flex-direction: column;-->\r\n<!--  }-->\r\n<!--  .info-section {-->\r\n<!--    margin-left: 0;-->\r\n<!--    margin-top: 20px;-->\r\n<!--  }-->\r\n<!--}-->\r\n<!--</style>-->\r\n\r\n\r\n\r\n\r\n\r\n\r\n<template>\r\n  <div class=\"submit-code-container\">\r\n    <div class=\"form-section\">\r\n      <el-form @submit.native.prevent=\"submitCode\">\r\n        <el-form-item label=\"编程语言\" :label-width=\"formLabelWidth\">\r\n          <el-select v-model=\"selectedLanguage\" placeholder=\"请选择编程语言\">\r\n            <el-option label=\"Python\" value=\"python\"></el-option>\r\n            <el-option label=\"JavaScript\" value=\"javascript\"></el-option>\r\n            <el-option label=\"C++\" value=\"cpp\"></el-option>\r\n            <el-option label=\"C\" value=\"c\"></el-option>\r\n            <el-option label=\"Java\" value=\"java\"></el-option>\r\n            <el-option label=\"Go\" value=\"go\"></el-option>\r\n            <el-option label=\"Rust\" value=\"rust\"></el-option>\r\n            <el-option label=\"Ruby\" value=\"ruby\"></el-option>\r\n            <el-option label=\"PHP\" value=\"php\"></el-option>\r\n            <el-option label=\"Swift\" value=\"swift\"></el-option>\r\n            <el-option label=\"C#\" value=\"csharp\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"代码\" :label-width=\"formLabelWidth\">\r\n          <codemirror\r\n  ref=\"myCm\"\r\n  v-model=\"code\"\r\n  :options=\"cmOptions\"\r\n  @ready=\"onCmReady\"\r\n  @blur=\"onCmBlur\"\r\n  @mousedown.native=\"onMouseDown\">\r\n</codemirror>\r\n\r\n\r\n        </el-form-item>\r\n        <el-button type=\"primary\" @click=\"submitCode\">提交代码</el-button>\r\n      </el-form>\r\n    </div>\r\n    <div class=\"info-section\">\r\n      <div class=\"user-info\">\r\n        <h3>用户信息</h3>\r\n        <p>用户名: {{ username }}</p>\r\n        <p>用户ID: {{ userId }}</p>\r\n      </div>\r\n      <div class=\"problem-info\">\r\n        <h3>题目信息</h3>\r\n        <p>题目ID: {{ problemId }}</p>\r\n        <p>题目名称: {{ problemTitle }}</p>\r\n      </div>\r\n      <div class=\"submission-result\" v-if=\"submissionResult\">\r\n        <h3>评测结果</h3>\r\n        <p>状态: {{ submissionResult.status }}</p>\r\n        <p>用时: {{ submissionResult.time }} ms</p>\r\n        <p>内存: {{ submissionResult.memory }} KB</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { codemirror } from 'vue-codemirror';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/mode/python/python.js';\r\nimport 'codemirror/mode/javascript/javascript.js';\r\nimport 'codemirror/mode/clike/clike.js';\r\nimport 'codemirror/mode/go/go.js';\r\nimport 'codemirror/mode/rust/rust.js';\r\nimport 'codemirror/mode/ruby/ruby.js';\r\nimport 'codemirror/mode/php/php.js';\r\nimport 'codemirror/mode/swift/swift.js';\r\nimport 'codemirror/mode/clojure/clojure.js';\r\n\r\n// 引入 CodeMirror 插件\r\nimport 'codemirror/addon/edit/matchbrackets.js';\r\nimport 'codemirror/addon/edit/closebrackets.js';\r\nimport 'codemirror/addon/fold/foldcode.js';\r\nimport 'codemirror/addon/fold/foldgutter.js';\r\nimport 'codemirror/addon/fold/brace-fold.js';\r\nimport 'codemirror/addon/fold/indent-fold.js';\r\nimport 'codemirror/addon/fold/comment-fold.js';\r\nimport 'codemirror/addon/hint/show-hint.js';\r\nimport 'codemirror/addon/hint/show-hint.css';\r\nimport 'codemirror/addon/hint/javascript-hint.js';\r\nimport 'codemirror/addon/hint/xml-hint.js';\r\nimport 'codemirror/addon/hint/html-hint.js';\r\nimport 'codemirror/addon/hint/anyword-hint.js';\r\nimport 'codemirror/addon/display/placeholder.js';\r\nimport 'codemirror/addon/fold/foldgutter.css'\r\nimport 'codemirror/addon/fold/foldcode'\r\nimport 'codemirror/addon/fold/foldgutter'\r\nimport 'codemirror/addon/fold/brace-fold'\r\nimport 'codemirror/addon/fold/comment-fold'\r\nimport 'codemirror/addon/fold/markdown-fold'\r\nimport 'codemirror/addon/fold/xml-fold'\r\nimport 'codemirror/addon/fold/indent-fold'\r\nimport 'codemirror/addon/hint/javascript-hint'\r\nimport 'codemirror/addon/hint/xml-hint'\r\nimport 'codemirror/addon/hint/sql-hint'\r\nimport 'codemirror/addon/hint/anyword-hint'\r\n\r\nimport 'codemirror/theme/monokai.css';\r\nimport 'codemirror/theme/eclipse.css';\r\nimport 'codemirror/theme/neat.css';\r\n\r\nexport default {\r\n  name: 'SubmitCode',\r\n  components: {\r\n    codemirror\r\n  },\r\n  data() {\r\n    return {\r\n      selectedLanguage: '',\r\n      code: '',\r\n      problemId: this.$route.params.problemId,\r\n      username: '用户', // 需要从后端获取\r\n      userId: 1, // 需要从后端获取\r\n      problemTitle: '题目名称', // 需要从后端获取\r\n      formLabelWidth: '100px',\r\n      submissionResult: null,\r\n      submissionId: null,\r\n      pollingInterval: null,\r\n      // cmOptions: {\r\n      //\r\n      //   tabSize: 4,\r\n      //   mode: 'text/x-python',\r\n      //   theme: 'default',\r\n      //   lineNumbers: true,\r\n      //   line: true,\r\n      //   matchBrackets: true, // 括号匹配\r\n      //   autoCloseBrackets: true, // 自动关闭括号\r\n      //   foldGutter: true, // 代码折叠\r\n      //\r\n      //   gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\r\n      //   extraKeys: { \"Ctrl-Space\": \"autocomplete\" }, // 自动补全\r\n      //   placeholder: '请输入您的代码...', // 占位符\r\n      //   // more CodeMirror options...\r\n      //\r\n      // }\r\n      cmOptions: {\r\n        theme: 'monokai',\r\n        mode: 'c++',\r\n        readOnly: false,\r\n        tabSize: 4, // 制表符\r\n        indentUnit: 4, // 缩进位数\r\n        lineNumbers: true,\r\n        ineWiseCopyCut: true,\r\n        viewportMargin: 1000,\r\n        autofocus: true,\r\n        autocorrect: true,\r\n        spellcheck: true,\r\n       // specialChars: /[\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u061c\\u200b-\\u200f\\u2028\\u2029\\ufeff\\ufff9-\\ufffc]/g,\r\n        specialCharPlaceholder: function (ch) {\r\n          let token = document.createElement(\"span\");\r\n          token.className = \"cm-invalidchar\";\r\n          token.title = \"\\\\u\" + ch.charCodeAt(0).toString(16);\r\n          token.setAttribute(\"aria-label\", token.title);\r\n          return token\r\n        },\r\n        extraKeys: {\r\n          Tab: (cm) => {\r\n            if (cm.somethingSelected()) {\r\n              cm.indentSelection('add');\r\n            } else {\r\n              cm.replaceSelection(Array(cm.getOption(\"indentUnit\") + 1).join(\" \"), \"end\", \"+input\");  // 光标处插入 indentUnit 个空格\r\n            }\r\n          },\r\n        },\r\n        lint: false,\r\n        gutters: [\r\n            \"CodeMirror-lint-markers\",\r\n          \"CodeMirror-linenumbers\",\r\n          \"CodeMirror-foldgutter\"\r\n        ],\r\n        lineWrapping: false,\r\n        foldGutter: true, // 启用行槽中的代码折叠\r\n        autoCloseBrackets: true, // 自动闭合符号\r\n        autoCloseTags: true,\r\n        matchTags: { bothTags: true },\r\n        matchBrackets: true, // 在光标点击紧挨{、]括号左、右侧时，自动突出显示匹配的括号 }、]\r\n        styleSelectedText: true,\r\n        styleActiveLine: true,\r\n        autoRefresh: true,\r\n        highlightSelectionMatches: {\r\n          minChars: 2,\r\n          trim: true,\r\n          style: \"matchhighlight\",\r\n          showToken: false\r\n        },\r\n        hintOptions: {\r\n          completeSingle: false\r\n        }\r\n}\r\n    };\r\n  },\r\n  watch: {\r\n    selectedLanguage(newVal) {\r\n      switch (newVal) {\r\n        case 'python':\r\n          this.cmOptions.mode = 'text/x-python';\r\n          break;\r\n        case 'javascript':\r\n          this.cmOptions.mode = 'text/javascript';\r\n          break;\r\n        case 'cpp':\r\n          this.cmOptions.mode = 'text/x-c++src';\r\n          break;\r\n        case 'c':\r\n          this.cmOptions.mode = 'text/x-csrc';\r\n          break;\r\n        case 'java':\r\n          this.cmOptions.mode = 'text/x-java';\r\n          break;\r\n        case 'go':\r\n          this.cmOptions.mode = 'text/x-go';\r\n          break;\r\n        case 'rust':\r\n          this.cmOptions.mode = 'text/x-rustsrc';\r\n          break;\r\n        case 'ruby':\r\n          this.cmOptions.mode = 'text/x-ruby';\r\n          break;\r\n        case 'php':\r\n          this.cmOptions.mode = 'text/x-php';\r\n          break;\r\n        case 'swift':\r\n          this.cmOptions.mode = 'text/x-swift';\r\n          break;\r\n        case 'csharp':\r\n          this.cmOptions.mode = 'text/x-csharp';\r\n          break;\r\n        default:\r\n          this.cmOptions.mode = 'text/x-python';\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchProblemDetails();\r\n    this.fetchUserDetails();\r\n  },\r\n  methods: {\r\n    fetchProblemDetails() {\r\n      this.$axios.get(`/problems/${this.problemId}`)\r\n        .then(response => {\r\n          if (response.data.code === 200) {\r\n            this.problemTitle = response.data.data.title;\r\n          } else {\r\n            this.$message.error(response.data.msg || '无法获取题目信息');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('获取题目信息失败:', error);\r\n          this.$message.error('获取题目信息失败，请重试');\r\n        });\r\n    },\r\n    fetchUserDetails() {\r\n      this.$axios.get('/profile/me')\r\n        .then(response => {\r\n          if (response.data.code === 200) {\r\n            this.username = response.data.data.username;\r\n            this.userId = response.data.data.id;\r\n          } else {\r\n            this.$message.error(response.data.msg || '无法获取用户信息');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('获取用户信息失败:', error);\r\n          this.$message.error('获取用户信息失败，请重试');\r\n        });\r\n    },\r\n    submitCode() {\r\n      const payload = {\r\n        problem_id: parseInt(this.problemId, 10),  // 确保 problemId 是正整数\r\n        language: this.selectedLanguage,\r\n        code: this.code\r\n      };\r\n\r\n      console.log('Sending payload:', payload);  // 调试步骤\r\n\r\n      this.$axios.post('/submit', payload)\r\n        .then(response => {\r\n          if (response.data.code === 201) {\r\n            this.submissionId = response.data.submission_id;\r\n            this.startPolling();\r\n            this.$message.success('代码提交成功');\r\n          } else {\r\n            this.$message.error(response.data.msg || '代码提交失败');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('提交失败:', error);\r\n          this.$message.error('代码提交失败，请重试');\r\n        });\r\n    },\r\n    startPolling() {\r\n      this.pollingInterval = setInterval(() => {\r\n        this.$axios.get(`/submission/${this.submissionId}`)\r\n          .then(response => {\r\n            if (response.data.code === 200) {\r\n              this.submissionResult = response.data.data;\r\n              if (this.submissionResult.status !== 'Pending') {\r\n                clearInterval(this.pollingInterval);\r\n                this.$message.success('评测完成');\r\n              }\r\n            } else {\r\n              this.$message.error(response.data.msg || '获取评测结果失败');\r\n              clearInterval(this.pollingInterval);\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('获取评测结果失败:', error);\r\n            this.$message.error('获取评测结果失败，请重试');\r\n            clearInterval(this.pollingInterval);\r\n          });\r\n      }, 2000); // 每2秒轮询一次\r\n    },\r\n    onCmReady(cm) {\r\n  // 这里的 cm 对象就是 codemirror 对象，等于 this.$refs.myCm.codemirror\r\n  cm.on(\"inputRead\", (cm, obj) => {\r\n    if (obj.text && obj.text.length > 0) {\r\n    let c = obj.text[0].charAt(obj.text[0].length - 1)\r\n      if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {\r\n        cm.showHint({ completeSingle:false })\r\n      }\r\n    }\r\n  })\r\n}\r\n  }\r\n};\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.CodeMirror-hints {\r\n  position: absolute;\r\n  z-index: 10;\r\n  overflow: hidden;\r\n  list-style: none;\r\n\r\n  margin: 0;\r\n  padding: 2px;\r\n\r\n  -webkit-box-shadow: 2px 3px 5px rgba(0,0,0,.2);\r\n  -moz-box-shadow: 2px 3px 5px rgba(0,0,0,.2);\r\n  box-shadow: 2px 3px 5px rgba(0,0,0,.2);\r\n  border-radius: 3px;\r\n  border: 1px solid silver;\r\n\r\n  background: white;\r\n  font-size: 90%;\r\n  font-family: monospace;\r\n\r\n  max-height: 20em;\r\n  overflow-y: auto;\r\n}\r\n.submit-code-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 20px;\r\n  background-color: rgba(255, 255, 255, 0.95);\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.form-section {\r\n  flex: 2 1 60%;\r\n  padding: 20px;\r\n}\r\n\r\n.info-section {\r\n  flex: 1 1 30%;\r\n  padding: 20px;\r\n  margin-left: 20px;\r\n}\r\n\r\n.user-info, .problem-info, .submission-result {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.user-info h3, .problem-info h3, .submission-result h3 {\r\n  margin-bottom: 10px;\r\n  color: #007bff;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .submit-code-container {\r\n    flex-direction: column;\r\n  }\r\n  .info-section {\r\n    margin-left: 0;\r\n    margin-top: 20px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}