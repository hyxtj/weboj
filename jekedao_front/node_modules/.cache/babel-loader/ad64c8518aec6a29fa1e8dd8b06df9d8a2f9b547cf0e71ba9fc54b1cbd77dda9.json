{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"./foldcode\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\", \"./foldcode\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"foldGutter\", false, function (cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.clearGutter(cm.state.foldGutter.options.gutter);\n      cm.state.foldGutter = null;\n      cm.off(\"gutterClick\", onGutterClick);\n      cm.off(\"changes\", onChange);\n      cm.off(\"viewportChange\", onViewportChange);\n      cm.off(\"fold\", onFold);\n      cm.off(\"unfold\", onFold);\n      cm.off(\"swapDoc\", onChange);\n      cm.off(\"optionChange\", optionChange);\n    }\n    if (val) {\n      cm.state.foldGutter = new State(parseOptions(val));\n      updateInViewport(cm);\n      cm.on(\"gutterClick\", onGutterClick);\n      cm.on(\"changes\", onChange);\n      cm.on(\"viewportChange\", onViewportChange);\n      cm.on(\"fold\", onFold);\n      cm.on(\"unfold\", onFold);\n      cm.on(\"swapDoc\", onChange);\n      cm.on(\"optionChange\", optionChange);\n    }\n  });\n  var Pos = CodeMirror.Pos;\n  function State(options) {\n    this.options = options;\n    this.from = this.to = 0;\n  }\n  function parseOptions(opts) {\n    if (opts === true) opts = {};\n    if (opts.gutter == null) opts.gutter = \"CodeMirror-foldgutter\";\n    if (opts.indicatorOpen == null) opts.indicatorOpen = \"CodeMirror-foldgutter-open\";\n    if (opts.indicatorFolded == null) opts.indicatorFolded = \"CodeMirror-foldgutter-folded\";\n    return opts;\n  }\n  function isFolded(cm, line) {\n    var marks = cm.findMarks(Pos(line, 0), Pos(line + 1, 0));\n    for (var i = 0; i < marks.length; ++i) {\n      if (marks[i].__isFold) {\n        var fromPos = marks[i].find(-1);\n        if (fromPos && fromPos.line === line) return marks[i];\n      }\n    }\n  }\n  function marker(spec) {\n    if (typeof spec == \"string\") {\n      var elt = document.createElement(\"div\");\n      elt.className = spec + \" CodeMirror-guttermarker-subtle\";\n      return elt;\n    } else {\n      return spec.cloneNode(true);\n    }\n  }\n  function updateFoldInfo(cm, from, to) {\n    var opts = cm.state.foldGutter.options,\n      cur = from - 1;\n    var minSize = cm.foldOption(opts, \"minFoldSize\");\n    var func = cm.foldOption(opts, \"rangeFinder\");\n    // we can reuse the built-in indicator element if its className matches the new state\n    var clsFolded = typeof opts.indicatorFolded == \"string\" && classTest(opts.indicatorFolded);\n    var clsOpen = typeof opts.indicatorOpen == \"string\" && classTest(opts.indicatorOpen);\n    cm.eachLine(from, to, function (line) {\n      ++cur;\n      var mark = null;\n      var old = line.gutterMarkers;\n      if (old) old = old[opts.gutter];\n      if (isFolded(cm, cur)) {\n        if (clsFolded && old && clsFolded.test(old.className)) return;\n        mark = marker(opts.indicatorFolded);\n      } else {\n        var pos = Pos(cur, 0);\n        var range = func && func(cm, pos);\n        if (range && range.to.line - range.from.line >= minSize) {\n          if (clsOpen && old && clsOpen.test(old.className)) return;\n          mark = marker(opts.indicatorOpen);\n        }\n      }\n      if (!mark && !old) return;\n      cm.setGutterMarker(line, opts.gutter, mark);\n    });\n  }\n\n  // copied from CodeMirror/src/util/dom.js\n  function classTest(cls) {\n    return new RegExp(\"(^|\\\\s)\" + cls + \"(?:$|\\\\s)\\\\s*\");\n  }\n  function updateInViewport(cm) {\n    var vp = cm.getViewport(),\n      state = cm.state.foldGutter;\n    if (!state) return;\n    cm.operation(function () {\n      updateFoldInfo(cm, vp.from, vp.to);\n    });\n    state.from = vp.from;\n    state.to = vp.to;\n  }\n  function onGutterClick(cm, line, gutter) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    if (gutter != opts.gutter) return;\n    var folded = isFolded(cm, line);\n    if (folded) folded.clear();else cm.foldCode(Pos(line, 0), opts);\n  }\n  function optionChange(cm, option) {\n    if (option == \"mode\") onChange(cm);\n  }\n  function onChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    state.from = state.to = 0;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function () {\n      updateInViewport(cm);\n    }, opts.foldOnChangeTimeSpan || 600);\n  }\n  function onViewportChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function () {\n      var vp = cm.getViewport();\n      if (state.from == state.to || vp.from - state.to > 20 || state.from - vp.to > 20) {\n        updateInViewport(cm);\n      } else {\n        cm.operation(function () {\n          if (vp.from < state.from) {\n            updateFoldInfo(cm, vp.from, state.from);\n            state.from = vp.from;\n          }\n          if (vp.to > state.to) {\n            updateFoldInfo(cm, state.to, vp.to);\n            state.to = vp.to;\n          }\n        });\n      }\n    }, opts.updateViewportTimeSpan || 400);\n  }\n  function onFold(cm, from) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var line = from.line;\n    if (line >= state.from && line < state.to) updateFoldInfo(cm, line, line + 1);\n  }\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineOption","cm","val","old","Init","clearGutter","state","foldGutter","options","gutter","off","onGutterClick","onChange","onViewportChange","onFold","optionChange","State","parseOptions","updateInViewport","on","Pos","from","to","opts","indicatorOpen","indicatorFolded","isFolded","line","marks","findMarks","i","length","__isFold","fromPos","find","marker","spec","elt","document","createElement","className","cloneNode","updateFoldInfo","cur","minSize","foldOption","func","clsFolded","classTest","clsOpen","eachLine","mark","gutterMarkers","test","pos","range","setGutterMarker","cls","RegExp","vp","getViewport","operation","folded","clear","foldCode","option","clearTimeout","changeUpdate","setTimeout","foldOnChangeTimeSpan","updateViewportTimeSpan"],"sources":["D:/web2/jekedao_front/node_modules/codemirror/addon/fold/foldgutter.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"./foldcode\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"./foldcode\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"foldGutter\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.clearGutter(cm.state.foldGutter.options.gutter);\n      cm.state.foldGutter = null;\n      cm.off(\"gutterClick\", onGutterClick);\n      cm.off(\"changes\", onChange);\n      cm.off(\"viewportChange\", onViewportChange);\n      cm.off(\"fold\", onFold);\n      cm.off(\"unfold\", onFold);\n      cm.off(\"swapDoc\", onChange);\n      cm.off(\"optionChange\", optionChange);\n    }\n    if (val) {\n      cm.state.foldGutter = new State(parseOptions(val));\n      updateInViewport(cm);\n      cm.on(\"gutterClick\", onGutterClick);\n      cm.on(\"changes\", onChange);\n      cm.on(\"viewportChange\", onViewportChange);\n      cm.on(\"fold\", onFold);\n      cm.on(\"unfold\", onFold);\n      cm.on(\"swapDoc\", onChange);\n      cm.on(\"optionChange\", optionChange);\n    }\n  });\n\n  var Pos = CodeMirror.Pos;\n\n  function State(options) {\n    this.options = options;\n    this.from = this.to = 0;\n  }\n\n  function parseOptions(opts) {\n    if (opts === true) opts = {};\n    if (opts.gutter == null) opts.gutter = \"CodeMirror-foldgutter\";\n    if (opts.indicatorOpen == null) opts.indicatorOpen = \"CodeMirror-foldgutter-open\";\n    if (opts.indicatorFolded == null) opts.indicatorFolded = \"CodeMirror-foldgutter-folded\";\n    return opts;\n  }\n\n  function isFolded(cm, line) {\n    var marks = cm.findMarks(Pos(line, 0), Pos(line + 1, 0));\n    for (var i = 0; i < marks.length; ++i) {\n      if (marks[i].__isFold) {\n        var fromPos = marks[i].find(-1);\n        if (fromPos && fromPos.line === line)\n          return marks[i];\n      }\n    }\n  }\n\n  function marker(spec) {\n    if (typeof spec == \"string\") {\n      var elt = document.createElement(\"div\");\n      elt.className = spec + \" CodeMirror-guttermarker-subtle\";\n      return elt;\n    } else {\n      return spec.cloneNode(true);\n    }\n  }\n\n  function updateFoldInfo(cm, from, to) {\n    var opts = cm.state.foldGutter.options, cur = from - 1;\n    var minSize = cm.foldOption(opts, \"minFoldSize\");\n    var func = cm.foldOption(opts, \"rangeFinder\");\n    // we can reuse the built-in indicator element if its className matches the new state\n    var clsFolded = typeof opts.indicatorFolded == \"string\" && classTest(opts.indicatorFolded);\n    var clsOpen = typeof opts.indicatorOpen == \"string\" && classTest(opts.indicatorOpen);\n    cm.eachLine(from, to, function(line) {\n      ++cur;\n      var mark = null;\n      var old = line.gutterMarkers;\n      if (old) old = old[opts.gutter];\n      if (isFolded(cm, cur)) {\n        if (clsFolded && old && clsFolded.test(old.className)) return;\n        mark = marker(opts.indicatorFolded);\n      } else {\n        var pos = Pos(cur, 0);\n        var range = func && func(cm, pos);\n        if (range && range.to.line - range.from.line >= minSize) {\n          if (clsOpen && old && clsOpen.test(old.className)) return;\n          mark = marker(opts.indicatorOpen);\n        }\n      }\n      if (!mark && !old) return;\n      cm.setGutterMarker(line, opts.gutter, mark);\n    });\n  }\n\n  // copied from CodeMirror/src/util/dom.js\n  function classTest(cls) { return new RegExp(\"(^|\\\\s)\" + cls + \"(?:$|\\\\s)\\\\s*\") }\n\n  function updateInViewport(cm) {\n    var vp = cm.getViewport(), state = cm.state.foldGutter;\n    if (!state) return;\n    cm.operation(function() {\n      updateFoldInfo(cm, vp.from, vp.to);\n    });\n    state.from = vp.from; state.to = vp.to;\n  }\n\n  function onGutterClick(cm, line, gutter) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    if (gutter != opts.gutter) return;\n    var folded = isFolded(cm, line);\n    if (folded) folded.clear();\n    else cm.foldCode(Pos(line, 0), opts);\n  }\n\n  function optionChange(cm, option) {\n    if (option == \"mode\") onChange(cm)\n  }\n\n  function onChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    state.from = state.to = 0;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function() { updateInViewport(cm); }, opts.foldOnChangeTimeSpan || 600);\n  }\n\n  function onViewportChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function() {\n      var vp = cm.getViewport();\n      if (state.from == state.to || vp.from - state.to > 20 || state.from - vp.to > 20) {\n        updateInViewport(cm);\n      } else {\n        cm.operation(function() {\n          if (vp.from < state.from) {\n            updateFoldInfo(cm, vp.from, state.from);\n            state.from = vp.from;\n          }\n          if (vp.to > state.to) {\n            updateFoldInfo(cm, state.to, vp.to);\n            state.to = vp.to;\n          }\n        });\n      }\n    }, opts.updateViewportTimeSpan || 400);\n  }\n\n  function onFold(cm, from) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var line = from.line;\n    if (line >= state.from && line < state.to)\n      updateFoldInfo(cm, line, line + 1);\n  }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}