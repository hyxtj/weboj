{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var WORD = /[\\w$]+/,\n    RANGE = 500;\n  CodeMirror.registerHelper(\"hint\", \"anyword\", function (editor, options) {\n    var word = options && options.word || WORD;\n    var range = options && options.range || RANGE;\n    var cur = editor.getCursor(),\n      curLine = editor.getLine(cur.line);\n    var end = cur.ch,\n      start = end;\n    while (start && word.test(curLine.charAt(start - 1))) --start;\n    var curWord = start != end && curLine.slice(start, end);\n    var list = options && options.list || [],\n      seen = {};\n    var re = new RegExp(word.source, \"g\");\n    for (var dir = -1; dir <= 1; dir += 2) {\n      var line = cur.line,\n        endLine = Math.min(Math.max(line + dir * range, editor.firstLine()), editor.lastLine()) + dir;\n      for (; line != endLine; line += dir) {\n        var text = editor.getLine(line),\n          m;\n        while (m = re.exec(text)) {\n          if (line == cur.line && m[0] === curWord) continue;\n          if ((!curWord || m[0].lastIndexOf(curWord, 0) == 0) && !Object.prototype.hasOwnProperty.call(seen, m[0])) {\n            seen[m[0]] = true;\n            list.push(m[0]);\n          }\n        }\n      }\n    }\n    return {\n      list: list,\n      from: CodeMirror.Pos(cur.line, start),\n      to: CodeMirror.Pos(cur.line, end)\n    };\n  });\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","WORD","RANGE","registerHelper","editor","options","word","range","cur","getCursor","curLine","getLine","line","end","ch","start","test","charAt","curWord","slice","list","seen","re","RegExp","source","dir","endLine","Math","min","max","firstLine","lastLine","text","m","exec","lastIndexOf","Object","prototype","hasOwnProperty","call","push","from","Pos","to"],"sources":["D:/web2/jekedao_front/node_modules/codemirror/addon/hint/anyword-hint.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var WORD = /[\\w$]+/, RANGE = 500;\n\n  CodeMirror.registerHelper(\"hint\", \"anyword\", function(editor, options) {\n    var word = options && options.word || WORD;\n    var range = options && options.range || RANGE;\n    var cur = editor.getCursor(), curLine = editor.getLine(cur.line);\n    var end = cur.ch, start = end;\n    while (start && word.test(curLine.charAt(start - 1))) --start;\n    var curWord = start != end && curLine.slice(start, end);\n\n    var list = options && options.list || [], seen = {};\n    var re = new RegExp(word.source, \"g\");\n    for (var dir = -1; dir <= 1; dir += 2) {\n      var line = cur.line, endLine = Math.min(Math.max(line + dir * range, editor.firstLine()), editor.lastLine()) + dir;\n      for (; line != endLine; line += dir) {\n        var text = editor.getLine(line), m;\n        while (m = re.exec(text)) {\n          if (line == cur.line && m[0] === curWord) continue;\n          if ((!curWord || m[0].lastIndexOf(curWord, 0) == 0) && !Object.prototype.hasOwnProperty.call(seen, m[0])) {\n            seen[m[0]] = true;\n            list.push(m[0]);\n          }\n        }\n      }\n    }\n    return {list: list, from: CodeMirror.Pos(cur.line, start), to: CodeMirror.Pos(cur.line, end)};\n  });\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}