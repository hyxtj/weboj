{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'NavBar',\n  data() {\n    return {\n      menuVisible: false,\n      isLoggedIn: false,\n      username: '',\n      userId: '123' // 假设用户ID为123\n    };\n  },\n  computed: {\n    menuIcon() {\n      return this.menuVisible ? 'el-icon-menu-vertical' : 'el-icon-menu';\n    }\n  },\n  methods: {\n    toggleMenu() {\n      this.menuVisible = !this.menuVisible;\n    },\n    navigateTo(route) {\n      this.menuVisible = false;\n      this.$router.push(route).catch(err => {\n        console.error('路由跳转失败:', err);\n        this.menuVisible = true;\n      });\n    },\n    handleClose(done) {\n      this.menuVisible = false;\n      done();\n    },\n    login() {\n      // 登录逻辑\n      this.isLoggedIn = true;\n      this.username = '用户'; // 假设用户名为“用户”\n      this.userId = '123'; // 假设用户ID为123\n    },\n    logout() {\n      // 退出登录逻辑\n      this.isLoggedIn = false;\n      this.username = '';\n      this.userId = '';\n    },\n    navigateToProfile() {\n      this.navigateTo(`/profile/${this.userId}`);\n    }\n  }\n};","map":{"version":3,"names":["name","data","menuVisible","isLoggedIn","username","userId","computed","menuIcon","methods","toggleMenu","navigateTo","route","$router","push","catch","err","console","error","handleClose","done","login","logout","navigateToProfile"],"sources":["src/components/NavBar.vue"],"sourcesContent":["<template>\r\n  <div class=\"navbar\">\r\n    <el-button type=\"primary\" @click=\"toggleMenu\">\r\n      <i :class=\"menuIcon\"></i>\r\n    </el-button>\r\n    <el-drawer\r\n      title=\"导航菜单\"\r\n      :visible.sync=\"menuVisible\"\r\n      direction=\"ltr\"\r\n      size=\"20%\"\r\n      :wrapper-closable=\"false\"\r\n      :modal-append-to-body=\"false\"\r\n      @close=\"handleClose\"\r\n    >\r\n      <div class=\"menu\">\r\n        <el-button type=\"text\" @click=\"navigateTo('/')\">Welcome</el-button>\r\n        <template v-if=\"!isLoggedIn\">\r\n          <el-button type=\"text\" @click=\"navigateTo('/login')\">登录</el-button>\r\n          <el-button type=\"text\" @click=\"navigateTo('/register')\">注册</el-button>\r\n        </template>\r\n        <template v-else>\r\n          <el-button type=\"text\" @click=\"navigateToProfile\">个人主页</el-button>\r\n          <el-button type=\"text\" @click=\"logout\">退出登录</el-button>\r\n        </template>\r\n        <el-button type=\"text\" @click=\"navigateTo('/square')\">广场</el-button>\r\n        <el-button type=\"text\" @click=\"navigateTo('/problemset')\">题库</el-button>\r\n        <el-button type=\"text\" @click=\"navigateTo('/problemlist')\">题单</el-button>\r\n        <el-button type=\"text\" @click=\"navigateTo('/contest')\">比赛</el-button>\r\n        <el-button type=\"text\" @click=\"navigateTo('/discussion')\">讨论</el-button>\r\n      </div>\r\n    </el-drawer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'NavBar',\r\n  data() {\r\n    return {\r\n      menuVisible: false,\r\n      isLoggedIn: false,\r\n      username: '',\r\n      userId: '123' // 假设用户ID为123\r\n    };\r\n  },\r\n  computed: {\r\n    menuIcon() {\r\n      return this.menuVisible ? 'el-icon-menu-vertical' : 'el-icon-menu';\r\n    }\r\n  },\r\n  methods: {\r\n    toggleMenu() {\r\n      this.menuVisible = !this.menuVisible;\r\n    },\r\n    navigateTo(route) {\r\n      this.menuVisible = false;\r\n      this.$router.push(route).catch(err => {\r\n        console.error('路由跳转失败:', err);\r\n        this.menuVisible = true;\r\n      });\r\n    },\r\n    handleClose(done) {\r\n      this.menuVisible = false;\r\n      done();\r\n    },\r\n    login() {\r\n      // 登录逻辑\r\n      this.isLoggedIn = true;\r\n      this.username = '用户'; // 假设用户名为“用户”\r\n      this.userId = '123'; // 假设用户ID为123\r\n    },\r\n    logout() {\r\n      // 退出登录逻辑\r\n      this.isLoggedIn = false;\r\n      this.username = '';\r\n      this.userId = '';\r\n    },\r\n    navigateToProfile() {\r\n      this.navigateTo(`/profile/${this.userId}`);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.navbar {\r\n  position: fixed;\r\n  top: 10px;\r\n  left: 10px;\r\n  z-index: 1000; /* 确保按钮置于所有层的上方 */\r\n}\r\n\r\n.menu {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 20px;\r\n}\r\n</style>"],"mappings":";AAmCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;MACAC,UAAA;MACAC,QAAA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACAC,SAAA;MACA,YAAAL,WAAA;IACA;EACA;EACAM,OAAA;IACAC,WAAA;MACA,KAAAP,WAAA,SAAAA,WAAA;IACA;IACAQ,WAAAC,KAAA;MACA,KAAAT,WAAA;MACA,KAAAU,OAAA,CAAAC,IAAA,CAAAF,KAAA,EAAAG,KAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,KAAA,YAAAF,GAAA;QACA,KAAAb,WAAA;MACA;IACA;IACAgB,YAAAC,IAAA;MACA,KAAAjB,WAAA;MACAiB,IAAA;IACA;IACAC,MAAA;MACA;MACA,KAAAjB,UAAA;MACA,KAAAC,QAAA;MACA,KAAAC,MAAA;IACA;IACAgB,OAAA;MACA;MACA,KAAAlB,UAAA;MACA,KAAAC,QAAA;MACA,KAAAC,MAAA;IACA;IACAiB,kBAAA;MACA,KAAAZ,UAAA,kBAAAL,MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}